spriteset(spriteset_toki_25000_brown_a, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_toki_25000_brown_b, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_toki_25000_green, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_toki_25000_black, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 96)
}

//15000
spriteset(spriteset_toki_15000_black, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 128)
}

//loads
spriteset(spriteset_toki_25000_tarp_brown, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_toki_25000_tarp_green, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_toki_25000_tarp_grey, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_toki_25000_bulk_quarter, "gfx/freight/toki_25000.png") {
	template_2cc_anim(1, 256)
}

spriteset(spriteset_toki_25000_bulk_half, "gfx/freight/toki_25000.png") {
	template_2cc_anim(1, 288)
}

spriteset(spriteset_toki_25000_bulk_full, "gfx/freight/toki_25000.png") {
	template_2cc_anim(1, 320)
}

spriteset(spriteset_toki_25000_blank, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 1)
}

/* for future loads
spriteset(spriteset_toki_25000_, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_toki_25000_, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_toki_25000_, "gfx/freight/toki_25000.png") {
	template_2cc_stdm(180, 96)
}
*/

spriteset(spriteset_toki_25000_coils_half, "gfx/freight/toki_25000.png") {
	template_2cc_anim(180, 128)
}

spriteset(spriteset_toki_25000_coils_full, "gfx/freight/toki_25000.png") {
	template_2cc_anim(180, 160)
}

spriteset(spriteset_toki_25000_rods_half, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_toki_25000_rods_full, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_toki_25000_conts_a, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 256)
}

spriteset(spriteset_toki_25000_conts_b, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 288)
}

spriteset(spriteset_toki_25000_conts_c, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 320)
}



//purchase
spriteset(spriteset_toki_15000_jgr_purchase, "gfx/freight/toki_25000.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_toki_15000_jnr_purchase, "gfx/freight/toki_25000.png") {
	template_purchase(89, 352)
}

spriteset(spriteset_toki_25000_jnr_purchase, "gfx/freight/toki_25000.png") {
	template_purchase(180, 352)
}

spriteset(spriteset_toki_25000_jrf_purchase, "gfx/freight/toki_25000.png") {
	template_purchase(268, 352)
}





spritegroup spritegroup_toki_25000_bulk {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_bulk_quarter, spriteset_toki_25000_bulk_half, spriteset_toki_25000_bulk_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_bulk_quarter, spriteset_toki_25000_bulk_half, spriteset_toki_25000_bulk_full];
}

spritegroup spritegroup_toki_25000_bulk_tarp_brown {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_bulk_quarter, spriteset_toki_25000_bulk_half, spriteset_toki_25000_bulk_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_brown];
}

spritegroup spritegroup_toki_25000_bulk_tarp_green {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_bulk_quarter, spriteset_toki_25000_bulk_half, spriteset_toki_25000_bulk_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_green];
}

spritegroup spritegroup_toki_25000_bulk_tarp_grey {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_bulk_quarter, spriteset_toki_25000_bulk_half, spriteset_toki_25000_bulk_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_grey];
}


spritegroup spritegroup_toki_25000_rods {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_rods_half, spriteset_toki_25000_rods_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_rods_half, spriteset_toki_25000_rods_full];
}

spritegroup spritegroup_toki_25000_rods_tarp_brown {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_rods_half, spriteset_toki_25000_rods_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_brown];
}

spritegroup spritegroup_toki_25000_rods_tarp_green {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_rods_half, spriteset_toki_25000_rods_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_green];
}

spritegroup spritegroup_toki_25000_rods_tarp_grey {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_rods_half, spriteset_toki_25000_rods_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_grey];
}


spritegroup spritegroup_toki_25000_coils {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_coils_half, spriteset_toki_25000_coils_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_coils_half, spriteset_toki_25000_coils_full];
}

spritegroup spritegroup_toki_25000_conts_a {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_conts_a];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_conts_a];
}

spritegroup spritegroup_toki_25000_conts_b {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_conts_b];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_conts_b];
}

spritegroup spritegroup_toki_25000_conts_c {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_conts_c];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_conts_c];
}

//random loads

random_switch (FEAT_TRAINS, SELF, random_toki_25000_conts) {
 1: spritegroup_toki_25000_conts_a;
 1: spritegroup_toki_25000_conts_b;
 1: spritegroup_toki_25000_conts_c;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_bulk_tarp) {
 1: spritegroup_toki_25000_bulk_tarp_brown;
 1: spritegroup_toki_25000_bulk_tarp_green;
 1: spritegroup_toki_25000_bulk_tarp_grey;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_rods_tarp) {
 1: spritegroup_toki_25000_rods_tarp_brown;
 1: spritegroup_toki_25000_rods_tarp_green;
 1: spritegroup_toki_25000_rods_tarp_grey;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_rods_covered) {
 1: random_toki_25000_rods_tarp;
 1: spritegroup_toki_25000_rods;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_metal) {
 2: spritegroup_toki_25000_coils;
 1: spritegroup_toki_25000_rods;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_supplies) {
 2: random_toki_25000_conts;
 1: random_toki_25000_rods_tarp;
}


switch(FEAT_TRAINS, SELF, switch_toki_25000_tarp_yeardep, current_year) {
	0..1990: random_toki_25000_bulk_tarp;
	spritegroup_toki_25000_bulk_tarp_green;
}



//cargo type switches

switch(FEAT_TRAINS, SELF, switch_toki_25000_cargo_class, cargo_classes) {
	bitmask(CC_BULK): spritegroup_toki_25000_bulk;
	bitmask(CC_BULK, CC_COVERED): switch_toki_25000_tarp_yeardep;
	bitmask(CC_COVERED): switch_toki_25000_tarp_yeardep;
	bitmask(CC_PIECE_GOODS): random_toki_25000_conts;
	random_toki_25000_rods_covered;
}

switch(FEAT_TRAINS, SELF, switch_toki_25000_cargo_type, cargo_type_in_veh) {
	IRON: random_toki_25000_metal;
	STEL: spritegroup_toki_25000_coils;
	METL: spritegroup_toki_25000_coils;
	ALUM: spritegroup_toki_25000_coils;
	ZINC: random_toki_25000_metal;
	COPR: random_toki_25000_metal;
	STST: random_toki_25000_metal;
	STSH: random_toki_25000_metal;
	STAL: random_toki_25000_metal;
	STCB: spritegroup_toki_25000_coils;

	ENSP: random_toki_25000_supplies;
	FMSP: random_toki_25000_supplies;
	MNSP: random_toki_25000_supplies;
	POWR: random_toki_25000_supplies;
	VPTS: random_toki_25000_supplies;
	MPTS: random_toki_25000_supplies;
	GOOD: random_toki_25000_supplies;

	BDMT: random_toki_25000_supplies;
	WDPR: random_toki_25000_rods_covered;
	GLAS: random_toki_25000_rods_tarp;
	BRCK: random_toki_25000_rods_covered;
	STWR: random_toki_25000_rods_covered;
	STSE: random_toki_25000_rods_covered;

	PAPR: random_toki_25000_conts;
	TYRE: random_toki_25000_conts;
	WOOL: random_toki_25000_conts;
	TEXT: random_toki_25000_conts;

	SCMT: spritegroup_toki_25000_bulk;
	RCYC: spritegroup_toki_25000_bulk;
	WSTE: spritegroup_toki_25000_bulk;
	SGCN: spritegroup_toki_25000_bulk;
	SULP: switch_toki_25000_tarp_yeardep;
	SEED: switch_toki_25000_tarp_yeardep;
	FERT: switch_toki_25000_tarp_yeardep;
	SASH: switch_toki_25000_tarp_yeardep;
	FRUT: switch_toki_25000_tarp_yeardep;
	FRVG: switch_toki_25000_tarp_yeardep;
	TATO: switch_toki_25000_tarp_yeardep;
	GRAI: switch_toki_25000_tarp_yeardep;
	CMNT: switch_toki_25000_tarp_yeardep;
	COCO: switch_toki_25000_tarp_yeardep;
	SALT: switch_toki_25000_tarp_yeardep;
	NHNO: switch_toki_25000_tarp_yeardep;
	FECR: switch_toki_25000_tarp_yeardep;
	QLME: switch_toki_25000_tarp_yeardep;
	CBLK: switch_toki_25000_tarp_yeardep;

	WOOD: spritegroup_toki_25000_rods;
	PIPE: spritegroup_toki_25000_rods;

	switch_toki_25000_cargo_class;
}


//random livery


random_switch (FEAT_TRAINS, SELF, random_toki_25000_all) {
 6: spriteset_toki_25000_brown_a;
 4: spriteset_toki_25000_brown_b;
 2: spriteset_toki_25000_black;
 1: spriteset_toki_25000_green;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_old) {
 8: spriteset_toki_25000_brown_a;
 4: spriteset_toki_25000_black;
 1: spriteset_toki_25000_green;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_brown) {
 2: spriteset_toki_25000_brown_a;
 1: spriteset_toki_25000_brown_b;
}





switch(FEAT_TRAINS, SELF, switch_toki_25000_all_yeardep, build_year) {
	0..1975: random_toki_25000_old;
	random_toki_25000_all;
}

switch(FEAT_TRAINS, SELF, switch_toki_25000_brown_yeardep, build_year) {
	0..1975: spriteset_toki_25000_brown_a;
	random_toki_25000_brown;
}


switch(FEAT_TRAINS, SELF, switch_toki_25000_livery, cargo_subtype) {
	1: switch_toki_25000_brown_yeardep;
	2: spriteset_toki_25000_green;
	3: spriteset_toki_25000_black;
	switch_toki_25000_all_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_toki_25000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDYEAR);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_BROWN));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_GREEN));
	3: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	   return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_toki_25000_purchase, current_year) {
	0..1987: spriteset_toki_25000_jnr_purchase;
	spriteset_toki_25000_jrf_purchase;
	}


//stacking

switch(FEAT_TRAINS, SELF, switch_toki_25000_all_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_toki_25000_livery;
    1:  switch_toki_25000_cargo_type;
}


/* item (FEAT_TRAINS, toki_25000, 1471) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: NAAN;
	climates_available: ALL_CLIMATES;
	introduction_date: date(1966,1,1);
	speed: 100 km/h;
	name: string(STR_NAME_TOKI_25000);
	refit_cost: 0;
	power: 0;
	cargo_capacity: 60;
	loading_speed: 10;
	length: 7;
	weight: 17;
	cost_factor: 40;
	running_cost_factor: 6;
	running_cost_base: RUNNING_COST_STEAM;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED, CC_PIECE_GOODS);
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [BAKE, PCL_, BEER, CHSE, MEAT, OYST, EOIL, LVST, BOOM, VBOD, VEHI];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S,
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OPEN),
							string(STR_CONCAT_3C,
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF),
								string(STR_SUFFIX_PRIVATE)
							)
						);
	speed: switch_speedboost_1;
	purchase_speed: return 100;
	cargo_capacity: return 60;
	default: switch_toki_25000_all_loadstack;
	purchase: switch_toki_25000_purchase;
	cargo_subtype_text: switch_toki_25000_subtype_text;
	colour_mapping: switch_generic_recolour;
	}
} */

//toki 15000

switch(FEAT_TRAINS, SELF, switch_toki_15000_purchase, current_year) {
	0..1949: spriteset_toki_15000_jgr_purchase;
	spriteset_toki_15000_jnr_purchase;
	}



switch(FEAT_TRAINS, SELF, switch_toki_15000_all_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  spriteset_toki_15000_black;
    1:  switch_toki_25000_cargo_type; //todo give its own class switch
}


/* item (FEAT_TRAINS, toki_15000, 1470) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: NAAN;
	climates_available: ALL_CLIMATES;
	introduction_date: date(1943,1,1);
	speed: 75 km/h;
	name: string(STR_NAME_TOKI_15000);
	refit_cost: 0;
	power: 0;
	cargo_capacity: 50;
	loading_speed: 40;
	length: 7;
	weight: 16;
	cost_factor: 30;
	running_cost_factor: 5;
	running_cost_base: RUNNING_COST_STEAM;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED, CC_PIECE_GOODS);
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [BAKE, PCL_, BEER, CHSE, MEAT, OYST, EOIL, LVST, BOOM, VBOD, VEHI];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S,
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OPEN),
							string(STR_CONCAT_3C,
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 75;
	cargo_capacity: return 50;
	default: switch_toki_15000_all_loadstack;
	purchase: switch_toki_15000_purchase;
	colour_mapping: switch_generic_recolour;
	}
} */

GRAPHICS_STACK_2(\
sw_toki_25000_purchase,\
switch_jnr_jrf_1987,\
switch_toki_25000_purchase\
)

item (FEAT_TRAINS, toki_25000, 1471) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: NAAN;
		climates_available: ALL_CLIMATES;
		introduction_date: date(1966,1,1);
		speed: 100 km/h;
		name: string(STR_NAME_TOKI_25000);
		refit_cost: 0;
		power: 0;
		cargo_capacity: 60;
		loading_speed: 10;
		length: 7;
		weight: 17;
		cost_factor: 40;
		running_cost_factor: 6;
		running_cost_base: RUNNING_COST_STEAM;
		refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED, CC_PIECE_GOODS);
		non_refittable_cargo_classes: 0;
		cargo_disallow_refit: [BAKE, PCL_, BEER, CHSE, MEAT, OYST, EOIL, LVST, BOOM, VBOD, VEHI];
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK) | bitmask(TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text: string(STR_CONCAT_3S,
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OPEN),
							string(STR_CONCAT_3C,
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF),
								string(STR_SUFFIX_PRIVATE)
							)
						);
		speed: switch_speedboost_1;
		purchase_speed: return 100;
		cargo_capacity: return 60;
		default: switch_toki_25000_all_loadstack;
		purchase: sw_toki_25000_purchase;
		cargo_subtype_text: switch_toki_25000_subtype_text;
		colour_mapping: switch_generic_recolour;
	}
}


GRAPHICS_STACK_2(\
sw_toki_15000_purchase,\
switch_logo_jgr,\
switch_toki_15000_purchase\
)

item (FEAT_TRAINS, toki_15000, 1470) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: NAAN;
		climates_available: ALL_CLIMATES;
		introduction_date: date(1943,1,1);
		speed: 75 km/h;
		name: string(STR_NAME_TOKI_15000);
		refit_cost: 0;
		power: 0;
		cargo_capacity: 50;
		loading_speed: 40;
		length: 7;
		weight: 16;
		cost_factor: 30;
		running_cost_factor: 5;
		running_cost_base: RUNNING_COST_STEAM;
		refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED, CC_PIECE_GOODS);
		non_refittable_cargo_classes: 0;
		cargo_disallow_refit: [BAKE, PCL_, BEER, CHSE, MEAT, OYST, EOIL, LVST, BOOM, VBOD, VEHI];
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK) | bitmask(TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text: string(STR_CONCAT_3S,
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OPEN),
							string(STR_CONCAT_3C,
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);
		speed: switch_speedboost_1;
		purchase_speed: return 75;
		cargo_capacity: return 50;
		default: switch_toki_15000_all_loadstack;
		purchase: sw_toki_15000_purchase;
		colour_mapping: switch_generic_recolour;
	}
}
