grf {
 grfid: "\4A\44\A1\E1";
 name: string(STR_GRF_NAME);
 desc: string(STR_GRF_DESCRIPTION);
 version: 200;
 min_compatible_version: 200;
 
 //params, thanks tin
		//basecosts
		param 0 {
				param_basecostbuy {
						type: int;
						name: string(STR_PARAM_NAME_BASECOSTMODBUY);
						desc: string(STR_PARAM_DESC_BASECOSTMODBUY);
						min_value: 0;
						max_value: 2;
						def_value: 1;
						names: {
												0: string(STR_PARAM_LOW);
												1: string(STR_PARAM_NORMAL);
												2: string(STR_PARAM_HIGH);
						};
				}
		}
		//runningcosts
		param 1 {
				param_basecostrun {
						type: int;
						name: string(STR_PARAM_NAME_BASECOSTMODRUN);
						desc: string(STR_PARAM_DESC_BASECOSTMODRUN);
						min_value: 0;
						max_value: 4;
						def_value: 2;
						names: {
												0: string(STR_PARAM_VLOW);
												1: string(STR_PARAM_LOW);
												2: string(STR_PARAM_NORMAL);
												3: string(STR_PARAM_HIGH);
												4: string(STR_PARAM_VHIGH);
						};
				}
		}
		/*
		param 2 {
			param_purchaselogo {
				type: bool;
				name: string(STR_PARAM_NAME_PURCHASELOGO);
				desc: string(STR_PARAM_DESC_PURCHASELOGO);
				
			}
		}
		*/
}

//disable default trains
disable_item(FEAT_TRAINS);

//train look nice thing
traininfo_y_offset = 2;
train_width_32_px = 1;
//The basecost for build costs and running costs of vehicles.

basecost {
	PR_BUILD_VEHICLE_TRAIN : param_basecostbuy -1;
	PR_BUILD_VEHICLE_WAGON: param_basecostbuy +3;
	PR_RUNNING_TRAIN_STEAM: param_basecostrun +1;
	PR_RUNNING_TRAIN_DIESEL:	param_basecostrun +1;
	PR_RUNNING_TRAIN_ELECTRIC:	param_basecostrun +1;
}
cargotable {
	//DEFAULT
    PASS, COAL, MAIL, OIL_, LVST, GOOD, GRAI, WOOD, IORE, STEL, VALU, PAPR, WHEA, FOOD, GOLD, RUBR, FRUT, MAIZ, CORE, WATR, DIAM, 
	//TOYLAND
	SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, 
	//ECS
	AORE, BRCK, BDMT, CERA, CERE, CMNT, DYES, FERT, FICR, FISH, GLAS, LIME, OLSD, PETR, PLAS, POTA, RFPR, SAND, SULP, TOUR, VEHI, WDPR, WOOL, 
	//FIRS3, XIS
	METL, BEER, CLAY, COPR, ENSP, FMSP, GRVL, MILK, MNSP, PHOS, RCYC, SCMT, SGBT, SGCN, JAVA, CASS, NUTS, 
	EOIL, ACID, CHLO, ZINC, IRON, SASH, SALT, QLME, SLAG, MNO2, NITR, COKE, BEAN, PORE, PEAT, BOOM, KAOL, VPTS, VBOD, POWR, PIPE, 
	//FIRS 4
	CBLK, CSTI, CTAR, FECR, TYRE, COAT, LYE_, NH3_, O2__, SOAP, STAL, STCB, STSE, STSH, STST, STWR, VENG, 
	C2H4, HYAC, MEOH, NAPH, PHAC, C3H6, SUAC, TEXT, TIN_, TINP, UREA, 
	//AXIS
	ALO_, ALUM, COCO, H2__, NHNO, PPAR, ENUM, ACET, BIOM, RAMT,
	//FIRS 5
	CCPR, CRAN, FOCA, HWAR, LFEQ, N7__, PPWK, PUMP, RBAR, STBR, STPP, STTP, SWRP, TYCO, WELD, 
	//OTIS
	FRVG, URAN, BAKE, CHSE, ELTR, FUEL, FURN, MEAT, MPTS, NKOR, OTI1, OTI2, OYST, PCL_, SEED, SESP, TWOD, TATO, 
	//ITI, IotC
	WDCH, SCPR, WSTE, OILI, OILD, CIGR, TBCO, COBL, NICK, MOLS, 
	//MISC
	NUKF, NUKW, NWST, YETI, YETY
	}
	
//check ottd
if (ttd_platform != PLATFORM_OPENTTD) {
    error(FATAL, USED_WITH, "OpenTTD");
} else {
//needs update to 13.0 but doesn't work anyway
    if (openttd_version < version_openttd(1, 2, 0, 23971)) {
        error(FATAL, REQUIRES_OPENTTD, "1.2.0-RC1 / r23971");
    }
}


//For JP+ Tracks
railtypetable {
  TR_1067_NE:       [NAAN, RAIL], //Non-Electrified
  TR_1067_DC:       [NAAD, NAAE, NABE, ELNG, ELRL],
  TR_1067_AC:       [NAAA, NAAE, NABE, ELNG, ELRL],
  TR_1067_ACDC:     [NAAE, NABE, ELNG, ELRL],
  TR_1372_DC:       [sAAD, sAAE, SAAD, SAAE, ELRL],
  TR_1435_NE:       [SAAN, RAIL],
  TR_1435_DC:       [SAAD, ELRL],
  TR_1435_AC:       [SAAA, ELRL],
  TR_1435_ACDC:     [SAAE, ELRL],
  TR_1435_M:        [SAA3, SAB3, "3RDR", MTRO, ELRL],
  TR_1435_LINEAR:   [SAAI, ELRL],
  TR_RUBBER:        [rAA3, rAAE, ELRL],
  TR_UNIVERSAL:     [_AAE, RAIL], //for mu cars
} 

//sort in depot //could change to item names instead of ID numbers

//variants should be sorted in order too so they show up correctly in replace window

sort(FEAT_TRAINS, [

//steam
930,  920, 938, 904, 934, 935, 911, 931, 933, 936, 937, 920, 910, 932, 940, 900, 902, 944, 941, 903, 939, 942, 
912, 949, 950, 913, 914, 947, 948, 915, 916, 917, 953, 954, 918, 957, 945, 951, 955, 946, 952, 956, 919, 958, 
//diesels
1203, 1205, 1207, 1208, 1209, 1210, 1214, 1211, 1212, 1215, 1219, 1220, 1221, 1222, 1223, 1225, 1263, 1063, 1963, 1964, 1230,
//electrics DC old
1010, 1011, 990, 1004, 1904, 1002, 1013, 1012, 1050, 1051, 1008, 1052, 1033, 1053, 1054, 1014, 1016, 1916, 1910, 1019, 1919, 1920, 1020, 1218, 1081, 1082, 1021, 1914, 1921, 
//electrics DC new
1059, 1060, 1960, 1930, 1030, 1031, 1931, 1039, 1939, 1040, 1022, 1922, 1041, 1024, 1042, 1942, 1924, 1026, 1926, 1945, 1062, 1262, 1984, 1084, 1985, 1088, 
//electrics AC
1065, 1070, 1970, 1075, 1071, 1072, 1972, 1946, 1045, 1047, 1095,
//electrics MS 
1055, 1915, 1015, 1080, 1255, 1083, 1983, 1090, 1085, 1086, 1098, 1267, 1097, 
//cargo MU
// 77,
//diesels private
//
//electrics private
1005, 1106, 991, 1100, 1101, 

//wagons pax
1536, 1537, 1305, 1306, 1308, 1538, 1310, 1311, 1539, 1316, 1318, 1319, 1321, 1322, 1320, 1540, 1340, 1341, 1346, 1347, 
//wagons luggage/mail
1664, 1665, 1666, 1667, 1359, 1668, 1360, 1395, 1396, 1370, 1390, 
//wagons armoured
1357, 1380, 
//wagons box
1932, 1435, 1436, 1437, 1951, 1461, 1462, 1953, 
//wagons express box
1445, 1438, 1450, 1451, 1452, 1453, 1288, 
//wagons reefer
1281, 1455, 1456, 1286, 1460, 1461,
//wagons cont/car
1407, 1412, 1413, 1433, 1414, 1434, 1415, 1400, 1416, 1417, 1418, 1939, 1944, 1943, 
//wagons lvst
1282, 1431, 1432, 
//wagons open hopper
1439, 1440, 1441, 1443, 1446, 1447, 1285, 1242, 1952, 
//wagons covered hopper/dry tank
1442, 1444, 1448, 1449, 1291, 1464, 1290, 1410, 1411, 1465, 1466, 1467, 1468,
//wagons open
1469, 1929, 1933, 1284, 1470, 1471,
//open bulk
1280, 1462, 
//wagons flatbeds
1476, 1477, 1520, 1934, 1941, 1525, 1526, 1527, 1528, 1529, 1570, 1575, 1580, 1950, 
//wagons tankers
1480, 1481, 1482, 1487, 1488, 1489, 1485, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1490, 
//brake vans
1601, 1602, 1600, 1935, 1603, 1604, 
//wagons non JNR/JR
1402, 1420, 1421
]);
//2cc templates

template template_2cc_std(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x    , y,  8, 24,  -3, -12]
    [x+9  , y, 22, 20, -14, -12]
    [x+32 , y, 32, 16, -16, -12]
    [x+65 , y, 22, 20,  -6, -12]
    [x+88 , y,  8, 24,  -3, -12]
    [x+97 , y, 22, 20, -14, -12]
    [x+120, y, 32, 16, -16, -12]
    [x+153, y, 22, 20,  -6, -12]
}


template template_2cc_flip(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
	[x+88 , y,  8, 24,  -3, -12]
    [x+97 , y, 22, 20, -14, -12]
    [x+120, y, 32, 16, -16, -12]
    [x+153, y, 22, 20,  -6, -12]
    [x    , y,  8, 24,  -3, -12]
    [x+9  , y, 22, 20, -14, -12]
    [x+32 , y, 32, 16, -16, -12]
    [x+65 , y, 22, 20,  -6, -12]
}

template template_2cc_dmt(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x    , y,  8, 24,  -3, -12]
    [x+9  , y, 22, 20, -12, -13]
    [x+32 , y, 32, 16, -12, -12]
    [x+65 , y, 22, 20,  -4, -11]
    [x+88 , y,  8, 24,  -3, -12]
    [x+97 , y, 22, 20, -16, -11]
    [x+120, y, 32, 16, -20, -12]
    [x+153, y, 22, 20,  -8, -13]
}

template template_2cc_anim(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x    , y,  8, 24,  -3, -12, ANIM]
    [x+9  , y, 22, 20, -14, -12, ANIM]
    [x+32 , y, 32, 16, -16, -12, ANIM]
    [x+65 , y, 22, 20,  -6, -12, ANIM]
    [x+88 , y,  8, 24,  -3, -12, ANIM]
    [x+97 , y, 22, 20, -14, -12, ANIM]
    [x+120, y, 32, 16, -16, -12, ANIM]
    [x+153, y, 22, 20,  -6, -12, ANIM]
}

//container templates
template template_container_1(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x    , y,  8, 24,  -3, -12]
    [x+9  , y, 22, 20, -14, -12]
    [x+32 , y, 32, 16, -16, -12]
    [x+65 , y, 22, 20,  -6, -12]
    [x+88 , y,  8, 24,  -3, -12]
    [x+97 , y, 22, 20, -14, -12]
    [x+120, y, 32, 16, -16, -12]
    [x+153, y, 22, 20,  -6, -12]
}

template template_container_2(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x    , y,  8, 24,  -3,   -8] //+0 +4
    [x+9  , y, 22, 20, -18,  -10] //-4 +2
    [x+32 , y, 32, 16, -23,  -12] //-7 +0
    [x+65 , y, 22, 20,  -10, -14] //-4 -2
    [x+88 , y,  8, 24,  -3,  -16] //+0 -4
    [x+97 , y, 22, 20, -10,  -14] //+4 -2
    [x+120, y, 32, 16, -9,   -12] //+7 +0
    [x+153, y, 22, 20,  -2,  -10] //+4 +2
}

template template_container_3(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x    , y,  8, 24,  -3,   -4] //+0 +4
    [x+9  , y, 22, 20, -22,   -8] //-4 +2
    [x+32 , y, 32, 16, -30,  -12] //-7 +0
    [x+65 , y, 22, 20,  -14, -16] //-4 -2
    [x+88 , y,  8, 24,  -3,  -20] //+0 -4
    [x+97 , y, 22, 20,  -6,  -16] //+4 -2
    [x+120, y, 32, 16, -2,   -12] //+7 +0
    [x+153, y, 22, 20,   2,  -8] //+4 +2
}

template template_container_4(x, y) {
    //[left_x, upper_y, width, height, offset_x, offset_y]
    [x    , y,  8, 24,  -3,    0] //+0 +4
    [x+9  , y, 22, 20, -26,   -6] //-4 +2
    [x+32 , y, 32, 16, -37,  -12] //-7 +0
    [x+65 , y, 22, 20,  -18, -18] //-4 -2
    [x+88 , y,  8, 24,  -3,  -24] //+0 -4
    [x+97 , y, 22, 20,  -2,  -18] //+4 -2
    [x+120, y, 32, 16,  5,   -12] //+7 +0
    [x+153, y, 22, 20,   6,  -6] //+4 +2
}





//Purchase templates

    template template_purchase_nologo(x, y) {
        //[left_x, upper_y, width, height, offset_x, offset_y]
        [x, y,  54, 12, -25, -7]
    }

    template template_purchase_anim(x, y) {
        //[left_x, upper_y, width, height, offset_x, offset_y]
        [x, y,  87, 12, -25, -7, ANIM]
    }

    template template_purchase(x, y) {
        //[left_x, upper_y, width, height, offset_x, offset_y]
        [x, y,  87, 12, -25, -7]
    }
//BULK  Recolour sprites for cargo

recolour_bulk = reserve_sprites(27);

replace(recolour_bulk) {

//Fallback 0
    recolour_sprite {
        0xE5: 0x90;
        0xE8: 0x91;
        0xE9: 0x92;
        0xEA: 0x93;
        0xEB: 0x94;
        0xEC: 0x95;
        0xED: 0x96;
        0xEE: 0x97;
//fallback piece
        0x88: 0x06;
        0x89: 0x07;
        0x8A: 0x08;
        0x8B: 0x09;
        0x8C: 0x0A;
        0x8D: 0x0B;
        0x8E: 0x0C;
        0x8F: 0x0D;
    }
//grain 1
    recolour_sprite {
        0xE5: 0x3F;
        0xE8: 0x40;
        0xE9: 0x41;
        0xEA: 0x42;
        0xEB: 0x43;
        0xEC: 0x33;
        0xED: 0x44;
        0xEE: 0x34;
    }
//iore 2
	recolour_sprite {
        0xE5: 0x46;
        0xE8: 0x47;
        0xE9: 0x48;
        0xEA: 0x49;
        0xEB: 0x4A;
        0xEC: 0x4B;
        0xED: 0x4C;
        0xEE: 0x4D;
    }
//sulp 3
    recolour_sprite {
        0xE5: 0x40;
        0xE8: 0x41;
        0xE9: 0x57;
        0xEA: 0x5E;
        0xEB: 0x42;
        0xEC: 0x32;
        0xED: 0x5F;
        0xEE: 0x34;
    }
//sand 4
    recolour_sprite {
        0xE5: 0x6F;
        0xE8: 0x3A;
        0xE9: 0x1E;
        0xEA: 0x3B;
        0xEB: 0x26;
        0xEC: 0x1F;
        0xED: 0x27;
        0xEE: 0xA8;
    }
//bauxite 5
    recolour_sprite {
        0xE5: 0x48;
        0xE8: 0x2B;
        0xE9: 0x4A;
        0xEA: 0x2C;
        0xEB: 0xA2;
        0xEC: 0x4B;
        0xED: 0x4C;
        0xEE: 0x75;
    }
//copper ore 6
    recolour_sprite {
        0xE5: 0x18;
        0xE8: 0x19;
        0xE9: 0x36;
        0xEA: 0x1A;
        0xEB: 0x37;
        0xEC: 0x38;
        0xED: 0x39;
        0xEE: 0x1D;
    }
//fertiliser 7
    recolour_sprite {
        0xE5: 0x69;
        0xE8: 0x35;
        0xE9: 0x6B;
        0xEA: 0x6C;
        0xEB: 0x6D;
        0xEC: 0x6E;
        0xED: 0x6F;
        0xEE: 0x3A;
    }
//clay 8
    recolour_sprite {
        0xE5: 0x22;
        0xE8: 0x22;
        0xE9: 0x6D;
        0xEA: 0x4C;
        0xEB: 0x75;
        0xEC: 0x76;
        0xED: 0x4F;
        0xEE: 0x26;
    }
//oil seeds 9
    recolour_sprite {
        0xE5: 0x22;
        0xE8: 0x6D;
        0xE9: 0x38;
        0xEA: 0x5C;
        0xEB: 0x6F;
        0xEC: 0x5E;
        0xED: 0x3B;
        0xEE: 0x26;
    }
//limestone 10
    recolour_sprite {
        0xE5: 0x08;
        0xE8: 0x0A;
        0xE9: 0x1E;
        0xEA: 0x0B;
        0xEB: 0x3B;
        0xEC: 0x0C;
        0xED: 0x0D;
        0xEE: 0x0E;
    }
//potash 11
    recolour_sprite {
        0xE5: 0x16;
        0xE8: 0x17;
        0xE9: 0x0D;
        0xEA: 0x87;
        0xEB: 0x0E;
        0xEC: 0xD2;
        0xED: 0x0F;
        0xEE: 0x0F;
    }
//gravel 12
    recolour_sprite {
        0xE5: 0x07;
        0xE8: 0x08;
        0xE9: 0x09;
        0xEA: 0x0A;
        0xEB: 0x0B;
        0xEC: 0x0C;
        0xED: 0x0D;
        0xEE: 0x0E;
    //piece	
        0x88: 0x07;
        0x89: 0x08;
        0x8A: 0x09;
        0x8B: 0x0A;
        0x8C: 0x0B;
        0x8D: 0x0C;
        0x8E: 0x0D;
        0x8F: 0x0E;
    }
//coal 13
    recolour_sprite {
        0xE5: 0x01;
        0xE8: 0x01;
        0xE9: 0x02;
        0xEA: 0x02;
        0xEB: 0x03;
        0xEC: 0x03;
        0xED: 0x04;
        0xEE: 0x04;
    }
//fruit 14
    recolour_sprite {
        0xE5: 0x03;
        0xE8: 0x04;
        0xE9: 0x1D;
        0xEA: 0x40;
        0xEB: 0xC2;
        0xEC: 0x42;
        0xED: 0x5F;
        0xEE: 0x43;
    }
//scrap 15
    recolour_sprite {
        0xE5: 0x02;
        0xE8: 0x03;
        0xE9: 0x7B;
        0xEA: 0x11;
        0xEB: 0x13;
        0xEC: 0x4C;
        0xED: 0x16;
        0xEE: 0x17;
    }
//sugar beet 16
    recolour_sprite {
        0xE5: 0x36;
        0xE8: 0x69;
        0xE9: 0x5C;
        0xEA: 0x6D;
        0xEB: 0x3B;
        0xEC: 0x1A;
        0xED: 0x6C;
        0xEE: 0x35;
    }
//sugar cane 17
    recolour_sprite {
        0xE5: 0x60;
        0xE8: 0x69;
        0xE9: 0x55;
        0xEA: 0x53;
        0xEB: 0x51;
        0xEC: 0x59;
        0xED: 0x50;
        0xEE: 0x40;
    }
//coffee 18
    recolour_sprite {
        0xE5: 0x68;
        0xE8: 0x6A;
        0xE9: 0x60;
        0xEA: 0x69;
        0xEB: 0x46;
        0xEC: 0x5C;
        0xED: 0x3C;
        0xEE: 0x47;
    }
//waste 19
    recolour_sprite {
        0xE5: 0x02;
        0xE8: 0x03;
        0xE9: 0x59;
        0xEA: 0x35;
        0xEB: 0x37;
        0xEC: 0x5C;
        0xED: 0x16;
        0xEE: 0x1E;
    }
//building mat 20
    recolour_sprite {
        0xE5: 0x68;
        0xE8: 0x69;
        0xE9: 0x6A;
        0xEA: 0x6B;
        0xEB: 0x6C;
        0xEC: 0x6D;
        0xED: 0x6E;
        0xEE: 0x6F;
	//piece	
        0x88: 0x72;
        0x89: 0x73;
        0x8A: 0x74;
        0x8B: 0x75;
        0x8C: 0x76;
        0x8D: 0x77;
        0x8E: 0x78;
        0x8F: 0x79;
    }
//fibre crops 21
    recolour_sprite {
        0xE5: 0x68;
        0xE8: 0x35;
        0xE9: 0x36;
        0xEA: 0x37;
        0xEB: 0x38;
        0xEC: 0x39;
        0xED: 0x3A;
        0xEE: 0x3B;
	//piece	
        0x88: 0x08;
        0x89: 0x09;
        0x8A: 0x0A;
        0x8B: 0x0B;
        0x8C: 0x0C;
        0x8D: 0x0D;
        0x8E: 0x0E;
        0x8F: 0x0F;

    }
//slag 22
    recolour_sprite {
        0xE5: 0x01;
        0xE8: 0x02;
        0xE9: 0x02;
        0xEA: 0x03;
        0xEB: 0x03;
        0xEC: 0x04;
        0xED: 0xE9;
        0xEE: 0xED;
    }
//phosphate 23
    recolour_sprite {
        0xE5: 0x6F;
        0xE8: 0x3A;
        0xE9: 0x84;
        0xEA: 0x3B;
        0xEB: 0x85;
        0xEC: 0x1F;
        0xED: 0x86;
        0xEE: 0xA8;
    }
//salt 24
    recolour_sprite {
        0xE5: 0x0A;
        0xE8: 0x0A;
        0xE9: 0x0B;
        0xEA: 0x0C;
        0xEB: 0x0D;
        0xEC: 0x0E;
        0xED: 0x0F;
        0xEE: 0x0F;
    }
//uranium 25
    recolour_sprite {
        0xE5: 0x0A;
        0xE8: 0xCE;
        0xE9: 0xCF;
        0xEA: 0xD0;
        0xEB: 0xD1;
        0xEC: 0x5E;
        0xED: 0x5F;
        0xEE: 0x67;
    }
	
//kaol/lithium 26
    recolour_sprite {
        0xE5: 0x0B;
        0xE8: 0x0C;
        0xE9: 0x9E;
        0xEA: 0x0D;
        0xEB: 0x9F;
        0xEC: 0xA0;
        0xED: 0x0E;
        0xEE: 0xA1;
    }
}


//PIECE GOODS  Recolour sprites for cargo

recolour_piece = reserve_sprites(10);

replace(recolour_piece) {

//mid grey 0
    recolour_sprite {
        0x88: 0x06;
        0x89: 0x07;
        0x8A: 0x08;
        0x8B: 0x09;
        0x8C: 0x0A;
        0x8D: 0x0B;
        0x8E: 0x0C;
        0x8F: 0x0D;
    }
//light grey 1 
    recolour_sprite {
        0x88: 0x08;
        0x89: 0x09;
        0x8A: 0x0A;
        0x8B: 0x0B;
        0x8C: 0x0C;
        0x8D: 0x0D;
        0x8E: 0x0E;
        0x8F: 0x0F;
    }
//dark grey 2 
    recolour_sprite {
        0x88: 0x03;
        0x89: 0x04;
        0x8A: 0x05;
        0x8B: 0x06;
        0x8C: 0x07;
        0x8D: 0x08;
        0x8E: 0x09;
        0x8F: 0x0A;
    }
//bluish grey 3
    recolour_sprite {
        0x88: 0x10;
        0x89: 0x11;
        0x8A: 0x12;
        0x8B: 0x13;
        0x8C: 0x14;
        0x8D: 0x15;
        0x8E: 0x16;
        0x8F: 0x17;
    }
//copper 4
    recolour_sprite {
        0x88: 0x72;
        0x89: 0x73;
        0x8A: 0x74;
        0x8B: 0x75;
        0x8C: 0x76;
        0x8D: 0x77;
        0x8E: 0x78;
        0x8F: 0x79;
    }
//light blue 5
    recolour_sprite {
        0x88: 0x9A;
        0x89: 0x9B;
        0x8A: 0x9C;
        0x8B: 0x9D;
        0x8C: 0x9E;
        0x8D: 0x9F;
        0x8E: 0xA0;
        0x8F: 0xA1;
    }
//light green 6
    recolour_sprite {
        0x88: 0x60;
        0x89: 0x61;
        0x8A: 0x62;
        0x8B: 0x63;
        0x8C: 0x64;
        0x8D: 0x65;
        0x8E: 0x66;
        0x8F: 0x67;
    }
//reddish brown 7
    recolour_sprite {
        0x88: 0x46;
        0x89: 0x47;
        0x8A: 0x48;
        0x8B: 0x49;
        0x8C: 0x4A;
        0x8D: 0x4B;
        0x8E: 0x4C;
        0x8F: 0x4D;
    }
//wood brown 8
    recolour_sprite {
        0x88: 0x68;
        0x89: 0x69;
        0x8A: 0x6A;
        0x8B: 0x6B;
        0x8C: 0x6C;
        0x8D: 0x6D;
        0x8E: 0x6E;
        0x8F: 0x6F;
	//wood as bulk		
        0xE5: 0x68;
        0xE8: 0x69;
        0xE9: 0x6A;
        0xEA: 0x6B;
        0xEB: 0x6C;
        0xEC: 0x6D;
        0xED: 0x6E;
        0xEE: 0x6F;
    }
 	
//cream 9
    recolour_sprite {
        0x88: 0x20;
        0x89: 0x21;
        0x8A: 0x22;
        0x8B: 0x23;
        0x8C: 0x24;
        0x8D: 0x25;
        0x8E: 0x26;
        0x8F: 0x27;
    }
}

/*

* GENERIC RECOLOUR CALLBACK 

*/

//todo add more recolours



switch(FEAT_TRAINS, SELF, switch_piece_recolour, cargo_type_in_veh) {
//PIECE
	STEL: return recolour_piece +3;
	IRON: return recolour_piece +7;
	METL: return recolour_piece ;
    ALUM: return recolour_piece ;
	COPR: return recolour_piece +4;
	ZINC: return recolour_piece +5;
    RAMT: return recolour_piece +5;
	NICK: return recolour_piece +6;
	ENSP: return recolour_piece +5;
	FMSP: return recolour_piece +6;
	MNSP: return recolour_piece +1;
	VPTS: return recolour_piece +2;
	PIPE: return recolour_piece +3;
	WDPR: return recolour_piece +9;

	WOOL: return recolour_piece +1;
	GLAS: return recolour_piece +5;
//	BDMT: return recolour_piece +4;
	BRCK: return recolour_piece +4;
	GOOD: return recolour_piece +6;
	PAPR: return recolour_piece +1;
	WOOD: return recolour_piece +8;
	
	STST: return recolour_piece +3;
	STSE: return recolour_piece ;
	STSH: return recolour_piece ;
	STWR: return recolour_piece +2;
	STAL: return recolour_piece +1;
	TYRE: return recolour_piece +2;
	STCB: return recolour_piece +2;
	CSTI: return recolour_piece +7;
	
	TWOD: return recolour_piece +8;
	SESP: return recolour_piece +5;
	MPTS: return recolour_piece +2;
	FURN: return recolour_piece +9;
	POWR: return recolour_piece +2;
	TEXT: return recolour_piece +9;
	URAN: return recolour_piece +6;
    COBL: return recolour_piece +5;

//FAKE BULK
	BDMT: return recolour_bulk +20;
	FICR: return recolour_bulk +21;

	SCMT: return recolour_bulk +15;
	RCYC: return recolour_bulk +19;
	WSTE: return recolour_bulk +19;
	
    SULP: return recolour_bulk +3;
	SEED: return recolour_bulk +9;
    FERT: return recolour_bulk +7;
	SASH: return recolour_bulk +10;
	TATO: return recolour_bulk +16;
	
    FRUT: return recolour_bulk +14;
    FRVG: return recolour_bulk +14;

    CMNT: return recolour_bulk +12;
    CBLK: return recolour_bulk +13;
    ALO_: return recolour_bulk +12;

    SGCN: return recolour_bulk +17;

//FALLBACK
    recolour_bulk;    
}

switch(FEAT_TRAINS, SELF, switch_bulk_recolour, cargo_type_in_veh) {
	GRAI: return recolour_bulk +1;
	CERE: return recolour_bulk +1;
	MAIZ: return recolour_bulk +1;	
	WHEA: return recolour_bulk +1;
	
	IORE: return recolour_bulk +2;
	PORE: return recolour_bulk +2;

    SULP: return recolour_bulk +3;

    SAND: return recolour_bulk +4;
	NITR: return recolour_bulk +4;

    AORE: return recolour_bulk +5;

	CORE: return recolour_bulk +6;
	NKOR: return recolour_bulk +6;

    FERT: return recolour_bulk +7;
	MNO2: return recolour_bulk +7;
	TOFF: return recolour_bulk +7;
	
	CLAY: return recolour_bulk +8;

    OLSD: return recolour_bulk +9;
	BEAN: return recolour_bulk +9;
	SEED: return recolour_bulk +9;
	
    LIME: return recolour_bulk +10;
	SASH: return recolour_bulk +10;

    POTA: return recolour_bulk +11;
	QLME: return recolour_bulk +11;

    GRVL: return recolour_bulk +12;
    FECR: return recolour_bulk +12;
	CMNT: return recolour_bulk +12;
    ALO_: return recolour_bulk +12;

    COAL: return recolour_bulk +13;
	COKE: return recolour_bulk +13;
	
    FRUT: return recolour_bulk +14;
    FRVG: return recolour_bulk +14;
	
    SCMT: return recolour_bulk +15;	

    SGBT: return recolour_bulk +16;
	CASS: return recolour_bulk +16;
	TATO: return recolour_bulk +16;
	
    SGCN: return recolour_bulk +17;
	TWOD: return recolour_bulk +17;
	
    JAVA: return recolour_bulk +18;	
	PEAT: return recolour_bulk +18;
	BIOM: return recolour_bulk +18;
	NUTS: return recolour_bulk +18;
	
	RCYC: return recolour_bulk +19;
	WSTE: return recolour_bulk +19;
	
	BDMT: return recolour_bulk +20;
	WOOD: return recolour_bulk +20;
    WDCH: return recolour_bulk +20;
	
	FICR: return recolour_bulk +21;
	
	SLAG: return recolour_bulk +22;
	
	PHOS: return recolour_bulk +23;

	SALT: return recolour_bulk +24;
	BAKE: return recolour_bulk +24;
	SUGR: return recolour_bulk +24;
	
	URAN: return recolour_bulk +25;
	
	KAOL: return recolour_bulk +26;


	

//FALLBACK BLUE
    recolour_bulk; //blue
}


switch(FEAT_TRAINS, SELF, switch_generic_recolour, cargo_classes) {
	bitmask(CC_BULK): switch_bulk_recolour;
	bitmask(CC_BULK, CC_COVERED): switch_bulk_recolour;

	switch_piece_recolour;
	
}

//5000
	
spriteset(spriteset_jgr_5000_black_front, "gfx/steam/jgr_5000.png") {
	template_2cc_anim(1, 1)
}

spriteset(spriteset_jgr_5000_black_rear, "gfx/steam/jgr_5000.png") {
	template_2cc_std(1, 32)
}



//purchase

spriteset(spriteset_jgr_5000_purchase, "gfx/steam/jgr_5000.png") {
	template_purchase(1, 192)
}







/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_jgr_5000_articulated_part, extra_callback_info1) {
	1: return jgr_5000_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


item (FEAT_TRAINS, jgr_5000, 931) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_5000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1872,1,1);
		speed: 60 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.20;
		power: 250 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 41;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 11;
		length: 5;
		running_cost_factor: 20;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_B1),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_GP),
								string(STR_CONCAT_1C,
									string(STR_SUFFIX_JGR)
                    )
                  );
		cargo_capacity: return 0;
	//	cargo_subtype_text: switch_jgr_5000_subtype_text;
		default: spriteset_jgr_5000_black_front;
		purchase: spriteset_jgr_5000_purchase;
		articulated_part: switch_jgr_5000_articulated_part;
		}
	}


item (FEAT_TRAINS, jgr_5000_rear, 831) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_jgr_5000);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 3;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: spriteset_jgr_5000_black_rear;
	}
}

//5130
	
spriteset(spriteset_jgr_5130_black_front, "gfx/steam/jgr_5130.png") {
	template_2cc_anim(1, 1)
}

spriteset(spriteset_jgr_5130_black_rear, "gfx/steam/jgr_5130.png") {
	template_2cc_std(1, 32)
}



//purchase

spriteset(spriteset_jgr_5130_purchase, "gfx/steam/jgr_5130.png") {
	template_purchase(1, 192)
}







/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_jgr_5130_articulated_part, extra_callback_info1) {
	1: return jgr_5130_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


item (FEAT_TRAINS, jgr_5130, 933) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_5130);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1876,1,1);
		speed: 65 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.20;
		power: 279 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 42;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 11;
		length: 5;
		running_cost_factor: 20;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_2B),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_GP),
								string(STR_CONCAT_1C,
									string(STR_SUFFIX_JGR)
                    )
                  );
		cargo_capacity: return 0;
	//	cargo_subtype_text: switch_jgr_5130_subtype_text;
		default: spriteset_jgr_5130_black_front;
		purchase: spriteset_jgr_5130_purchase;
		articulated_part: switch_jgr_5130_articulated_part;
		}
	}


item (FEAT_TRAINS, jgr_5130_rear, 833) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_jgr_5130);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 3;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: spriteset_jgr_5130_black_rear;
	}
}

//5500
	
spriteset(spriteset_jgr_5500_black_front, "gfx/steam/jgr_5500.png") {
	template_2cc_anim(1, 1)
}

spriteset(spriteset_jgr_5500_black_rear, "gfx/steam/jgr_5500.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_jgr_5500_tobu_front, "gfx/steam/jgr_5500.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_jgr_5500_tobu_rear, "gfx/steam/jgr_5500.png") {
	template_2cc_std(1, 96)
}


//purchase

spriteset(spriteset_jgr_5500_purchase, "gfx/steam/jgr_5500.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_jgr_5500_tobu_purchase, "gfx/steam/jgr_5500.png") {
	template_purchase(89, 192)
}





/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_jgr_5500_articulated_part, extra_callback_info1) {
	1: return jgr_5500_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


item (FEAT_TRAINS, jgr_5500, 936) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_5500);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1893,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.20;
		power: 450 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 45;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 11;
		length: 6;
		running_cost_factor: 20;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_2B),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_GP),
								string(STR_CONCAT_1C,
									string(STR_SUFFIX_JGR)
                    )
                  );
		cargo_capacity: return 0;
	//	cargo_subtype_text: switch_jgr_5500_subtype_text;
		default: spriteset_jgr_5500_black_front;
		purchase: spriteset_jgr_5500_purchase;
		articulated_part: switch_jgr_5500_articulated_part;
		}
	}


item (FEAT_TRAINS, jgr_5500_rear, 836) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_jgr_5500);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 3;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: spriteset_jgr_5500_black_rear;
	}
}

/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_jgr_5500_tobu_articulated_part, extra_callback_info1) {
	1: return jgr_5500_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


item (FEAT_TRAINS, jgr_5500_tobu, 937) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_B1);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1893,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.20;
		power: 450 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 45;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 11;
		length: 6;
		running_cost_factor: 20;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		variant_group: 936;
		}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_2B),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_GP),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_TOBU)
                    )
                  );
		cargo_capacity: return 0;
	//	cargo_subtype_text: switch_jgr_5500_subtype_text;
		default: spriteset_jgr_5500_tobu_front;
		purchase: spriteset_jgr_5500_tobu_purchase;
		articulated_part: switch_jgr_5500_tobu_articulated_part;
		}
	}


item (FEAT_TRAINS, jgr_5500_tobu_rear, 837) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_jgr_5500);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 3;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: spriteset_jgr_5500_tobu_rear;
	}
}
//7010
	
spriteset(spriteset_jgr_7010_black_front, "gfx/steam/jgr_7010.png") {
	template_2cc_anim(1, 1)
}

spriteset(spriteset_jgr_7010_black_rear, "gfx/steam/jgr_7010.png") {
	template_2cc_std(1, 32)
}



//purchase

spriteset(spriteset_jgr_7010_purchase, "gfx/steam/jgr_7010.png") {
	template_purchase(1, 192)
}







/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_jgr_7010_articulated_part, extra_callback_info1) {
	1: return jgr_7010_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


item (FEAT_TRAINS, jgr_7010, 932) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_7010);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1874,1,1);
		speed: 65 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.20;
		power: 265 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 41;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 11;
		length: 5;
		running_cost_factor: 20;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_C),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_GP),
								string(STR_CONCAT_1C,
									string(STR_SUFFIX_JGR)
                    )
                  );
		cargo_capacity: return 0;
	//	cargo_subtype_text: switch_jgr_7010_subtype_text;
		default: spriteset_jgr_7010_black_front;
		purchase: spriteset_jgr_7010_purchase;
		articulated_part: switch_jgr_7010_articulated_part;
		}
	}


item (FEAT_TRAINS, jgr_7010_rear, 832) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_jgr_7010);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 3;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: spriteset_jgr_7010_black_rear;
	}
}

//7100
	
	
spriteset(spriteset_jgr_7100_hcc_front, "gfx/steam/jgr_7100.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_jgr_7100_black_front, "gfx/steam/jgr_7100.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_jgr_7100_cc_front, "gfx/steam/jgr_7100.png") {
	template_2cc_std(1, 64)
}


spriteset(spriteset_jgr_7100_hcc_rear, "gfx/steam/jgr_7100.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_jgr_7100_black_rear, "gfx/steam/jgr_7100.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_jgr_7100_cc_rear, "gfx/steam/jgr_7100.png") {
	template_2cc_std(1, 160)
}

//purchase

spriteset(spriteset_jgr_7100_hcc_purchase, "gfx/steam/jgr_7100.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_jgr_7100_purchase, "gfx/steam/jgr_7100.png") {
	template_purchase(89, 192)
}



switch(FEAT_TRAINS, SELF, switch_jgr_7100_yeardep, build_year) {
	1906..1950: spriteset_jgr_7100_black_front;
	spriteset_jgr_7100_hcc_front;
	}


switch(FEAT_TRAINS, SELF, switch_jgr_7100_rear_yeardep, build_year) {
	1906..1950: spriteset_jgr_7100_black_rear;
	spriteset_jgr_7100_hcc_rear;
	}




switch(FEAT_TRAINS, SELF, switch_jgr_7100_livery, cargo_subtype) {
	1: spriteset_jgr_7100_hcc_front;
	2: spriteset_jgr_7100_black_front;
	3: spriteset_jgr_7100_cc_front;
	switch_jgr_7100_yeardep;
	
}

switch(FEAT_TRAINS, SELF, switch_jgr_7100_livery_rear, cargo_subtype) {
	1: spriteset_jgr_7100_hcc_rear;
	2: spriteset_jgr_7100_black_rear;
	3: spriteset_jgr_7100_cc_rear;
	switch_jgr_7100_rear_yeardep;
}



switch(FEAT_TRAINS, SELF, switch_jgr_7100_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_HCC), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK), 
                                     string(STR_COLOUR_GOLD)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                    )
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_jgr_7100_articulated_part, extra_callback_info1) {
	1: return jgr_7100_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_jgr_7100_purchase, current_year) {
	0..1906: spriteset_jgr_7100_hcc_purchase;
	spriteset_jgr_7100_purchase;
	}

item (FEAT_TRAINS, jgr_7100, 900) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_7100);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1880,1,1);
		speed: 60 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.20;
		power: 400 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 40;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 11;
		length: 5;
		running_cost_factor: 20;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_1C),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_GP),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_HCC),
									string(STR_SUFFIX_JGR)
                    )
                  );
		cargo_capacity: return 0;
		cargo_subtype_text: switch_jgr_7100_subtype_text;
		default: switch_jgr_7100_livery;
		purchase: switch_jgr_7100_purchase;
		articulated_part: switch_jgr_7100_articulated_part;
		}
	}


item (FEAT_TRAINS, jgr_7100_rear, 901) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_jgr_7100);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 4;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: switch_jgr_7100_livery_rear;
	}
}
//7200
	
	
spriteset(spriteset_jgr_7200_hcc_front, "gfx/steam/jgr_7200.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_jgr_7200_hcc_rear, "gfx/steam/jgr_7200.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_jgr_7200_black_front, "gfx/steam/jgr_7200.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_jgr_7200_black_rear, "gfx/steam/jgr_7200.png") {
	template_2cc_std(1, 128)
}

//add cc
spriteset(spriteset_jgr_7200_cc_front, "gfx/steam/jgr_7200.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_jgr_7200_cc_rear, "gfx/steam/jgr_7200.png") {
	template_2cc_std(1, 160)
}


spriteset(spriteset_jgr_7200_hcc_purchase, "gfx/steam/jgr_7200.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_jgr_7200_purchase, "gfx/steam/jgr_7200.png") {
	template_purchase(89, 192)
}


switch(FEAT_TRAINS, SELF, switch_jgr_7200_yeardep, build_year) {
	0..1906: spriteset_jgr_7200_hcc_front;
	spriteset_jgr_7200_black_front;
	}


switch(FEAT_TRAINS, SELF, switch_jgr_7200_rear_yeardep, build_year) {
	0..1906: spriteset_jgr_7200_hcc_rear;
	spriteset_jgr_7200_black_rear;
	}




switch(FEAT_TRAINS, SELF, switch_jgr_7200_livery, cargo_subtype) {
	1: spriteset_jgr_7200_hcc_front;
	2: spriteset_jgr_7200_black_front;
	3: spriteset_jgr_7200_cc_front;
	switch_jgr_7200_yeardep;
	
}

switch(FEAT_TRAINS, SELF, switch_jgr_7200_livery_rear, cargo_subtype) {
	1: spriteset_jgr_7200_hcc_rear;
	2: spriteset_jgr_7200_black_rear;
	3: spriteset_jgr_7200_cc_rear;
	switch_jgr_7200_rear_yeardep;
}




switch(FEAT_TRAINS, SELF, switch_jgr_7200_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_HCC), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK), 
                                    string(STR_COLOUR_GOLD)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                    )
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_jgr_7200_articulated_part, extra_callback_info1) {
	1: return jgr_7200_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_jgr_7200_purchase, current_year) {
	0..1906: spriteset_jgr_7200_hcc_purchase;
	spriteset_jgr_7200_purchase;
	}

item (FEAT_TRAINS, jgr_7200, 902) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_7200);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1890,1,1);
		speed: 65 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.20;
		power: 480 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 45;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 12;
		length: 5;
		running_cost_factor: 23;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_1C),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_GP),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_HCC),
									string(STR_SUFFIX_JGR)
                    )
                  );
		cargo_capacity: return 0;
		cargo_subtype_text: switch_jgr_7200_subtype_text;
		default: switch_jgr_7200_livery;
		purchase: switch_jgr_7200_purchase;
		articulated_part: switch_jgr_7200_articulated_part;
	}
}


item (FEAT_TRAINS, jgr_7200_rear, 903) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_jgr_7200);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 4;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: switch_jgr_7200_livery_rear;
	}
}
//9700
	
spriteset(spriteset_jgr_9700_black_front, "gfx/steam/jgr_9700.png") {
	template_2cc_anim(1, 1)
}

spriteset(spriteset_jgr_9700_black_rear, "gfx/steam/jgr_9700.png") {
	template_2cc_std(1, 32)
}



//purchase

spriteset(spriteset_jgr_9700_purchase, "gfx/steam/jgr_9700.png") {
	template_purchase(1, 192)
}







/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_jgr_9700_articulated_part, extra_callback_info1) {
	1: return jgr_9700_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


item (FEAT_TRAINS, jgr_9700, 939) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_9700);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1897,1,1);
		speed: 65 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.20;
		power: 649 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 85;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 11;
		length: 7;
		running_cost_factor: 20;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_1D1),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_HF),
								string(STR_CONCAT_1C,
									string(STR_SUFFIX_JGR)
                    )
                  );
		cargo_capacity: return 0;
	//	cargo_subtype_text: switch_jgr_9700_subtype_text;
		default: spriteset_jgr_9700_black_front;
		purchase: spriteset_jgr_9700_purchase;
		articulated_part: switch_jgr_9700_articulated_part;
		}
	}


item (FEAT_TRAINS, jgr_9700_rear, 839) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_jgr_9700);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 4;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: spriteset_jgr_9700_black_rear;
	}
}

//Spriteset jgr_860
spriteset(spriteset_jgr_860_black, "gfx/steam/jgr_860.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_jgr_860_flip_black, "gfx/steam/jgr_860.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_jgr_860_cc, "gfx/steam/jgr_860.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_jgr_860_flip_cc, "gfx/steam/jgr_860.png") {
	template_2cc_flip(1, 96)
}


spriteset(spriteset_jgr_860_black_purchase, "gfx/steam/jgr_860.png") {
	template_purchase(1, 128)
}



//flip switches
switch(FEAT_TRAINS, SELF, switch_jgr_860_flip_black, vehicle_is_flipped) {
	0: spriteset_jgr_860_black;
	1: spriteset_jgr_860_flip_black;
}

switch(FEAT_TRAINS, SELF, switch_jgr_860_flip_cc, vehicle_is_flipped) {
	0: spriteset_jgr_860_cc;
	1: spriteset_jgr_860_flip_cc;
}





switch(FEAT_TRAINS, SELF, switch_jgr_860_livery, cargo_subtype) {
	1: switch_jgr_860_flip_cc;	
	switch_jgr_860_flip_black;
}



switch(FEAT_TRAINS, SELF, switch_jgr_860_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                    )
                                 );
	1: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, jgr_860, 920) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_860);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1893,1,1);
  speed: 70 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 500 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_STEAM;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 39;
  reliability_decay: 20;
  model_life: 30;
  vehicle_life: 40;
  cost_factor: 14;
  length: 5;
  running_cost_factor: 27;
  running_cost_base: RUNNING_COST_STEAM;
  misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_STEAM),
                        string(STR_DESC_WHEELS_1B1),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_2C, 
                          string(STR_SUFFIX_JGR),
						              string(STR_SUFFIX_SAKHALIN)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_jgr_860_subtype_text;
  default: switch_jgr_860_livery;
  purchase: spriteset_jgr_860_black_purchase;
	reverse_build_probability: return 50;
  }
}
//Spriteset jgr_1070
spriteset(spriteset_jgr_1070_black, "gfx/steam/jgr_1070.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_jgr_1070_flip_black, "gfx/steam/jgr_1070.png") {
	template_2cc_flip(1, 32)
}




spriteset(spriteset_jgr_1070_black_purchase, "gfx/steam/jgr_1070.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_jnr_1070_black_purchase, "gfx/steam/jgr_1070.png") {
	template_purchase(89, 192)
}

switch(FEAT_TRAINS, SELF, switch_1070_purchase, current_year) {
	0..1949: spriteset_jgr_1070_black_purchase;
	spriteset_jnr_1070_black_purchase;
	}

//flip switches
switch(FEAT_TRAINS, SELF, switch_jgr_1070_flip_black, vehicle_is_flipped) {
	0: spriteset_jgr_1070_black;
	1: spriteset_jgr_1070_flip_black;
}




item (FEAT_TRAINS, jgr_1070, 938) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_1070);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1925,1,1);
  speed: 80 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_STEAM;
//  cargo_capacity: 1;
//  cargo_allow_refit: [PASS];
  weight: 48;
  reliability_decay: 20;
  model_life: 30;
  vehicle_life: 40;
  cost_factor: 16;
  length: 7;
  running_cost_factor: 31;
  running_cost_base: RUNNING_COST_STEAM;
  misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_STEAM),
                        string(STR_DESC_WHEELS_2B1),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_2C, 
                          string(STR_SUFFIX_JGR),
						              string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
//  cargo_subtype_text: switch_jgr_1070_subtype_text;
  default: switch_jgr_1070_flip_black;
  purchase: switch_1070_purchase;
	reverse_build_probability: return 50;
  }
}
//Spriteset jgr_1800
spriteset(spriteset_jgr_1800_black, "gfx/steam/jgr_1800.png") {
	template_2cc_std(1, 1)
}





spriteset(spriteset_jgr_1800_black_purchase, "gfx/steam/jgr_1800.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_jnr_1800_black_purchase, "gfx/steam/jgr_1800.png") {
	template_purchase(89, 192)
}

switch(FEAT_TRAINS, SELF, switch_1800_purchase, current_year) {
	0..1949: spriteset_jgr_1800_black_purchase;
	spriteset_jnr_1800_black_purchase;
	}



item (FEAT_TRAINS, jgr_1800, 934) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_1800);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1884,1,1);
  speed: 65 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 265 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_STEAM;
//  cargo_capacity: 1;
//  cargo_allow_refit: [PASS];
  weight: 40;
  reliability_decay: 20;
  model_life: 30;
  vehicle_life: 40;
  cost_factor: 16;
  length: 5;
  running_cost_factor: 31;
  running_cost_base: RUNNING_COST_STEAM;
//  misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_STEAM),
                        string(STR_DESC_WHEELS_C),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_2C, 
                          string(STR_SUFFIX_JGR),
						              string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
//  cargo_subtype_text: switch_jgr_1800_subtype_text;
  default: spriteset_jgr_1800_black;
  purchase: switch_1800_purchase;
	reverse_build_probability: return 50;
  }
}
//Spriteset jgr_2100
spriteset(spriteset_jgr_2100_black, "gfx/steam/jgr_2100.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_jgr_2100_flip_black, "gfx/steam/jgr_2100.png") {
	template_2cc_flip(1, 32)
}




spriteset(spriteset_jgr_2100_black_purchase, "gfx/steam/jgr_2100.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_jnr_2100_black_purchase, "gfx/steam/jgr_2100.png") {
	template_purchase(89, 192)
}

switch(FEAT_TRAINS, SELF, switch_2100_purchase, current_year) {
	0..1949: spriteset_jgr_2100_black_purchase;
	spriteset_jnr_2100_black_purchase;
	}

//flip switches
switch(FEAT_TRAINS, SELF, switch_jgr_2100_flip_black, vehicle_is_flipped) {
	0: spriteset_jgr_2100_black;
	1: spriteset_jgr_2100_flip_black;
}




item (FEAT_TRAINS, jgr_2100, 935) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_2100);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1890,1,1);
  speed: 70 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 412 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_STEAM;
//  cargo_capacity: 1;
//  cargo_allow_refit: [PASS];
  weight: 49;
  reliability_decay: 20;
  model_life: 30;
  vehicle_life: 40;
  cost_factor: 16;
  length: 6;
  running_cost_factor: 31;
  running_cost_base: RUNNING_COST_STEAM;
  misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_STEAM),
                        string(STR_DESC_WHEELS_C1),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_2C, 
                          string(STR_SUFFIX_JGR),
						              string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
//  cargo_subtype_text: switch_jgr_2100_subtype_text;
  default: switch_jgr_2100_flip_black;
  purchase: switch_2100_purchase;
	reverse_build_probability: return 50;
  }
}
//Spriteset jgr_150
spriteset(spriteset_jgr_150_black, "gfx/steam/jgr_150.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_jgr_150_black_purchase, "gfx/steam/jgr_150.png") {
	template_purchase(1, 192)
}





item (FEAT_TRAINS, jgr_150, 930) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_150);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1872,1,1);
  speed: 55 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 179 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_STEAM;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 19;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 40;
  cost_factor: 14;
  length: 5;
  running_cost_factor: 27;
  running_cost_base: RUNNING_COST_STEAM;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_STEAM),
                        string(STR_DESC_WHEELS_1B),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                          string(STR_SUFFIX_JGR)
                    )
                  );
  cargo_capacity: return 0;
//  cargo_subtype_text: switch_jgr_150_subtype_text;
  default: spriteset_jgr_150_black;
  purchase: spriteset_jgr_150_black_purchase;
	reverse_build_probability: return 50;
  }
}

//Spriteset jnr_c11
spriteset(spriteset_jnr_c11_black, "gfx/steam/jnr_c11.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_jnr_c11_flip_black, "gfx/steam/jnr_c11.png") {
	template_2cc_flip(1, 32)
}




spriteset(spriteset_jgr_c11_black_purchase, "gfx/steam/jnr_c11.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_jnr_c11_black_purchase, "gfx/steam/jnr_c11.png") {
	template_purchase(89, 256)
}

switch(FEAT_TRAINS, SELF, switch_c11_purchase, current_year) {
	0..1949: spriteset_jgr_c11_black_purchase;
	spriteset_jnr_c11_black_purchase;
	}

//flip switches
switch(FEAT_TRAINS, SELF, switch_jnr_c11_flip_black, vehicle_is_flipped) {
	0: spriteset_jnr_c11_black;
	1: spriteset_jnr_c11_flip_black;
}




item (FEAT_TRAINS, jnr_c11, 949) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_C11);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1932,1,1);
  speed: 85 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 582 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_STEAM;
//  cargo_capacity: 1;
//  cargo_allow_refit: [PASS];
  weight: 50;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 40;
  cost_factor: 16;
  length: 7;
  running_cost_factor: 31;
  running_cost_base: RUNNING_COST_STEAM;
  misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_5S, 
                        string(STR_DESC_POWER_STEAM),
                        string(STR_DESC_WHEELS_1C2),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_3C, 
                          string(STR_SUFFIX_JGR),
						              string(STR_SUFFIX_JNR),
                          string(STR_SUFFIX_PRIVATE)
                    )
                  );
  cargo_capacity: return 0;
//  cargo_subtype_text: switch_jnr_c11_subtype_text;
  default: switch_jnr_c11_flip_black;
  purchase: switch_c11_purchase;
	reverse_build_probability: return 50;
  }
}
//c53
	
	
spriteset(spriteset_c53_black_front, "gfx/steam/jnr_c53.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_c53_black_rear, "gfx/steam/jnr_c53.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_c53_streamlined_black_front, "gfx/steam/jnr_c53.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_c53_streamlined_black_rear, "gfx/steam/jnr_c53.png") {
	template_2cc_std(1, 96)
}

//purch

spriteset(spriteset_c53_jgr_purchase, "gfx/steam/jnr_c53.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_c53_jnr_purchase, "gfx/steam/jnr_c53.png") {
	template_purchase(89, 192)
}

spriteset(spriteset_c53_jgr_streamlined_purchase, "gfx/steam/jnr_c53.png") {
	template_purchase(1, 224)
}

spriteset(spriteset_c53_jnr_streamlined_purchase, "gfx/steam/jnr_c53.png") {
	template_purchase(89, 224)
}



/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_c53_articulated_part, extra_callback_info1) {
	1: return c53_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_c53_purchase, current_year) {
	0..1949: spriteset_c53_jgr_purchase;
	spriteset_c53_jnr_purchase;
	}

item (FEAT_TRAINS, c53, 947) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_C53);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1928,1,1);
		speed: 100 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.20;
		power: 1556 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 127;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 12;
		length: 7;
		running_cost_factor: 23;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_2C1),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_EP),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR)
                    )
                  );
		cargo_capacity: return 0;
//		cargo_subtype_text: switch_c53_subtype_text;
		default: spriteset_c53_black_front;
		purchase: switch_c53_purchase;
		articulated_part: switch_c53_articulated_part;
	}
}


item (FEAT_TRAINS, c53_rear, 847) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_c53);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 5;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: spriteset_c53_black_rear;
	}
}



/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_c53_streamlined_articulated_part, extra_callback_info1) {
	1: return c53_streamlined_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_c53_streamlined_purchase, current_year) {
	0..1949: spriteset_c53_jgr_streamlined_purchase;
	spriteset_c53_jnr_streamlined_purchase;
	}

item (FEAT_TRAINS, c53_streamlined, 948) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_C53_S);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1937,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.20;
		power: 1556 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 127;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 12;
		length: 7;
		running_cost_factor: 23;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		variant_group: 947;
	}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_2C1),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_EP),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR)
                    )
                  );
		cargo_capacity: return 0;
//		cargo_subtype_text: switch_c53_subtype_text;
		default: spriteset_c53_streamlined_black_front;
		purchase: switch_c53_streamlined_purchase;
		articulated_part: switch_c53_streamlined_articulated_part;
	}
}


item (FEAT_TRAINS, c53_streamlined_rear, 848) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_c53);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 5;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: spriteset_c53_streamlined_black_rear;
	}
}
//c62
	
	
spriteset(spriteset_c62_black_front, "gfx/steam/jnr_c62.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_c62_black_rear, "gfx/steam/jnr_c62.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_c62_stripe_front, "gfx/steam/jnr_c62.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_c62_stripe_rear, "gfx/steam/jnr_c62.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_c62_999_front, "gfx/steam/jnr_c62.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_c62_999_rear, "gfx/steam/jnr_c62.png") {
	template_2cc_std(1, 160)
}

//purch

spriteset(spriteset_c62_jgr_purchase, "gfx/steam/jnr_c62.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_c62_jnr_purchase, "gfx/steam/jnr_c62.png") {
	template_purchase(89, 192)
}


//refit

random_switch(FEAT_TRAINS, SELF, switch_c62_random) {
	1: spriteset_c62_black_front;
	1: spriteset_c62_stripe_front;
	}

random_switch(FEAT_TRAINS, PARENT, switch_c62_rear_random) {
	dependent: switch_c62_random;
	1: spriteset_c62_black_rear;
	1: spriteset_c62_stripe_rear;
	}



switch(FEAT_TRAINS, SELF, switch_c62_livery, cargo_subtype) {
	1: spriteset_c62_black_front;
	2: spriteset_c62_stripe_front;
	3: spriteset_c62_999_front;
	switch_c62_random;
	
}

switch(FEAT_TRAINS, SELF, switch_c62_rear_livery, cargo_subtype) {
	1: spriteset_c62_black_rear;
	2: spriteset_c62_stripe_rear;
	3: spriteset_c62_999_rear;
	switch_c62_rear_random;
	
}



switch(FEAT_TRAINS, SELF, switch_c62_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_WHITE)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_GE999), 
                                    string(STR_CONCAT_3F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	   return CB_RESULT_NO_TEXT;
	}





/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_c62_articulated_part, extra_callback_info1) {
	1: return c62_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_c62_purchase, current_year) {
	0..1949: spriteset_c62_jgr_purchase;
	spriteset_c62_jnr_purchase;
	}

item (FEAT_TRAINS, c62, 957) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_C62);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1948,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.15;
		power: 1611 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 145;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 40;
		cost_factor: 100;
		length: 7;
		running_cost_factor: 100;
		running_cost_base: RUNNING_COST_STEAM;
//		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_2C2),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_EP),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR)
                    )
                  );
		cargo_capacity: return 0;
		cargo_subtype_text: switch_c62_subtype_text;
		default: switch_c62_livery;
		purchase: switch_c62_purchase;
		articulated_part: switch_c62_articulated_part;
	}
}


item (FEAT_TRAINS, c62_rear, 857) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_c62);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 5;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
//		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: switch_c62_rear_livery;
	}
}


//d50
	
	
spriteset(spriteset_d50_black_front, "gfx/steam/jnr_d50.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_d50_stripe_front, "gfx/steam/jnr_d50.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_d50_black_rear, "gfx/steam/jnr_d50.png") {
	template_2cc_std(1, 64)
}


spriteset(spriteset_d50_reversed_black_rear, "gfx/steam/jnr_d50.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_d50_reversed_stripe_rear, "gfx/steam/jnr_d50.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_d50_reversed_black_front, "gfx/steam/jnr_d50.png") {
	template_2cc_std(1, 160)
}


//purch

spriteset(spriteset_d50_jgr_purchase, "gfx/steam/jnr_d50.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_d50_jnr_purchase, "gfx/steam/jnr_d50.png") {
	template_purchase(89, 192)
}

spriteset(spriteset_d50_jgr_reversed_purchase, "gfx/steam/jnr_d50.png") {
	template_purchase(1, 224)
}

spriteset(spriteset_d50_jnr_reversed_purchase, "gfx/steam/jnr_d50.png") {
	template_purchase(89, 224)
}



//refit

random_switch(FEAT_TRAINS, SELF, switch_d50_random) {
	1: spriteset_d50_black_front;
	1: spriteset_d50_stripe_front;
	}


switch(FEAT_TRAINS, SELF, switch_d50_livery, cargo_subtype) {
	1: spriteset_d50_black_front;
	2: spriteset_d50_stripe_front;
	switch_d50_random;
	
}



switch(FEAT_TRAINS, SELF, switch_d50_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_SMOKEDEF)
                                 );
	   return CB_RESULT_NO_TEXT;
	}




/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_d50_articulated_part, extra_callback_info1) {
	1: return d50_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_d50_purchase, current_year) {
	0..1949: spriteset_d50_jgr_purchase;
	spriteset_d50_jnr_purchase;
	}

item (FEAT_TRAINS, d50, 945) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_D50);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1923,1,1);
		speed: 70 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.26;
		power: 1500 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 127;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 12;
		length: 7;
		running_cost_factor: 23;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_1D1),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_HF),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR)
                    )
                  );
		cargo_capacity: return 0;
		cargo_subtype_text: switch_d50_subtype_text;
		default: switch_d50_livery;
		purchase: switch_d50_purchase;
		articulated_part: switch_d50_articulated_part;
	}
}


item (FEAT_TRAINS, d50_rear, 845) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_d50);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 5;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: spriteset_d50_black_rear;
	}
}

//refit

random_switch(FEAT_TRAINS, SELF, switch_d50_reversed_random) {
	1: spriteset_d50_reversed_black_rear;
	1: spriteset_d50_reversed_stripe_rear;
	}


switch(FEAT_TRAINS, SELF, switch_d50_reversed_livery, cargo_subtype) {
	1: spriteset_d50_reversed_black_rear;
	2: spriteset_d50_reversed_stripe_rear;
	switch_d50_reversed_random;
	
}



switch(FEAT_TRAINS, SELF, switch_d50_reversed_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_SMOKEDEF)
                                 );
	   return CB_RESULT_NO_TEXT;
	}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_d50_reversed_articulated_part, extra_callback_info1) {
	1: return d50_reversed_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_d50_reversed_purchase, current_year) {
	0..1949: spriteset_d50_jgr_reversed_purchase;
	spriteset_d50_jnr_reversed_purchase;
	}

//smoke callback



item (FEAT_TRAINS, d50_reversed, 745) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_D50_R);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1923,1,1);
		speed: 70 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.26;
		power: 1500 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 127;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 12;
		length: 5;
		running_cost_factor: 23;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		variant_group: 945;
	}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_1D1),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_HF),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR)
                    )
                  );
		cargo_capacity: return 0;
		cargo_subtype_text: switch_d50_reversed_subtype_text;
		default: spriteset_d50_reversed_black_front;
		purchase: switch_d50_reversed_purchase;
		articulated_part: switch_d50_reversed_articulated_part;

	}
}


item (FEAT_TRAINS, d50_reversed_rear, 645) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_d50);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 7;
		visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_STEAM, 3, DISABLE_WAGON_POWER);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: switch_d50_reversed_livery;

	}
}
//d51
	
//forward front
spriteset(spriteset_d51_black_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_d51_stripe_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_d51_black_semistreamlined_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_d51_stripe_semistreamlined_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_d51_stripe_streamlined_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_d51_stripe_gold_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_d51_hiro_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_d51_russian_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_d51_cc_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(1, 256)
}

//forward tender
spriteset(spriteset_d51_black_rear, "gfx/steam/jnr_d51.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_d51_stripe_rear, "gfx/steam/jnr_d51.png") {
	template_2cc_std(180, 32)
}
/*
spriteset(spriteset_d51_black_semistreamlined_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_d51_stripe_semistreamlined_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_d51_stripe_streamlined_front, "gfx/steam/jnr_d51.png") {
	template_2cc_std(180, 128)
}
*/
spriteset(spriteset_d51_stripe_gold_rear, "gfx/steam/jnr_d51.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_d51_hiro_rear, "gfx/steam/jnr_d51.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_d51_russian_rear, "gfx/steam/jnr_d51.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_d51_cc_rear, "gfx/steam/jnr_d51.png") {
	template_2cc_std(180, 256)
}

//reversed tender
spriteset(spriteset_d51_reversed_black_front, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_d51_reversed_stripe_front, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_d51_reversed_black_semistreamlined_front, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_d51_reversed_stripe_semistreamlined_front, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_d51_reversed_stripe_streamlined_front, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_d51_reversed_stripe_gold_front, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_d51_reversed_hiro_front, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_d51_reversed_russian_front, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_d51_reversed_cc_front, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(1, 256)
}

//reversed rear
spriteset(spriteset_d51_reversed_black_rear, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_d51_reversed_stripe_rear, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(180, 32)
}
/*
spriteset(spriteset_d51_reversed_black_semistreamlined_rear, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_d51_reversed_stripe_semistreamlined_rear, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_d51_reversed_stripe_streamlined_rear, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(180, 128)
}
*/
spriteset(spriteset_d51_reversed_stripe_gold_rear, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_d51_reversed_hiro_rear, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_d51_reversed_russian_rear, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_d51_reversed_cc_rear, "gfx/steam/jnr_d51_reversed.png") {
	template_2cc_std(180, 256)
}






//purch

spriteset(spriteset_d51_jgr_purchase, "gfx/steam/jnr_d51.png") {
	template_purchase(1, 320)
}

spriteset(spriteset_d51_jnr_purchase, "gfx/steam/jnr_d51.png") {
	template_purchase(89, 320)
}

spriteset(spriteset_d51_jgr_reversed_purchase, "gfx/steam/jnr_d51.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_d51_jnr_reversed_purchase, "gfx/steam/jnr_d51.png") {
	template_purchase(89, 352)
}



//refit

random_switch(FEAT_TRAINS, SELF, switch_d51_random) {
	3: spriteset_d51_black_front;
	3: spriteset_d51_stripe_front;
	2: spriteset_d51_black_semistreamlined_front;
	1: spriteset_d51_stripe_semistreamlined_front;
	1: spriteset_d51_stripe_streamlined_front;
	}

/*
random_switch(FEAT_TRAINS, SELF, switch_d51_rear_random) {
	3: spriteset_d51_black_rear;
	3: spriteset_d51_stripe_rear;
	2: spriteset_d51_black_rear;
	1: spriteset_d51_stripe_rear;
	1: spriteset_d51_stripe_rear;
	dependent: switch_d51_random;
	}
*/

switch(FEAT_TRAINS, SELF, switch_d51_livery, cargo_subtype) {
	1: spriteset_d51_black_front;
	2: spriteset_d51_stripe_front;
	3: spriteset_d51_black_semistreamlined_front;
	4: spriteset_d51_stripe_semistreamlined_front;
	5: spriteset_d51_stripe_streamlined_front;
	6: spriteset_d51_stripe_gold_front;
	7: spriteset_d51_russian_front;
	8: spriteset_d51_hiro_front;
	9: spriteset_d51_cc_front;
	switch_d51_random;
	
}

switch(FEAT_TRAINS, SELF, switch_d51_rear_livery, cargo_subtype) {
	1: spriteset_d51_black_rear;
	2: spriteset_d51_stripe_rear;
	3: spriteset_d51_black_rear;
	4: spriteset_d51_stripe_rear;
	5: spriteset_d51_stripe_rear;
	6: spriteset_d51_stripe_gold_rear;
	7: spriteset_d51_russian_rear;
	8: spriteset_d51_hiro_rear;
	9: spriteset_d51_cc_rear;
	spriteset_d51_black_rear;
	
}



switch(FEAT_TRAINS, SELF, switch_d51_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_WHITE)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    ), string(STR_SUFFIX_SEMISTREAM)
                                 );	
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_SEMISTREAM)
                                 );	
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_STREAMLINED)
                                 );	
	6: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_IMPERIAL)
                                 );	
	7: return string(STR_CONCAT_2, string(STR_SUFFIX_SAKHALIN), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_BLACK),
									string(STR_COLOUR_RED),
									string(STR_COLOUR_WHITE)
                                    )
                                 );	
	8: return string(STR_CONCAT_3, string(STR_SUFFIX_OIGAWA), 
                                   string(STR_CONCAT_3F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_RED),
									 string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_HIRO)
                                 );	
	9: return string(STR_REFIT_CC);						 
	   return CB_RESULT_NO_TEXT;
	}




/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_d51_articulated_part, extra_callback_info1) {
	1: return d51_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_d51_purchase, current_year) {
	0..1949: spriteset_d51_jgr_purchase;
	spriteset_d51_jnr_purchase;
	}

item (FEAT_TRAINS, d51, 951) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_D51);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1936,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.26;
		power: 1193 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 126;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 12;
		length: 7;
		running_cost_factor: 23;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_1D1),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_HF),
								string(STR_CONCAT_4C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_SAKHALIN),
									string(STR_SUFFIX_PRIVATE)

                    )
                  );
		cargo_capacity: return 0;
		cargo_subtype_text: switch_d51_subtype_text;
		default: switch_d51_livery;
		purchase: switch_d51_purchase;
		articulated_part: switch_d51_articulated_part;
	}
}


item (FEAT_TRAINS, d51_rear, 851) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_d51);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 5;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: switch_d51_rear_livery;
	}
}

//reversed variant

//refit


random_switch(FEAT_TRAINS, SELF, switch_d51_reversed_random) {
	3: spriteset_d51_reversed_black_front;
	3: spriteset_d51_reversed_stripe_front;
	2: spriteset_d51_reversed_black_semistreamlined_front;
	1: spriteset_d51_reversed_stripe_semistreamlined_front;
	1: spriteset_d51_reversed_stripe_streamlined_front;
	}



switch(FEAT_TRAINS, SELF, switch_d51_reversed_livery, cargo_subtype) {
	1: spriteset_d51_reversed_black_front;
	2: spriteset_d51_reversed_stripe_front;
	3: spriteset_d51_reversed_black_semistreamlined_front;
	4: spriteset_d51_reversed_stripe_semistreamlined_front;
	5: spriteset_d51_reversed_stripe_streamlined_front;
	6: spriteset_d51_reversed_stripe_gold_front;
	7: spriteset_d51_reversed_russian_front;
	8: spriteset_d51_reversed_hiro_front;
	9: spriteset_d51_reversed_cc_front;
	switch_d51_reversed_random;
	
}

switch(FEAT_TRAINS, SELF, switch_d51_reversed_rear_livery, cargo_subtype) {
	1: spriteset_d51_reversed_black_rear;
	2: spriteset_d51_reversed_stripe_rear;
	3: spriteset_d51_reversed_black_rear;
	4: spriteset_d51_reversed_stripe_rear;
	5: spriteset_d51_reversed_stripe_rear;
	6: spriteset_d51_reversed_stripe_gold_rear;
	7: spriteset_d51_reversed_russian_rear;
	8: spriteset_d51_reversed_hiro_rear;
	9: spriteset_d51_reversed_cc_rear;
	spriteset_d51_reversed_black_rear;
	
}



switch(FEAT_TRAINS, SELF, switch_d51_reversed_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_WHITE)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    ), string(STR_SUFFIX_SEMISTREAM)
                                 );	
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_SEMISTREAM)
                                 );	
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_STREAMLINED)
                                 );	
	6: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_IMPERIAL)
                                 );	
	7: return string(STR_CONCAT_2, string(STR_SUFFIX_SAKHALIN), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_BLACK),
									string(STR_COLOUR_RED),
									string(STR_COLOUR_WHITE)
                                    )
                                 );	
	8: return string(STR_CONCAT_3, string(STR_SUFFIX_OIGAWA), 
                                   string(STR_CONCAT_3F, 
                                     string(STR_COLOUR_BLACK),
									 string(STR_COLOUR_RED),
									 string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_HIRO)
                                 );	
	9: return string(STR_REFIT_CC);						 
	   return CB_RESULT_NO_TEXT;
	}




/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_d51_reversed_articulated_part, extra_callback_info1) {
	1: return d51_reversed_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_d51_reversed_purchase, current_year) {
	0..1949: spriteset_d51_jgr_reversed_purchase;
	spriteset_d51_jnr_reversed_purchase;
	}

//smoke callback



item (FEAT_TRAINS, d51_reversed, 751) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_D51);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1936,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.26;
		power: 1193 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 126;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 12;
		length: 5;
		running_cost_factor: 23;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		variant_group: 951;
	}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_1D1),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_HF),
								string(STR_CONCAT_2C, 
								string(STR_CONCAT_4C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_SAKHALIN),
									string(STR_SUFFIX_PRIVATE)
								)
                    )
                  );
		cargo_capacity: return 0;
		cargo_subtype_text: switch_d51_reversed_subtype_text;
		default: switch_d51_reversed_rear_livery;
		purchase: switch_d51_reversed_purchase;
		articulated_part: switch_d51_reversed_articulated_part;

	}
}


item (FEAT_TRAINS, d51_reversed_rear, 651) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_d51);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 7;
		visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_STEAM, 3, DISABLE_WAGON_POWER);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: switch_d51_reversed_livery;

	}
}
//d52
	
	
spriteset(spriteset_d52_black_front, "gfx/steam/jnr_d52.png") {
	template_2cc_std(1, 1)
}



spriteset(spriteset_d52_black_rear, "gfx/steam/jnr_d52.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_d52_reversed_black_front, "gfx/steam/jnr_d52.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_d52_reversed_black_rear, "gfx/steam/jnr_d52.png") {
	template_2cc_std(1, 96)
}





//purch

spriteset(spriteset_d52_jgr_purchase, "gfx/steam/jnr_d52.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_d52_jnr_purchase, "gfx/steam/jnr_d52.png") {
	template_purchase(89, 192)
}

spriteset(spriteset_d52_jgr_reversed_purchase, "gfx/steam/jnr_d52.png") {
	template_purchase(1, 224)
}

spriteset(spriteset_d52_jnr_reversed_purchase, "gfx/steam/jnr_d52.png") {
	template_purchase(89, 224)
}





/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_d52_articulated_part, extra_callback_info1) {
	1: return d52_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_d52_purchase, current_year) {
	0..1949: spriteset_d52_jgr_purchase;
	spriteset_d52_jnr_purchase;
	}

item (FEAT_TRAINS, d52, 955) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_D52);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1943,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.26;
		power: 1950 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 127;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 12;
		length: 7;
		running_cost_factor: 23;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_1D1),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_HF),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR)
                    )
                  );
		cargo_capacity: return 0;
//		cargo_subtype_text: switch_d52_subtype_text;
		default: spriteset_d52_black_front;
		purchase: switch_d52_purchase;
		articulated_part: switch_d52_articulated_part;
	}
}


item (FEAT_TRAINS, d52_rear, 855) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_d52);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 5;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: spriteset_d52_black_rear;
	}
}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_d52_reversed_articulated_part, extra_callback_info1) {
	1: return d52_reversed_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_d52_reversed_purchase, current_year) {
	0..1949: spriteset_d52_jgr_reversed_purchase;
	spriteset_d52_jnr_reversed_purchase;
	}

//smoke callback



item (FEAT_TRAINS, d52_reversed, 755) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_D52_R);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1923,1,1);
		speed: 70 km/h;
		air_drag_coefficient: 0;
		tractive_effort_coefficient:    0.26;
		power: 1500 kW;
		dual_headed: 0;
		engine_class: ENGINE_CLASS_STEAM;
		cargo_capacity: 1;
		cargo_allow_refit: [PASS];
		weight: 127;
		reliability_decay: 20;
		model_life: 40;
		vehicle_life: 60;
		cost_factor: 12;
		length: 5;
		running_cost_factor: 23;
		running_cost_base: RUNNING_COST_STEAM;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		variant_group: 955;
	}
	graphics { // graphics for engine
		additional_text:	string(STR_CONCAT_5S, 
								string(STR_DESC_POWER_STEAM),
								string(STR_DESC_WHEELS_1D1),
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_HF),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR)
                    )
                  );
		cargo_capacity: return 0;
//		cargo_subtype_text: switch_d52_reversed_subtype_text;
		default: spriteset_d52_reversed_black_front;
		purchase: switch_d52_reversed_purchase;
		articulated_part: switch_d52_reversed_articulated_part;

	}
}


item (FEAT_TRAINS, d52_reversed_rear, 655) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_d52);
		climates_available: NO_CLIMATE;
		introduction_date: date(1800,1,1);
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 7;
		visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_STEAM, 3, DISABLE_WAGON_POWER);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		default: spriteset_d52_reversed_black_rear;

	}
}

spriteset(spriteset_deki_400_black, "gfx/private/deki401.png") {
	template_2cc_std(1, 1)
}
spriteset(spriteset_deki_400_yellow, "gfx/private/deki401.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_deki_400_blue, "gfx/private/deki401.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_deki_400_cc, "gfx/private/deki401.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_deki_400_black_purchase, "gfx/private/deki401.png") {
	template_purchase(1, 128)
}

spriteset(spriteset_deki_400_yellow_purchase, "gfx/private/deki401.png") {
	template_purchase(89, 128)
}

spriteset(spriteset_deki_400_blue_purchase, "gfx/private/deki401.png") {
	template_purchase(1, 160)
}

switch(FEAT_TRAINS, SELF, switch_deki_400_purchase, current_year) {
	0..1960: spriteset_deki_400_black_purchase;
	1960..1993: spriteset_deki_400_yellow_purchase;
	spriteset_deki_400_blue_purchase;
}

switch(FEAT_TRAINS, SELF, switch_deki_400_yeardep_livery, build_year) {
	0..1960: spriteset_deki_400_black;
	1960..1993: spriteset_deki_400_yellow;
	spriteset_deki_400_blue;
}

switch(FEAT_TRAINS, SELF, switch_deki_400_livery, cargo_subtype) {
	1: spriteset_deki_400_black;
	2: spriteset_deki_400_yellow;
	3: spriteset_deki_400_blue;
	4: spriteset_deki_400_cc;
	switch_deki_400_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_deki_400_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_AICHI), 
                                  string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_MEITETSU), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_MEITETSU), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}




//deki
item (FEAT_TRAINS, deki_400, 1005) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_DEKI_400);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1930,1,1);
  speed: 65 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 400 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 40;
  reliability_decay: 20;
  model_life: 70;
  vehicle_life: 60;
  cost_factor: 22;
  length: 5;
  running_cost_factor: 32;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_LF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_AICHI),
                           string(STR_SUFFIX_MEITETSU)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_deki_400_subtype_text;
  default: switch_deki_400_livery;
  purchase: switch_deki_400_purchase;
  }
}
spriteset(spriteset_el120_red, "gfx/private/el120.png") {
	template_2cc_std(1, 1)
}
spriteset(spriteset_el120_cc, "gfx/private/el120.png") {
	template_2cc_std(1, 32)
}


spriteset(spriteset_el120_purchase, "gfx/private/el120.png") {
	template_purchase(1, 96)
}



switch(FEAT_TRAINS, SELF, switch_el120_livery, cargo_subtype) {
	0: spriteset_el120_red;
	1: spriteset_el120_cc;
}



switch(FEAT_TRAINS, SELF, switch_el120_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_MEITETSU), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	}




//deki
item (FEAT_TRAINS, el120, 1106) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EL120);
  climates_available: ALL_CLIMATES;
  introduction_date: date(2015,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 760 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 40;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 40;
  cost_factor: 29;
  length: 5;
  running_cost_factor: 39;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_LF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_MEITETSU)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_el120_subtype_text;
  default: switch_el120_livery;
  purchase: spriteset_el120_purchase;
  }
}
spriteset(spriteset_seibu_e31, "gfx/private/seibu_e31.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_seibu_e31_cc, "gfx/private/seibu_e31.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_seibu_e31_purchase, "gfx/private/seibu_e31.png") {
	template_purchase(1, 96)
}

switch(FEAT_TRAINS, SELF, switch_seibu_e31_livery, cargo_subtype) {
	1: spriteset_seibu_e31_cc;
	spriteset_seibu_e31;
}

switch(FEAT_TRAINS, SELF, switch_seibu_e31_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_SEIBU), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, seibu_e31, 1101) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_E31);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1986,1,1);
  speed: 70 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.27;
  power: 520 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 40;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 13;
  length: 4;
  running_cost_factor: 9;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_LF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_SEIBU),
                           string(STR_SUFFIX_OIGAWA)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_seibu_e31_subtype_text;
  default: switch_seibu_e31_livery;
  purchase: spriteset_seibu_e31_purchase;
  }
}
spriteset(spriteset_seibu_e851, "gfx/private/seibu_e851.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_seibu_e851_amtrak, "gfx/private/seibu_e851.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_seibu_e851_cc, "gfx/private/seibu_e851.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_seibu_e851_purchase, "gfx/private/seibu_e851.png") {
	template_purchase(1, 96)
}

switch(FEAT_TRAINS, SELF, switch_seibu_e851_livery, cargo_subtype) {
	1: spriteset_seibu_e851_amtrak;
   2: spriteset_seibu_e851_cc;
	spriteset_seibu_e851;
}

switch(FEAT_TRAINS, SELF, switch_seibu_e851_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_SEIBU), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
   1: return string(STR_CONCAT_3, string(STR_SUFFIX_AMTRAK), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_GREY), 
                                    string(STR_COLOUR_RED),
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	2: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, seibu_e851, 1100) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_E851);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1969,1,1);
  speed: 115 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.27;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 88;
  length: 7;
  running_cost_factor: 85;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_SEIBU)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_seibu_e851_subtype_text;
  default: switch_seibu_e851_livery;
  purchase: spriteset_seibu_e851_purchase;
  }
}

spriteset(spriteset_ab10_brown, "gfx/electric/eb10.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ab10_black, "gfx/electric/eb10.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ab10_cc, "gfx/electric/eb10.png") {
	template_2cc_std(1, 160)
}


spriteset(spriteset_ab10_purchase, "gfx/electric/eb10.png") {
	template_purchase(1, 192)
}

switch(FEAT_TRAINS, SELF, switch_ab10_livery, cargo_subtype) {
	1: spriteset_ab10_brown;
   2: spriteset_ab10_cc;
	spriteset_ab10_black;
}


switch(FEAT_TRAINS, SELF, switch_ab10_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_SEMIFIC)
                                 );
   2: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, ab10, 1010) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_AB10);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1927,1,1);
  speed: 40 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.24;
  power: 125 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 30;
  reliability_decay: 20;
  model_life: 10;
  vehicle_life: 10;
  cost_factor: 20;
  length: 4;
  running_cost_factor: 32;
  running_cost_base: RUNNING_COST_DIESEL;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_BATT),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_LF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JGR)
                    )
                  );

  cargo_subtype_text: switch_ab10_subtype_text;
  default: switch_ab10_livery;
  purchase: spriteset_ab10_purchase;
  cargo_capacity: return 0;  
  }
}



spriteset(spriteset_eb10_brown, "gfx/electric/eb10.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_eb10_black, "gfx/electric/eb10.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_eb10_cc, "gfx/electric/eb10.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_eb10_jgr_purchase, "gfx/electric/eb10.png") {
	template_purchase(89, 192)
}

spriteset(spriteset_eb10_jnr_purchase, "gfx/electric/eb10.png") {
	template_purchase(89, 224)
}


switch(FEAT_TRAINS, SELF, switch_eb10_livery, cargo_subtype) {
	1: spriteset_eb10_brown;
   2: spriteset_eb10_cc;
	spriteset_eb10_black;
}

switch(FEAT_TRAINS, SELF, switch_eb10_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_eb10_purchase_yeardep, current_year) {
    0..1949: spriteset_eb10_jgr_purchase;
    spriteset_eb10_jnr_purchase;
    }

//todo add variant group
item (FEAT_TRAINS, eb10, 1011) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EB10);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1931,1,1);
  speed: 40 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.24;
  power: 135 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 22;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 19;
  length: 4;
  running_cost_factor: 30;
  running_cost_base: RUNNING_COST_ELECTRIC;
  variant_group: 1010;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_LF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );

  cargo_subtype_text: switch_eb10_subtype_text;
  default: switch_eb10_livery;
  purchase: switch_eb10_purchase_yeardep;
  cargo_capacity: return 0;
  }
}
spriteset(spriteset_ed12_brown, "gfx/electric/ed12.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed12_seibu, "gfx/electric/ed12.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ed12_cc, "gfx/electric/ed12.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ed12_jgr_purchase, "gfx/electric/ed12.png") {
	template_purchase(1, 96)
}

spriteset(spriteset_ed12_jnr_purchase, "gfx/electric/ed12.png") {
	template_purchase(1, 128)
}

spriteset(spriteset_ed12_seibu_purchase, "gfx/electric/ed12.png") {
	template_purchase(89, 96)
}


switch(FEAT_TRAINS, SELF, switch_ed12_livery, cargo_subtype) {
	0: spriteset_ed12_brown;
	1: spriteset_ed12_cc;
}

switch(FEAT_TRAINS, SELF, switch_ed12_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, ed12, 990) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_ED12);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1923,1,1);
  speed: 65 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 875 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 59;
  reliability_decay: 20;
  model_life: 65;
  vehicle_life: 50;
  cost_factor: 31;
  length: 5;
  running_cost_factor: 38;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JGR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed12_subtype_text;
  default: switch_ed12_livery;
  purchase: spriteset_ed12_jgr_purchase;
  }
}



switch(FEAT_TRAINS, SELF, switch_e51_livery, cargo_subtype) {
	0: spriteset_ed12_seibu;
	1: spriteset_ed12_cc;
}

switch(FEAT_TRAINS, SELF, switch_e51_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_SEIBU), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_PINK)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, e51, 991) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_E51);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1950,1,1);
  speed: 65 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 875 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 59;
  reliability_decay: 20;
  model_life: 65;
  vehicle_life: 50;
  cost_factor: 31;
  length: 5;
  running_cost_factor: 38;
  running_cost_base: RUNNING_COST_STEAM;
  variant_group: 990;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_SEIBU)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_e51_subtype_text;
  default: switch_e51_livery;
  purchase: spriteset_ed12_seibu_purchase;
  }
}
spriteset(spriteset_ed16_brown, "gfx/electric/ed16.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed16_cc, "gfx/electric/ed16.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ed16_jgr_purchase, "gfx/electric/ed16.png") {
	template_purchase(1, 96)
}

spriteset(spriteset_ed16_jnr_purchase, "gfx/electric/ed16.png") {
	template_purchase(1, 128)
}

switch(FEAT_TRAINS, SELF, switch_ed16_yeardep_purchase, current_year) {
	0..1949: spriteset_ed16_jgr_purchase;
	spriteset_ed16_jnr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ed16_livery, cargo_subtype) {
	0: spriteset_ed16_brown;
	1: spriteset_ed16_cc;
}



switch(FEAT_TRAINS, SELF, switch_ed16_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, ed16, 1004) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_ED16);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1931,1,1);
  speed: 65 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 77;
  reliability_decay: 20;
  model_life: 65;
  vehicle_life: 50;
  cost_factor: 32;
  length: 6;
  running_cost_factor: 40;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed16_subtype_text;
  default: switch_ed16_livery;
  purchase: switch_ed16_yeardep_purchase;
  }
}


switch(FEAT_TRAINS, SELF, switch_ed55_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_PROPOSAL)
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, ed55, 1904) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_ED55);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1941,1,1);
  speed: 95 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.23;
  power: 900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 77;
  reliability_decay: 20;
  model_life: 65;
  vehicle_life: 50;
  cost_factor: 32;
  length: 6;
  running_cost_factor: 42;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1004;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EP),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed55_subtype_text;
  default: switch_ed16_livery;
  purchase: switch_ed16_yeardep_purchase;
  }
}
spriteset(spriteset_ed17_brown, "gfx/electric/ed17.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed17_black, "gfx/electric/ed17.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ed17_cc, "gfx/electric/ed17.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ed17_jgr_brown_purchase, "gfx/electric/ed17.png") {
	template_purchase(1, 96)
}

spriteset(spriteset_ed17_jgr_black_purchase, "gfx/electric/ed17.png") {
	template_purchase(89, 96)
}

switch(FEAT_TRAINS, SELF, switch_ed17_yeardep_purchase, current_year) {
	0..1928: spriteset_ed17_jgr_black_purchase;
	spriteset_ed17_jgr_brown_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ed17_yeardep_livery, build_year) {
	0..1928: spriteset_ed17_black;
	spriteset_ed17_brown;
}

switch(FEAT_TRAINS, SELF, switch_ed17_livery, cargo_subtype) {
	0: switch_ed17_yeardep_livery;
	1: spriteset_ed17_black;
	2: spriteset_ed17_brown;
	3: spriteset_ed17_cc;
}

switch(FEAT_TRAINS, SELF, switch_ed17_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	3: return string(STR_REFIT_CC);
}


item (FEAT_TRAINS, ed17, 1002) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_ED17);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1923,1,1);
  speed: 65 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.26;
  power: 925 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 60;
  reliability_decay: 17;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 31;
  length: 6;
  running_cost_factor: 37;
  running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JGR)
                    )
                  );
    default: switch_ed17_livery;
    purchase: switch_ed17_yeardep_purchase;
    cargo_capacity: return 0;
    cargo_subtype_text: switch_ed17_subtype_text;
  }
}



switch(FEAT_TRAINS, SELF, switch_ed50_livery, cargo_subtype) {
	0: switch_ed17_yeardep_livery;
	1: spriteset_ed17_black;
	2: spriteset_ed17_brown;
	3: spriteset_ed17_cc;
}

switch(FEAT_TRAINS, SELF, switch_ed50_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	3: return string(STR_REFIT_CC);
}

item (FEAT_TRAINS, ed50, 1012) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_ED50);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1923,1,1);
  speed: 85 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.21;
  power: 925 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 60;
  reliability_decay: 17;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 31;
  length: 6;
  running_cost_factor: 40;
  running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	variant_group: 1002;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_P),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JGR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed50_subtype_text;
  default: switch_ed50_livery;
  purchase: switch_ed17_yeardep_purchase;
  }
}
spriteset(spriteset_ed53_brown, "gfx/electric/ed53.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed53_cc, "gfx/electric/ed53.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ed53_purchase, "gfx/electric/ed53.png") {
	template_purchase(1, 96)
}


switch(FEAT_TRAINS, SELF, switch_ed53_livery, cargo_subtype) {
	0: spriteset_ed53_brown;
	1: spriteset_ed53_cc;
}



switch(FEAT_TRAINS, SELF, switch_ed53_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, ed19, 1013) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_ED19);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1937,1,1);
  speed: 65 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 840 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 68;
  reliability_decay: 20;
  model_life: 55;
  vehicle_life: 50;
  cost_factor: 30;
  length: 5;
  running_cost_factor: 36;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1050;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_LF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed53_subtype_text;
  default: switch_ed53_livery;
  purchase: spriteset_ed53_purchase;
  }
}

item (FEAT_TRAINS, ed53, 1050) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_ED53);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1926,1,1);
  speed: 95 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.20;
  power: 840 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 68;
  reliability_decay: 20;
  model_life: 55;
  vehicle_life: 50;
  cost_factor: 30;
  length: 5;
  running_cost_factor: 40;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);

  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EP),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed53_subtype_text;
  default: switch_ed53_livery;
  purchase: spriteset_ed53_purchase;
  }
}
spriteset(spriteset_ed54_brown, "gfx/electric/ed54.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed54_brown_flip, "gfx/electric/ed54.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_ed54_cc, "gfx/electric/ed54.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ed54_cc_flip, "gfx/electric/ed54.png") {
	template_2cc_flip(1, 96)
}



spriteset(spriteset_ed54_jgr_purchase, "gfx/electric/ed54.png") {
	template_purchase(1, 128)
}

spriteset(spriteset_ed54_jnr_purchase, "gfx/electric/ed54.png") {
	template_purchase(1, 160)
}


switch(FEAT_TRAINS, SELF, switch_ed54_brown_flip, vehicle_is_flipped) {
	0: spriteset_ed54_brown;
	1: spriteset_ed54_brown_flip;
}

switch(FEAT_TRAINS, SELF, switch_ed54_cc_flip, vehicle_is_flipped) {
	0: spriteset_ed54_cc;
	1: spriteset_ed54_cc_flip;
}



switch(FEAT_TRAINS, SELF, switch_ed54_livery, cargo_subtype) {
	0: switch_ed54_brown_flip;
	1: switch_ed54_cc_flip;	
	switch_ed54_brown_flip;
}

switch(FEAT_TRAINS, SELF, switch_ed54_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	1: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_ed54_yeardep_purchase, current_year) {
    0..1949: spriteset_ed54_jgr_purchase;
    spriteset_ed54_jnr_purchase;
    }


item (FEAT_TRAINS, ed54, 1051) {

property {
    sprite_id: SPRITE_ID_NEW_TRAIN;
    track_type: TR_1067_DC;
    name: string(STR_NAME_ED54);
    climates_available: ALL_CLIMATES;
    introduction_date: date(1926,1,1);
    speed: 100 km/h;
    air_drag_coefficient: 0;
    tractive_effort_coefficient:    0.20;
    power: 1540 kW;
    dual_headed: 0;
    engine_class: ENGINE_CLASS_ELECTRIC;
    cargo_capacity: 1;
    cargo_allow_refit: [PASS];
    weight: 78;
    reliability_decay: 20;
    model_life: 60;
    vehicle_life: 50;
    cost_factor: 49;
    length: 6;
    running_cost_factor: 76;
    running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EP),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed54_subtype_text;
  default: switch_ed54_livery;
  purchase: switch_ed54_yeardep_purchase;
  }
}
spriteset(spriteset_ed60_cc, "gfx/electric/ed60.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ed60_brown, "gfx/electric/ed60.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed60_blue, "gfx/electric/ed60.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ed60_brown_purchase, "gfx/electric/ed60.png") {
	template_purchase(1, 96)
}

spriteset(spriteset_ed60_blue_purchase, "gfx/electric/ed60.png") {
	template_purchase(89, 96)
}


switch(FEAT_TRAINS, SELF, switch_ed60_yeardep_purchase, current_year) {
	0..1965: spriteset_ed60_brown_purchase;
	spriteset_ed60_blue_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ed60_yeardep_livery, build_year) {
	0..1965: spriteset_ed60_brown;
	spriteset_ed60_blue;

}

switch(FEAT_TRAINS, SELF, switch_ed60_livery, cargo_subtype) {
	1: spriteset_ed60_brown;
	2: spriteset_ed60_blue;
	3: spriteset_ed60_cc;
	switch_ed60_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_ed60_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, ed60, 1059) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_ED60);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1958,1,1);
  speed: 90 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1560 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 58;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 36;
  length: 6;
  running_cost_factor: 53;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed60_subtype_text;
  default: switch_ed60_livery;
  purchase: switch_ed60_yeardep_purchase;
  }
}
spriteset(spriteset_ed61_cc, "gfx/electric/ed62.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed61_brown, "gfx/electric/ed62.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ed61_blue, "gfx/electric/ed62.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ed62_cc, "gfx/electric/ed62.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ed62_brown, "gfx/electric/ed62.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ed62_blue, "gfx/electric/ed62.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ed62_jrf, "gfx/electric/ed62.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ed62_hama, "gfx/electric/ed62.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_ed61_brown_purchase, "gfx/electric/ed62.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_ed61_blue_purchase, "gfx/electric/ed62.png") {
	template_purchase(89, 256)
}

spriteset(spriteset_ed62_blue_purchase, "gfx/electric/ed62.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_ed62_jrf_purchase, "gfx/electric/ed62.png") {
	template_purchase(89, 288)
}


switch(FEAT_TRAINS, SELF, switch_ed61_yeardep_purchase, current_year) {
	0..1965: spriteset_ed61_brown_purchase;
	spriteset_ed61_blue_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ed61_yeardep_livery, build_year) {
	0..1965: spriteset_ed61_brown;
	spriteset_ed61_blue;

}

switch(FEAT_TRAINS, SELF, switch_ed61_livery, cargo_subtype) {
	1: spriteset_ed61_brown;
	2: spriteset_ed61_blue;
	3: spriteset_ed61_cc;
	switch_ed61_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_ed61_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, ed61, 1060) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_ED61);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1958,1,1);
  speed: 90 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1560 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 60;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 36;
  length: 7;
  running_cost_factor: 53;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed61_subtype_text;
  default: switch_ed61_livery;
  purchase: switch_ed61_yeardep_purchase;
  }
}

//ed62

switch(FEAT_TRAINS, SELF, switch_ed62_yeardep_purchase, current_year) {
	0..1988: spriteset_ed62_blue_purchase;
	spriteset_ed62_jrf_purchase;

}


switch(FEAT_TRAINS, SELF, switch_ed62_yeardep_livery, build_year) {
	0..1988: spriteset_ed62_blue;
	spriteset_ed62_jrf;
}



switch(FEAT_TRAINS, SELF, switch_ed62_livery, cargo_subtype) {
	1: spriteset_ed62_brown;
	2: spriteset_ed62_blue;
	3: spriteset_ed62_jrf;
	4: spriteset_ed62_hama;
	5: spriteset_ed62_cc;
	switch_ed62_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ed62_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_HAMAMATSU)
                                 );
	5: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, ed62, 1960) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_ED62);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1974,1,1);
  speed: 90 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1560 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 60;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 36;
  length: 7;
  running_cost_factor: 53;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1060;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRF)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed62_subtype_text;
  default: switch_ed62_livery;
  purchase: switch_ed62_yeardep_purchase;
  }
}
spriteset(spriteset_ef10_jgr_a, "gfx/electric/ef10.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef10_jgr_b, "gfx/electric/ef10.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef10_silver, "gfx/electric/ef10.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef10_cc_a, "gfx/electric/ef10.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef10_cc_b, "gfx/electric/ef10.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef10_jgr_purchase, "gfx/electric/ef10.png") {
	template_purchase(1, 160)
}

spriteset(spriteset_ef10_jnr_purchase, "gfx/electric/ef10.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_ef10_2_jgr_purchase, "gfx/electric/ef10.png") {
	template_purchase(89, 160)
}

spriteset(spriteset_ef10_2_jnr_purchase, "gfx/electric/ef10.png") {
	template_purchase(89, 192)
}

switch(FEAT_TRAINS, SELF, switch_ef10_yeardep_purchase, current_year) {
    0..1949: spriteset_ef10_jgr_purchase;
    spriteset_ef10_jnr_purchase;
    }

switch(FEAT_TRAINS, SELF, switch_ef10_yeardep, build_year) {
    0..1949: spriteset_ef10_jgr_a;
    spriteset_ef10_jgr_b;
    }

switch(FEAT_TRAINS, SELF, switch_ef10_livery, cargo_subtype) {
	0: switch_ef10_yeardep;
	1: spriteset_ef10_jgr_a;
	2: spriteset_ef10_cc_a;
}



switch(FEAT_TRAINS, SELF, switch_ef10_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef10_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF10);
  } 
switch (FEAT_TRAINS, SELF, switch_ef10_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef10_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef10, 1008) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF10_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1933,1,1);
  speed: 75 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.26;
  power: 1350 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 98;
  reliability_decay: 22;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 39;
  length: 7;
  running_cost_factor: 56;
  running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef10_subtype_text;
  default: switch_ef10_livery;
  purchase: switch_ef10_yeardep_purchase;
  name: switch_ef10_name;
  }
}

//EF10 updated variant

switch(FEAT_TRAINS, SELF, switch_ef10_2_yeardep_purchase, current_year) {
    0..1949: spriteset_ef10_2_jgr_purchase;
    spriteset_ef10_2_jnr_purchase;
    }

random_switch(FEAT_TRAINS, SELF, random_ef10_2_silver) {
	1: spriteset_ef10_jgr_b;
	1: spriteset_ef10_silver;
}

switch(FEAT_TRAINS, SELF, switch_ef10_2_yeardep, build_year) {
    0..1940: random_ef10_2_silver;
    spriteset_ef10_jgr_b;
    }

switch(FEAT_TRAINS, SELF, switch_ef10_2_livery, cargo_subtype) {
	0: switch_ef10_2_yeardep;
	1: spriteset_ef10_jgr_b;
	2: spriteset_ef10_silver;
	3: spriteset_ef10_cc_b;
}



switch(FEAT_TRAINS, SELF, switch_ef10_2_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDYEAR);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_SILVER)
                                    )
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef10_2_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF10);
  } 
switch (FEAT_TRAINS, SELF, switch_ef10_2_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef10_2_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, ef10_2, 1052) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF10_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1937,1,1);
  speed: 75 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.26;
  power: 1350 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 98;
  reliability_decay: 22;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 39;
  length: 7;
  running_cost_factor: 56;
  running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	variant_group: 1008;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef10_2_subtype_text;
  default: switch_ef10_2_livery;
  purchase: switch_ef10_2_yeardep_purchase;
  name: switch_ef10_2_name;
  }
}
spriteset(spriteset_ef13_croc_brown, "gfx/electric/ef13.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef13_bloc_brown, "gfx/electric/ef13.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef13_croc_cc, "gfx/electric/ef13.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef13_bloc_cc, "gfx/electric/ef13.png") {
	template_2cc_std(1, 96)
}



spriteset(spriteset_ef13_croc_jgr_purchase, "gfx/electric/ef13.png") {
	template_purchase(1, 128)
}

spriteset(spriteset_ef13_croc_jnr_purchase, "gfx/electric/ef13.png") {
	template_purchase(89, 128)
}

spriteset(spriteset_ef13_bloc_jnr_purchase, "gfx/electric/ef13.png") {
	template_purchase(89, 160)
}

switch(FEAT_TRAINS, SELF, switch_ef13_yeardep_purchase, current_year) {
    0..1949: spriteset_ef13_croc_jgr_purchase;
    spriteset_ef13_croc_jnr_purchase;
    }

switch(FEAT_TRAINS, SELF, switch_ef13_livery, cargo_subtype) {
	0: spriteset_ef13_croc_brown;
	1: spriteset_ef13_croc_cc;
}

switch(FEAT_TRAINS, SELF, switch_ef13_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
}


switch (FEAT_TRAINS, SELF, switch_ef13_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF13);
  } 
switch (FEAT_TRAINS, SELF, switch_ef13_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef13_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, ef13_1, 1033) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF13_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1944,1,1);
  speed: 75 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.26;
  power: 1600 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 99;
  reliability_decay: 15;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 38;
  length: 7;
  running_cost_factor: 57;
  running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef13_subtype_text;
  default: switch_ef13_livery;
  purchase: switch_ef13_yeardep_purchase;
  name: switch_ef13_name;
  }
}



switch(FEAT_TRAINS, SELF, switch_ef13_2_livery, cargo_subtype) {
	0: spriteset_ef13_bloc_brown;
	1: spriteset_ef13_bloc_cc;
}

switch(FEAT_TRAINS, SELF, switch_ef13_2_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
}


switch (FEAT_TRAINS, SELF, switch_ef13_2_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF13);
  } 
switch (FEAT_TRAINS, SELF, switch_ef13_2_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef13_2_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, ef13_2, 1053) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF13_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1957,1,1);
  speed: 75 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.26;
  power: 1600 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 99;
  reliability_decay: 15;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 38;
  length: 7;
  running_cost_factor: 57;
  running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	variant_group: 1033;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef13_2_subtype_text;
  default: switch_ef13_2_livery;
  purchase: spriteset_ef13_bloc_jnr_purchase;
  name: switch_ef13_2_name;
  }
}
spriteset(spriteset_ef15_jnr_a, "gfx/electric/ef15.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef15_jnr_b, "gfx/electric/ef15.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef15_jnr_c, "gfx/electric/ef15.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef15_cc_a, "gfx/electric/ef15.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef15_cc_b, "gfx/electric/ef15.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef15_cc_c, "gfx/electric/ef15.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef15_jrf_a, "gfx/electric/ef15.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_ef15_rainbow, "gfx/electric/ef15.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_ef15_jrf_b, "gfx/electric/ef15.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_ef15_nyc, "gfx/electric/ef15.png") {
	template_2cc_std(180, 96)
}


spriteset(spriteset_ef15_jgr_purchase, "gfx/electric/ef15.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_ef15_jnr_purchase, "gfx/electric/ef15.png") {
	template_purchase(1, 224)
}


random_switch (FEAT_TRAINS, SELF, random_ef15_jnr) {
	1: spriteset_ef15_jnr_a;
	1: spriteset_ef15_jnr_b;
	1: spriteset_ef15_jnr_c;
}

random_switch (FEAT_TRAINS, SELF, random_ef15_cc) {
	1: spriteset_ef15_cc_a;
	1: spriteset_ef15_cc_b;
	1: spriteset_ef15_cc_c;
}




switch(FEAT_TRAINS, SELF, switch_ef15_yeardep_purchase, current_year) {
	0..1949: spriteset_ef15_jgr_purchase;
	spriteset_ef15_jnr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef15_livery, cargo_subtype) {
	0: random_ef15_jnr;
  1: spriteset_ef15_jnr_a;
  2: spriteset_ef15_jnr_b;
  3: spriteset_ef15_jnr_c;
  4: spriteset_ef15_jrf_a;
  5: spriteset_ef15_jrf_b;
  6: spriteset_ef15_rainbow;
  7: spriteset_ef15_nyc;
	8: random_ef15_cc;
}

switch(FEAT_TRAINS, SELF, switch_ef15_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_RANDOM)
                                 );
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_2WINDOW)
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_3WINDOW)
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_5WINDOW)
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	6: return string(STR_CONCAT_4, string(STR_SUFFIX_JRE), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_RED),
                                     string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_RAINBOW), string(STR_SUFFIX_FICTION)
                                 );
	7: return string(STR_CONCAT_3, string(STR_SUFFIX_NYC), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	8: return string(STR_CONCAT_2, string(STR_SUFFIX_CC), string(STR_REFIT_RANDOM)
                                 );

	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, ef15, 1054) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF15);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1947,1,1);
  speed: 75 km/h; //not 100
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 102;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 42;
  length: 7;
  running_cost_factor: 56;
  running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef15_subtype_text;
  default: switch_ef15_livery;
  purchase: switch_ef15_yeardep_purchase;
  }
}
spriteset(spriteset_ef50_jgr, "gfx/electric/ef50.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef50_black, "gfx/electric/ef50.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef50_green, "gfx/electric/ef50.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef50_cc, "gfx/electric/ef50.png") {
	template_2cc_std(1, 96)
}


spriteset(spriteset_ef50_black_purchase, "gfx/electric/ef50.png") {
	template_purchase(1, 128)
}

spriteset(spriteset_ef50_jgr_purchase, "gfx/electric/ef50.png") {
	template_purchase(1, 160)
}

switch(FEAT_TRAINS, SELF, switch_ef50_yeardep_livery, build_year) {
	0..1928: spriteset_ef50_black;
	spriteset_ef50_jgr;
}

switch(FEAT_TRAINS, SELF, switch_ef50_yeardep_purchase, current_year) {
	0..1928: spriteset_ef50_black_purchase;
	spriteset_ef50_jgr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef50_livery, cargo_subtype) {
	1: spriteset_ef50_jgr;
	2: spriteset_ef50_black;
	3: spriteset_ef50_green;
	4: spriteset_ef50_cc;
	switch_ef50_yeardep_livery;
}

switch(FEAT_TRAINS, SELF, switch_ef50_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_GREEN)
                                    )
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, ef50, 1014) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF50);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1925,1,1);
  speed: 95 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1230 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 97;
  reliability_decay: 20;
  model_life: 30;
  vehicle_life: 32;
  cost_factor: 45;
  length: 8;
  running_cost_factor: 71;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JGR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef50_subtype_text;
  default: switch_ef50_livery;
  purchase: switch_ef50_yeardep_purchase;
  }
}
spriteset(spriteset_ef53_jgr, "gfx/electric/ef53.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef53_imperial, "gfx/electric/ef53.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef53_jnr, "gfx/electric/ef53.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef59_1, "gfx/electric/ef53.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef53_cc, "gfx/electric/ef53.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef59_1_cc, "gfx/electric/ef53.png") {
	template_2cc_std(1, 160)
}


spriteset(spriteset_ef53_jgr_purchase, "gfx/electric/ef53.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_ef53_jnr_purchase, "gfx/electric/ef53.png") {
	template_purchase(1, 224)
}


spriteset(spriteset_ef59_1_purchase, "gfx/electric/ef53.png") {
	template_purchase(89, 224)
}


switch(FEAT_TRAINS, SELF, switch_ef53_yeardep_livery, build_year) {
	0..1949: spriteset_ef53_jgr;
	spriteset_ef53_jnr;
}

switch(FEAT_TRAINS, SELF, switch_ef53_yeardep_purchase, current_year) {
	0..1949: spriteset_ef53_jgr_purchase;
	spriteset_ef53_jnr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef53_livery, cargo_subtype) {
	1: spriteset_ef53_jgr;
	2: spriteset_ef53_imperial;
	3: spriteset_ef53_jnr;
	4: spriteset_ef53_cc;
	switch_ef53_yeardep_livery;
}

switch(FEAT_TRAINS, SELF, switch_ef53_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_IMPERIAL)
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, ef53, 1016) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF53);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1932,1,1);
  speed: 95 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1350 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 98;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 45;
  length: 8;
  running_cost_factor: 70;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EP),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef53_subtype_text;
  default: switch_ef53_livery;
  purchase: switch_ef53_yeardep_purchase;
  }
}


switch(FEAT_TRAINS, SELF, switch_ef59_1_livery, cargo_subtype) {
	1: spriteset_ef59_1_cc;
	spriteset_ef59_1;
}

switch(FEAT_TRAINS, SELF, switch_ef59_1_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_BANKER)
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch (FEAT_TRAINS, SELF, switch_ef59_1_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF59);
  } 
switch (FEAT_TRAINS, SELF, switch_ef59_1_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef59_1_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef59_1, 1916) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF59_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1963,1,1);
  speed: 95 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1350 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 110;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 45;
  length: 8;
  running_cost_factor: 70;
  running_cost_base: RUNNING_COST_ELECTRIC;
  variant_group: 1016;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_BANK),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef59_1_subtype_text;
  default: switch_ef59_1_livery;
  purchase: spriteset_ef59_1_purchase;
  name: switch_ef59_1_name;
  }
}
spriteset(spriteset_ef55_brown, "gfx/electric/ef55.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef55_brown_flip, "gfx/electric/ef55.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_ef55_cc, "gfx/electric/ef55.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef55_cc_flip, "gfx/electric/ef55.png") {
	template_2cc_flip(1, 96)
}



spriteset(spriteset_ef55_jgr_purchase, "gfx/electric/ef55.png") {
	template_purchase(1, 128)
}

spriteset(spriteset_ef55_jnr_purchase, "gfx/electric/ef55.png") {
	template_purchase(1, 160)
}


switch(FEAT_TRAINS, SELF, switch_ef55_brown_flip, vehicle_is_flipped) {
	0: spriteset_ef55_brown;
	1: spriteset_ef55_brown_flip;
}

switch(FEAT_TRAINS, SELF, switch_ef55_cc_flip, vehicle_is_flipped) {
	0: spriteset_ef55_cc;
	1: spriteset_ef55_cc_flip;
}



switch(FEAT_TRAINS, SELF, switch_ef55_livery, cargo_subtype) {
	0: switch_ef55_brown_flip;
	1: switch_ef55_cc_flip;	
	switch_ef55_brown_flip;
}

switch(FEAT_TRAINS, SELF, switch_ef55_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	1: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_ef55_yeardep_purchase, current_year) {
    0..1949: spriteset_ef55_jgr_purchase;
    spriteset_ef55_jnr_purchase;
    }


item (FEAT_TRAINS, ef55, 1910) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF55);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1936,1,1);
  speed: 95 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1350 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 20;
  model_life: 30;
  vehicle_life: 45;
  cost_factor: 47;
  length: 8;
  running_cost_factor: 70;
  running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EP),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef55_subtype_text;
  default: switch_ef55_livery;
  purchase: switch_ef55_yeardep_purchase;
  }
}
spriteset(spriteset_ef56_jgr, "gfx/electric/ef56.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef56_imperial, "gfx/electric/ef56.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef59_2, "gfx/electric/ef56.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef56_cc, "gfx/electric/ef56.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef59_2_cc, "gfx/electric/ef56.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef56_jgr_purchase, "gfx/electric/ef56.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_ef56_jnr_purchase, "gfx/electric/ef56.png") {
	template_purchase(1, 224)
}

spriteset(spriteset_ef59_2_purchase, "gfx/electric/ef56.png") {
	template_purchase(89, 224)
}

/*
switch(FEAT_TRAINS, SELF, switch_ef56_yeardep_livery, build_year) {
	0..1949: spriteset_ef56_jgr;
	spriteset_ef56_jnr;
}
*/

switch(FEAT_TRAINS, SELF, switch_ef56_yeardep_purchase, current_year) {
	0..1949: spriteset_ef56_jgr_purchase;
	spriteset_ef56_jnr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef56_livery, cargo_subtype) {
	1: spriteset_ef56_jgr;
	2: spriteset_ef56_imperial;
	3: spriteset_ef56_cc;
	spriteset_ef56_jgr;
}

switch(FEAT_TRAINS, SELF, switch_ef56_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_IMPERIAL)
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, ef56, 1019) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF56);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1937,1,1);
  speed: 95 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1350 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 110;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 42;
  length: 8;
  running_cost_factor: 69;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EP),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef56_subtype_text;
  default: switch_ef56_livery;
  purchase: switch_ef56_yeardep_purchase;
  }
}

switch(FEAT_TRAINS, SELF, switch_ef59_2_livery, cargo_subtype) {
	1: spriteset_ef59_2_cc;
	spriteset_ef59_2;
}

switch(FEAT_TRAINS, SELF, switch_ef59_2_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_BANKER)
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef59_2_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF59);
  } 
switch (FEAT_TRAINS, SELF, switch_ef59_2_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef59_2_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef59_2, 1919) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF59_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1969,1,1);
  speed: 95 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1350 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 106;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 42;
  length: 8;
  running_cost_factor: 69;
  running_cost_base: RUNNING_COST_ELECTRIC;
  variant_group: 1019;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_BANK),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef59_2_subtype_text;
  default: switch_ef59_2_livery;
  purchase: spriteset_ef59_2_purchase;
  name: switch_ef59_2_name;
  }
}
spriteset(spriteset_ef57_1_jgr, "gfx/electric/ef57.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef57_2_jgr, "gfx/electric/ef57.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef57_2_largelogo, "gfx/electric/ef57.png") {
	template_2cc_std(1, 64)
}



spriteset(spriteset_ef57_1_cc, "gfx/electric/ef57.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef57_2_cc, "gfx/electric/ef57.png") {
	template_2cc_std(1, 128)
}




spriteset(spriteset_ef57_1_gnr, "gfx/electric/ef57.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef57_1_camo, "gfx/electric/ef57.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ef57_1_tokkyu, "gfx/electric/ef57.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_ef57_1_tokaido, "gfx/electric/ef57.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_ef57_1_rainbow, "gfx/electric/ef57.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_ef57_1_nyc, "gfx/electric/ef57.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_ef57_1_milw, "gfx/electric/ef57.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_ef57_1_prr, "gfx/electric/ef57.png") {
	template_2cc_std(180, 160)
}



spriteset(spriteset_ef57_1_jgr_purchase, "gfx/electric/ef57.png") {
	template_purchase(1, 224)
}

spriteset(spriteset_ef57_1_jnr_purchase, "gfx/electric/ef57.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_ef57_2_jgr_purchase, "gfx/electric/ef57.png") {
	template_purchase(89, 224)
}

spriteset(spriteset_ef57_2_largelogo_purchase, "gfx/electric/ef57.png") {
	template_purchase(89, 256)
}

/*
switch(FEAT_TRAINS, SELF, switch_ef57_yeardep_livery, build_year) {
	0..1937: spriteset_ef57_old;
	spriteset_ef57_new;
}
*/

switch(FEAT_TRAINS, SELF, switch_ef57_1_yeardep_purchase, current_year) {
	0..1949: spriteset_ef57_1_jgr_purchase;
	spriteset_ef57_1_jnr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef57_1_livery, cargo_subtype) {
	1: spriteset_ef57_1_camo;
  2: spriteset_ef57_1_tokkyu;
  3: spriteset_ef57_1_tokaido;
  4: spriteset_ef57_1_rainbow;
  5: spriteset_ef57_1_gnr;
  6: spriteset_ef57_1_nyc;
  7: spriteset_ef57_1_milw;
  8: spriteset_ef57_1_prr;
  9: spriteset_ef57_1_cc;
	spriteset_ef57_1_jgr;
}

switch(FEAT_TRAINS, SELF, switch_ef57_1_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
  1: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_GREEN),
                                     string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_CAMO)
                                 );
  2: return string(STR_CONCAT_4, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
                                     string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_TOKKYU), string(STR_SUFFIX_FICTION)
                                 );
  3: return string(STR_CONCAT_4, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_LTGREEN),
                                     string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_TOKAIDO), string(STR_SUFFIX_FICTION)
                                 );
  4: return string(STR_CONCAT_4, string(STR_SUFFIX_JRE), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_RED),
                                     string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_RAINBOW), string(STR_SUFFIX_FICTION)
                                 );
  5: return string(STR_CONCAT_3, string(STR_SUFFIX_GNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_GREEN)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
  6: return string(STR_CONCAT_3, string(STR_SUFFIX_NYC), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
                                     string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
  7: return string(STR_CONCAT_3, string(STR_SUFFIX_MILW), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLACK),
                                     string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
  8: return string(STR_CONCAT_3, string(STR_SUFFIX_PRR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	9: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, ef57, 1020) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF57);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1940,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1600 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 110;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 46;
  length: 8;
  running_cost_factor: 73;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EP),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef57_1_subtype_text;
  default: switch_ef57_1_livery;
  purchase: switch_ef57_1_yeardep_purchase;
  }
}


switch(FEAT_TRAINS, SELF, switch_ef57_2_yeardep_purchase, current_year) {
	0..1949: spriteset_ef57_2_jgr_purchase;
	spriteset_ef57_2_largelogo_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef57_2_livery, cargo_subtype) {
	1: spriteset_ef57_2_largelogo;
  2: spriteset_ef57_2_cc;
	spriteset_ef57_2_jgr;
}

switch(FEAT_TRAINS, SELF, switch_ef57_2_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), string(STR_COLOUR_BROWN));
  1: return string(STR_CONCAT_4, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_LARGELOGO), string(STR_SUFFIX_FICTION)
                                 );
	2: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef57_2_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF57);
  } 
switch (FEAT_TRAINS, SELF, switch_ef57_2_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef57_2_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef57_2, 1920) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF57_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1938,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1600 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 110;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 46;
  length: 8;
  running_cost_factor: 73;
  running_cost_base: RUNNING_COST_ELECTRIC;
  variant_group: 1020;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EP),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef57_2_subtype_text;
  default: switch_ef57_2_livery;
  purchase: switch_ef57_2_yeardep_purchase;
  name: switch_ef57_2_name;
  }
}
spriteset(spriteset_ef58_brown, "gfx/electric/ef58.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef58_imperial, "gfx/electric/ef58.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef58_blue, "gfx/electric/ef58.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef58_express_blue, "gfx/electric/ef58.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef58_tokaido_green, "gfx/electric/ef58.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef58_experiment_orange, "gfx/electric/ef58.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef58_experiment_green, "gfx/electric/ef58.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ef58_experiment_yellow, "gfx/electric/ef58.png") {
	template_2cc_std(1, 224)
}

//fake liveries

spriteset(spriteset_ef58_twilight, "gfx/electric/ef58.png") {
	template_2cc_std(180, 96)
}


spriteset(spriteset_ef58_large_logo, "gfx/electric/ef58.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_ef58_jrf, "gfx/electric/ef58.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_ef58_hokutosei, "gfx/electric/ef58.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_ef58_cc, "gfx/electric/ef58.png") {
	template_2cc_std(180, 224)
}

//old type
spriteset(spriteset_ef58_old_brown, "gfx/electric/ef58.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_ef58_old_cc, "gfx/electric/ef58.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_ef18_brown, "gfx/electric/ef58.png") {
	template_2cc_std(180, 64)
}


//purchase


spriteset(spriteset_ef58_old_jgr_purchase, "gfx/electric/ef58.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_ef58_old_jnr_purchase, "gfx/electric/ef58.png") {
	template_purchase(89, 256)
}

spriteset(spriteset_ef18_jgr_purchase, "gfx/electric/ef58.png") {
	template_purchase(180, 256)
}

spriteset(spriteset_ef18_jnr_purchase, "gfx/electric/ef58.png") {
	template_purchase(268, 256)
}

spriteset(spriteset_ef58_jnr_brown_purchase, "gfx/electric/ef58.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_ef58_jnr_blue_purchase, "gfx/electric/ef58.png") {
	template_purchase(89, 288)
}

spriteset(spriteset_ef58_jrf_purchase, "gfx/electric/ef58.png") {
	template_purchase(1, 320)
}

//purchase switches

switch(FEAT_TRAINS, SELF, switch_ef58_old_yeardep_purchase, current_year) {
	0..1949: spriteset_ef58_old_jgr_purchase;
	
	spriteset_ef58_old_jnr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef18_yeardep_purchase, current_year) {
	0..1949: spriteset_ef18_jgr_purchase;
	
	spriteset_ef18_jnr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef58_yeardep_purchase, current_year) {
	0..1965: spriteset_ef58_jnr_brown_purchase;
  //  1988..2000: 	spriteset_ef58_jrf_purchase;
	//add jr?
	spriteset_ef58_jnr_blue_purchase;
}


switch(FEAT_TRAINS, SELF, switch_ef58_yeardep_livery, build_year) {
	0..1965: spriteset_ef58_brown;
	spriteset_ef58_blue;
}


switch(FEAT_TRAINS, SELF, switch_ef58_livery, cargo_subtype) {
	1: spriteset_ef58_brown;
	2: spriteset_ef58_imperial;
	3: spriteset_ef58_blue;
	4: spriteset_ef58_express_blue;
	5: spriteset_ef58_tokaido_green;
	6: spriteset_ef58_experiment_orange;
	7: spriteset_ef58_experiment_green;	
	8: spriteset_ef58_experiment_yellow;
	9: spriteset_ef58_large_logo;
	10: spriteset_ef58_jrf;
	11: spriteset_ef58_twilight;
	12: spriteset_ef58_hokutosei;
	13: spriteset_ef58_cc;	
	switch_ef58_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_ef58_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_SILVER)
                                    ), string(STR_SUFFIX_IMPERIAL)
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_TOKKYU)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTGREEN), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_TOKAIDO)
                                 );
	6: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_EXPERIMENT)
                                 );
	7: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_GREEN), 
                                    string(STR_COLOUR_LTGREEN)
                                    ), string(STR_SUFFIX_EXPERIMENT)
                                 );
	8: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_EXPERIMENT)
                                 );
	9: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_LARGELOGO), string(STR_SUFFIX_FICTION)
                                 );
	10: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	11: return string(STR_CONCAT_4, string(STR_SUFFIX_JRW), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_GREEN), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_TWILIGHT), string(STR_SUFFIX_FICTION)
                                 );
	12: return string(STR_CONCAT_4, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_HOKUTOSEI), string(STR_SUFFIX_FICTION)
                                 );
	13: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}

switch (FEAT_TRAINS, SELF, switch_ef58_1_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF58);
  } 
switch (FEAT_TRAINS, SELF, switch_ef58_1_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef58_1_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef58, 1914) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF58_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1952,1,1);
  speed: 110 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 115;
  reliability_decay: 15;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 68;
  length: 8;
  running_cost_factor: 80;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_FF),
                        string(STR_CONCAT_5C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRF),
                           string(STR_SUFFIX_JRE),
                           string(STR_SUFFIX_JRC),
                           string(STR_SUFFIX_JRW)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef58_subtype_text;
  default: switch_ef58_livery;
  purchase: switch_ef58_yeardep_purchase;
  name: switch_ef58_1_name;
  }
}

//ef58 old type

switch(FEAT_TRAINS, SELF, switch_ef58_old_livery, cargo_subtype) {
	1: spriteset_ef58_old_cc;
	spriteset_ef58_old_brown;
}


switch(FEAT_TRAINS, SELF, switch_ef58_old_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	1: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}

switch (FEAT_TRAINS, SELF, switch_ef58_2_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF58);
  } 
switch (FEAT_TRAINS, SELF, switch_ef58_2_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef58_2_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef58_2, 1021) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF58_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1946,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 113;
  reliability_decay: 15;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 66;
  length: 8;
  running_cost_factor: 72;
  running_cost_base: RUNNING_COST_ELECTRIC;
  variant_group: 1914;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EP),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JGR),
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef58_old_subtype_text;
  default: switch_ef58_old_livery;
  purchase: switch_ef58_old_yeardep_purchase;
  name: switch_ef58_2_name;
  }
}

//ef18

switch(FEAT_TRAINS, SELF, switch_ef18_livery, cargo_subtype) {
	1: spriteset_ef58_old_cc;
	spriteset_ef18_brown;
}


switch(FEAT_TRAINS, SELF, switch_ef18_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	1: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}

item (FEAT_TRAINS, ef18, 1921) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF18);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1951,1,1);
  speed: 75 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 113;
  reliability_decay: 15;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 44;
  length: 8;
  running_cost_factor: 56;
  running_cost_base: RUNNING_COST_ELECTRIC;
  variant_group: 1914;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef18_subtype_text;
  default: switch_ef18_livery;
  purchase: switch_ef18_yeardep_purchase;
  }
}
//ef60 old type

spriteset(spriteset_ef60_1_blue, "gfx/electric/ef60.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef60_1_tokkyu, "gfx/electric/ef60.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef60_1_brown, "gfx/electric/ef60.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef60_1_cc, "gfx/electric/ef60.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef60_american, "gfx/electric/ef60.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef60_yasuragi, "gfx/electric/ef60.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef60_1_brown_purchase, "gfx/electric/ef60.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_ef60_1_blue_purchase, "gfx/electric/ef60.png") {
	template_purchase(1, 320)
}

//prototype

spriteset(spriteset_ef60_0_cc, "gfx/electric/ef60.png") {
	template_2cc_std(1, 192)
}

//ef60 new type

spriteset(spriteset_ef60_2_blue, "gfx/electric/ef60.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_ef60_2_tokkyu, "gfx/electric/ef60.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_ef60_2_brown, "gfx/electric/ef60.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_ef60_2_cc, "gfx/electric/ef60.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_ef60_2_brown_purchase, "gfx/electric/ef60.png") {
	template_purchase(180, 288)
}

spriteset(spriteset_ef60_2_blue_purchase, "gfx/electric/ef60.png") {
	template_purchase(180, 320)
}


//ef67 banker

spriteset(spriteset_ef67_1_banker, "gfx/electric/ef60.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_ef67_1_cc, "gfx/electric/ef60.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_ef67_1_jnr_purchase, "gfx/electric/ef60.png") {
	template_purchase(89, 288)
}

spriteset(spriteset_ef67_1_jrf_purchase, "gfx/electric/ef60.png") {
	template_purchase(89, 320)
}


//ef60 standard

switch(FEAT_TRAINS, SELF, switch_ef60_1_yeardep_purchase, current_year) {
	0..1965: spriteset_ef60_1_brown_purchase;
	spriteset_ef60_1_blue_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef60_1_yeardep_livery, build_year) {
	0..1965: spriteset_ef60_1_brown;
	spriteset_ef60_1_blue;
	//maybe add switch to make tokkyu livery if pax are attached (also ef65)
}

switch(FEAT_TRAINS, SELF, switch_ef60_1_livery, cargo_subtype) {
	1: spriteset_ef60_1_brown;
	2: spriteset_ef60_1_blue;
	3: spriteset_ef60_1_tokkyu; 
	4: spriteset_ef60_american;
	5: spriteset_ef60_yasuragi;
	6: spriteset_ef60_1_cc;
	switch_ef60_1_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_ef60_1_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_TOKKYU)
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_AMERICANTRAIN)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_WHITE), 
                                    string(STR_COLOUR_RED),
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_YASURAGI)
                                 );
	6: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch (FEAT_TRAINS, SELF, switch_ef60_1_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF60);
  } 
switch (FEAT_TRAINS, SELF, switch_ef60_1_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef60_1_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef60_1, 1030) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF60_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1962,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 82;
  length: 7;
  running_cost_factor: 78;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1930;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EF),
                        string(STR_CONCAT_3C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRE),
                           string(STR_SUFFIX_JRW)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef60_1_subtype_text;
  default: switch_ef60_1_livery;
  purchase: switch_ef60_1_yeardep_purchase;
  name: switch_ef60_1_name;
  }
}

//ef60 new


switch(FEAT_TRAINS, SELF, switch_ef60_2_yeardep_purchase, current_year) {
	0..1965: spriteset_ef60_2_brown_purchase;
	spriteset_ef60_2_blue_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef60_2_yeardep_livery, build_year) {
	0..1965: spriteset_ef60_2_brown;
	spriteset_ef60_2_blue;
	//maybe add switch to make tokkyu livery if pax are attached (also ef65)
}

switch(FEAT_TRAINS, SELF, switch_ef60_2_livery, cargo_subtype) {
	1: spriteset_ef60_2_brown;
	2: spriteset_ef60_2_blue;
	3: spriteset_ef60_2_tokkyu; 
	4: spriteset_ef60_2_cc;
	switch_ef60_2_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_ef60_2_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_TOKKYU)
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef60_2_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF60);
  } 
switch (FEAT_TRAINS, SELF, switch_ef60_2_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef60_2_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef60_2, 1031) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF60_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1965,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 82;
  length: 7;
  running_cost_factor: 78;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1930;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef60_2_subtype_text;
  default: switch_ef60_2_livery;
  purchase: switch_ef60_2_yeardep_purchase;
  name: switch_ef60_2_name;
  }
}

//ef60 proto


switch(FEAT_TRAINS, SELF, switch_ef60_0_livery, cargo_subtype) {
	1: spriteset_ef60_1_brown;
	2: spriteset_ef60_1_blue;
	3: spriteset_ef60_0_cc;
	switch_ef60_1_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_ef60_0_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch (FEAT_TRAINS, SELF, switch_ef60_0_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF60);
  } 
switch (FEAT_TRAINS, SELF, switch_ef60_0_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef60_0_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef60_0, 1930) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF60_0);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1960,1,1);
  speed: 90 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.24;
  power: 2340 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 78;
  length: 7;
  running_cost_factor: 71;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
//  variant_group: 1930;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef60_0_subtype_text;
  default: switch_ef60_0_livery;
  purchase: switch_ef60_1_yeardep_purchase;
  name: switch_ef60_0_name;
  }
}



//ef67 1


switch(FEAT_TRAINS, SELF, switch_ef67_1_yeardep_purchase, current_year) {
	0..1987: spriteset_ef67_1_jnr_purchase;
	spriteset_ef67_1_jrf_purchase;
}


switch(FEAT_TRAINS, SELF, switch_ef67_1_livery, cargo_subtype) {
	1: spriteset_ef67_1_cc;
	spriteset_ef67_1_banker;
}


switch(FEAT_TRAINS, SELF, switch_ef67_1_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_BANKER)
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch (FEAT_TRAINS, SELF, switch_ef67_1_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF67);
  } 
switch (FEAT_TRAINS, SELF, switch_ef67_1_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef67_1_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef67_1, 1931) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF67_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1982,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 82;
  length: 7;
  running_cost_factor: 78;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1930;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_BANK),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRF)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef67_1_subtype_text;
  default: switch_ef67_1_livery;
  purchase: switch_ef67_1_yeardep_purchase;
  name: switch_ef67_1_name;
  }
}
spriteset(spriteset_ef62_proto_brown, "gfx/electric/ef62.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef62_brown, "gfx/electric/ef62.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef62_proto_blue, "gfx/electric/ef62.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef62_blue, "gfx/electric/ef62.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef62_proto_cc, "gfx/electric/ef62.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef62_cc, "gfx/electric/ef62.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef62_proto_brown_purchase, "gfx/electric/ef62.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_ef62_proto_blue_purchase, "gfx/electric/ef62.png") {
	template_purchase(89, 192)
}

spriteset(spriteset_ef62_brown_purchase, "gfx/electric/ef62.png") {
	template_purchase(1, 224)
}

spriteset(spriteset_ef62_blue_purchase, "gfx/electric/ef62.png") {
	template_purchase(89, 224)
}

spriteset(spriteset_ef62_blue_jr_purchase, "gfx/electric/ef62.png") {
	template_purchase(89, 256)
}



switch(FEAT_TRAINS, SELF, switch_ef62_yeardep_livery, build_year) {
	0..1965: spriteset_ef62_brown;
	spriteset_ef62_blue;
}


switch(FEAT_TRAINS, SELF, switch_ef62_livery, cargo_subtype) {
	1: spriteset_ef62_brown;
	2: spriteset_ef62_blue;
    3: spriteset_ef62_cc;
	switch_ef62_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_ef62_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
  3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_ef62_purchase_yeardep, current_year) {
    0..1965: spriteset_ef62_brown_purchase;
    spriteset_ef62_blue_purchase;
    }


item (FEAT_TRAINS, ef62, 1039) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF62);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1963,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.24;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 81;
  length: 8;
  running_cost_factor: 76;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_FF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRW)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef62_subtype_text;
  default: switch_ef62_livery;
  purchase: switch_ef62_purchase_yeardep;

  }
}


switch(FEAT_TRAINS, SELF, switch_ef62_proto_yeardep_livery, build_year) {
	0..1965: spriteset_ef62_proto_brown;
	spriteset_ef62_proto_blue;
}


switch(FEAT_TRAINS, SELF, switch_ef62_proto_livery, cargo_subtype) {
	1: spriteset_ef62_proto_brown;
	2: spriteset_ef62_proto_blue;
    3: spriteset_ef62_proto_cc;
	switch_ef62_proto_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_ef62_proto_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
  3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_ef62_proto_purchase_yeardep, current_year) {
    0..1965: spriteset_ef62_proto_brown_purchase;
    spriteset_ef62_proto_blue_purchase;
    }

switch (FEAT_TRAINS, SELF, switch_ef62_proto_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF62);
  } 
switch (FEAT_TRAINS, SELF, switch_ef62_proto_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef62_proto_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef62_proto, 1939) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF62_0);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1962,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.24;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 92;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 81;
  length: 8;
  running_cost_factor: 76;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1039;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PROTO),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef62_proto_subtype_text;
  default: switch_ef62_proto_livery;
  purchase: switch_ef62_proto_purchase_yeardep;
  name: switch_ef62_proto_name;
  }
}
spriteset(spriteset_ef63_brown, "gfx/electric/ef63.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef63_blue, "gfx/electric/ef63.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef63_cc, "gfx/electric/ef63.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef63_brown_purchase, "gfx/electric/ef63.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_ef63_blue_purchase, "gfx/electric/ef63.png") {
	template_purchase(89, 192)
}



switch(FEAT_TRAINS, SELF, switch_ef63_yeardep_livery, build_year) {
	0..1965: spriteset_ef63_brown;
	spriteset_ef63_blue;
}


switch(FEAT_TRAINS, SELF, switch_ef63_livery, cargo_subtype) {
	1: spriteset_ef63_brown;
	2: spriteset_ef63_blue;
    3: spriteset_ef63_cc;
	switch_ef63_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_ef63_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
    3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_ef63_purchase_yeardep, current_year) {
    0..1964: spriteset_ef63_brown_purchase;
    spriteset_ef63_blue_purchase;
    }


item (FEAT_TRAINS, ef63, 1040) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF63);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1962,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.24;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 108;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 82;
  length: 8;
  running_cost_factor: 77;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_BANK),
                        string(STR_CONCAT_3C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRF),
                           string(STR_SUFFIX_JRW)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef63_subtype_text;
  default: switch_ef63_livery;
  purchase: switch_ef63_purchase_yeardep;
  }
}
spriteset(spriteset_ef64_0_brown, "gfx/electric/ef64.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef64_0_cc, "gfx/electric/ef64.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef64_0_blue, "gfx/electric/ef64.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef64_0_jrf, "gfx/electric/ef64.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef64_0_euroliner, "gfx/electric/ef64.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef64_0_stripe, "gfx/electric/ef64.png") {
	template_2cc_std(1, 160)
}

//EF64_1000

spriteset(spriteset_ef64_1000_brown, "gfx/electric/ef64.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_ef64_1000_blue, "gfx/electric/ef64.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_ef64_1000_stripe, "gfx/electric/ef64.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_ef64_1000_diag_logo, "gfx/electric/ef64.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_ef64_1000_diag_logo_flip, "gfx/electric/ef64.png") {
	template_2cc_flip(180, 128)
}


spriteset(spriteset_ef64_1000_diag, "gfx/electric/ef64.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_ef64_1000_diag_flip, "gfx/electric/ef64.png") {
	template_2cc_flip(180, 192)
}

spriteset(spriteset_ef64_1000_large_logo, "gfx/electric/ef64.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_ef64_1000_cc, "gfx/electric/ef64.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ef64_1000_cc_flip, "gfx/electric/ef64.png") {
	template_2cc_flip(1, 224)
}

//purchase

spriteset(spriteset_ef64_0_brown_purchase, "gfx/electric/ef64.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_ef64_0_blue_purchase, "gfx/electric/ef64.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_ef64_0_jrf_purchase, "gfx/electric/ef64.png") {
	template_purchase(89, 288)
}


spriteset(spriteset_ef64_1000_blue_purchase, "gfx/electric/ef64.png") {
	template_purchase(180, 256)
}

spriteset(spriteset_ef64_1000_jrf_purchase, "gfx/electric/ef64.png") {
	template_purchase(180, 288)
}

switch(FEAT_TRAINS, SELF, switch_ef64_0_yeardep_purchase, current_year) {
	0..1965: spriteset_ef64_0_brown_purchase;
	1965..1987: spriteset_ef64_0_blue_purchase;
	spriteset_ef64_0_jrf_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef64_0_yeardep_livery, build_year) {
	0..1996: spriteset_ef64_0_blue;
	spriteset_ef64_0_jrf;
}



switch(FEAT_TRAINS, SELF, switch_ef64_0_livery, cargo_subtype) {
	0: switch_ef64_0_yeardep_livery;
	1: spriteset_ef64_0_brown;
	2: spriteset_ef64_0_blue;
	3: spriteset_ef64_0_jrf;
	4: spriteset_ef64_0_stripe;
	5: spriteset_ef64_0_euroliner;
	6: spriteset_ef64_0_cc;
}



switch(FEAT_TRAINS, SELF, switch_ef64_0_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_STRIPE)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JRC),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_WHITE), 
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_EUROLINER)
                                 );
	6: return string(STR_REFIT_CC);
	return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef64_0_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF64);
  } 
switch (FEAT_TRAINS, SELF, switch_ef64_0_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef64_0_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, ef64, 1022) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF64_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1964,1,1);
  speed: 110 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 15;
  model_life: 55;
  vehicle_life: 45;
  cost_factor: 85;
  length: 8;
  running_cost_factor: 80;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EF),
                        string(STR_CONCAT_5C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRF),
                           string(STR_SUFFIX_JRE),
                           string(STR_SUFFIX_JRC),
                           string(STR_SUFFIX_JRW)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef64_0_subtype_text;
  default: switch_ef64_0_livery;
  purchase: switch_ef64_0_yeardep_purchase;
  name: switch_ef64_0_name;
  }
}

//ef64 1000




switch(FEAT_TRAINS, SELF, switch_ef64_1000_yeardep_purchase, current_year) {
	0..1987: spriteset_ef64_1000_blue_purchase;
	spriteset_ef64_1000_jrf_purchase;
}

switch (FEAT_TRAINS, SELF, flip_ef64_1000_diag, vehicle_is_flipped) {
 0: spriteset_ef64_1000_diag;
 1: spriteset_ef64_1000_diag_flip;
}

switch (FEAT_TRAINS, SELF, flip_ef64_1000_diag_logo, vehicle_is_flipped) {
 0: spriteset_ef64_1000_diag_logo;
 1: spriteset_ef64_1000_diag_logo_flip;
}

switch (FEAT_TRAINS, SELF, flip_ef64_1000_cc, vehicle_is_flipped) {
 0: spriteset_ef64_1000_cc;
 1: spriteset_ef64_1000_cc_flip;
}

switch(FEAT_TRAINS, SELF, switch_ef64_1000_yeardep_livery, build_year) {
	0..2004: spriteset_ef64_1000_blue;
	2004..2007: spriteset_ef64_1000_stripe;
	flip_ef64_1000_diag_logo;
}

switch(FEAT_TRAINS, SELF, switch_ef64_1000_livery, cargo_subtype) {
	0: switch_ef64_1000_yeardep_livery;
	1: spriteset_ef64_1000_brown;
	2: spriteset_ef64_1000_blue;
	3: spriteset_ef64_1000_stripe;
	4: spriteset_ef64_1000_large_logo;
	5: flip_ef64_1000_diag_logo;
	6: flip_ef64_1000_diag;
	7: flip_ef64_1000_cc;
}

switch(FEAT_TRAINS, SELF, switch_ef64_1000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE),
                                    ), string(STR_SUFFIX_STRIPE)
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_LARGELOGO)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_LOGO)
                                 );
	6: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_NOLOGO)
                                 );
	7: return string(STR_REFIT_CC);
	return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef64_1000_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF64);
  } 
switch (FEAT_TRAINS, SELF, switch_ef64_1000_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef64_1000_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, ef64_1000, 1922) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF64_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1980,1,1);
  speed: 110 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 15;
  model_life: 55;
  vehicle_life: 45;
  cost_factor: 85;
  length: 8;
  running_cost_factor: 80;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
  variant_group: 1022;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EF),
                        string(STR_CONCAT_5C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRF),
                           string(STR_SUFFIX_JRE),
                           string(STR_SUFFIX_JRC),
                           string(STR_SUFFIX_JRW)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef64_1000_subtype_text;
  default: switch_ef64_1000_livery;
  purchase: switch_ef64_1000_yeardep_purchase;
  name: switch_ef64_1000_name;
  }
}
//ef65 0

spriteset(spriteset_ef65_0_blue, "gfx/electric/ef65.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef65_0_jrf, "gfx/electric/ef65.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef65_0_brown, "gfx/electric/ef65.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef65_0_yuyu_red, "gfx/electric/ef65.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef65_0_yuyu_orange, "gfx/electric/ef65.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef65_0_euroliner, "gfx/electric/ef65.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef65_0_largelogo, "gfx/electric/ef65.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ef65_0_cc, "gfx/electric/ef65.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_ef65_0_jnr_purchase, "gfx/electric/ef65.png") {
	template_purchase(1, 384)
}

spriteset(spriteset_ef65_0_jrf_purchase, "gfx/electric/ef65.png") {
	template_purchase(1, 416)
}

//ef65 500
spriteset(spriteset_ef65_500_tokkyu, "gfx/electric/ef65.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_ef65_500_tokaido, "gfx/electric/ef65.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_ef65_500_jrf, "gfx/electric/ef65.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_ef65_500_cc, "gfx/electric/ef65.png") {
	template_2cc_std(1, 352)
}

spriteset(spriteset_ef65_500_jnr_purchase, "gfx/electric/ef65.png") {
	template_purchase(89, 384)
}

spriteset(spriteset_ef65_500_jrf_purchase, "gfx/electric/ef65.png") {
	template_purchase(89, 416)
}

//ef65 1000
spriteset(spriteset_ef65_1000_tokkyu, "gfx/electric/ef65.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_ef65_2000_tokkyu, "gfx/electric/ef65.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_ef65_1000_jrf, "gfx/electric/ef65.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_ef65_2000_jrf, "gfx/electric/ef65.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_ef65_1000_largelogo, "gfx/electric/ef65.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_ef65_1000_experimental, "gfx/electric/ef65.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_ef65_1000_rainbow, "gfx/electric/ef65.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_ef65_1000_twilight, "gfx/electric/ef65.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_ef65_1000_cc, "gfx/electric/ef65.png") {
	template_2cc_std(180, 256)
}

spriteset(spriteset_ef65_1000_jnr_purchase, "gfx/electric/ef65.png") {
	template_purchase(180, 384)
}

spriteset(spriteset_ef65_1000_jrf_purchase, "gfx/electric/ef65.png") {
	template_purchase(180, 416)
}

//ef67

spriteset(spriteset_ef67_100_refurbished, "gfx/electric/ef65.png") {
	template_2cc_std(180, 288)
}

spriteset(spriteset_ef67_100, "gfx/electric/ef65.png") {
	template_2cc_std(180, 320)
}

spriteset(spriteset_ef67_100_cc, "gfx/electric/ef65.png") {
	template_2cc_std(180, 352)
}

spriteset(spriteset_ef67_100_purchase, "gfx/electric/ef65.png") {
	template_purchase(268, 384)
}

spriteset(spriteset_ef67_100_refurbished_purchase, "gfx/electric/ef65.png") {
	template_purchase(268, 416)
}


//ef65 0

switch(FEAT_TRAINS, SELF, switch_ef65_0_yeardep_purchase, current_year) {
	0..1987: spriteset_ef65_0_jnr_purchase;
    spriteset_ef65_0_jrf_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef65_0_yeardep_livery, build_year) {
	0..1989: spriteset_ef65_0_blue;
	spriteset_ef65_0_jrf;
}

switch(FEAT_TRAINS, SELF, switch_ef65_0_livery, cargo_subtype) {
	1: spriteset_ef65_0_brown;
	2: spriteset_ef65_0_blue;
	3: spriteset_ef65_0_jrf;
	4: spriteset_ef65_0_yuyu_red;
	5: spriteset_ef65_0_yuyu_orange;
	6: spriteset_ef65_0_euroliner;
	7: spriteset_ef65_0_largelogo;
	8: spriteset_ef65_0_cc;
	switch_ef65_0_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ef65_0_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRW),
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_YUYU)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JRW),
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_ORANGE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_YUYU)
                                 );
	6: return string(STR_CONCAT_3, string(STR_SUFFIX_JRC),
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_WHITE), 
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_EUROLINER)
                                 );
	7: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_LARGELOGO)
                                 );
	8: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef65_0_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF65);
  } 
switch (FEAT_TRAINS, SELF, switch_ef65_0_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef65_0_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef65_0, 1024) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF65_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1965,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 3;
  model_life: 55;
  vehicle_life: 45;
  cost_factor: 84;
  length: 7;
  running_cost_factor: 81;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRF)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef65_0_subtype_text;
  default: switch_ef65_0_livery;
  purchase: switch_ef65_0_yeardep_purchase;
  name: switch_ef65_0_name;
  }
}

//ef65 500

switch(FEAT_TRAINS, SELF, switch_ef65_500_yeardep_purchase, current_year) {
	0..1987: spriteset_ef65_500_jnr_purchase;
    spriteset_ef65_500_jrf_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef65_500_yeardep_livery, build_year) {
	0..1998: spriteset_ef65_500_tokkyu;
	spriteset_ef65_500_jrf;
}

switch(FEAT_TRAINS, SELF, switch_ef65_500_livery, cargo_subtype) {
	1: spriteset_ef65_500_tokkyu;
	2: spriteset_ef65_500_tokaido;
	3: spriteset_ef65_500_jrf;
	4: spriteset_ef65_500_cc;
	switch_ef65_500_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ef65_500_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_TOKKYU)
                                 );
	2: return string(STR_CONCAT_4, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_GREEN), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_TOKAIDO), string(STR_SUFFIX_FICTION)
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}



switch (FEAT_TRAINS, SELF, switch_ef65_500_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF65);
  } 
switch (FEAT_TRAINS, SELF, switch_ef65_500_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef65_500_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef65_500, 1042) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF65_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1965,1,1);
  speed: 115 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 3;
  model_life: 55;
  vehicle_life: 45;
  cost_factor: 88;
  length: 7;
  running_cost_factor: 85;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1024;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EF),
                        string(STR_CONCAT_3C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRF),
                           string(STR_SUFFIX_JRE)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef65_500_subtype_text;
  default: switch_ef65_500_livery;
  purchase: switch_ef65_500_yeardep_purchase;
  name: switch_ef65_500_name;
  }
}

//ef65 1000

switch(FEAT_TRAINS, SELF, switch_ef65_1000_yeardep_purchase, current_year) {
	0..1987: spriteset_ef65_1000_jnr_purchase;
    spriteset_ef65_1000_jrf_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef65_1000_yeardep_livery, build_year) {
	0..1993: spriteset_ef65_1000_tokkyu;
	1993..2016: spriteset_ef65_1000_jrf;
	spriteset_ef65_2000_tokkyu;
}

switch(FEAT_TRAINS, SELF, switch_ef65_1000_livery, cargo_subtype) {
	1: spriteset_ef65_1000_tokkyu;
	2: spriteset_ef65_2000_tokkyu;
	3: spriteset_ef65_1000_jrf;
	4: spriteset_ef65_2000_jrf;
	5: spriteset_ef65_1000_largelogo;
	6: spriteset_ef65_1000_experimental;
	7: spriteset_ef65_1000_rainbow;
	8: spriteset_ef65_1000_twilight;
	9: spriteset_ef65_1000_cc;
	switch_ef65_1000_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ef65_1000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_TOKKYU)
                                 );
	2: return string(STR_CONCAT_4, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_TOKKYU), string(STR_SUFFIX_UPGRADE)
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_UPGRADE)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_LARGELOGO)
                                 );
	6: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_EXPERIMENT)
                                 );
	7: return string(STR_CONCAT_3, string(STR_SUFFIX_JRE), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_RAINBOW)
                                 );
	8: return string(STR_CONCAT_3, string(STR_SUFFIX_JRW), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_GREEN), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_TWILIGHT)
                                 );
	9: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef65_1000_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF65);
  } 
switch (FEAT_TRAINS, SELF, switch_ef65_1000_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef65_1000_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef65_1000, 1942) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF65_3);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1969,1,1);
  speed: 115 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 3;
  model_life: 55;
  vehicle_life: 45;
  cost_factor: 88;
  length: 7;
  running_cost_factor: 85;
  running_cost_base: RUNNING_COST_ELECTRIC;
//  misc_flags: bitmask(TRAIN_FLAG_2CC); //temp removal pending 32bpp sprite for twilight
  variant_group: 1024;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EF),
                        string(STR_CONCAT_4C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRF),
                           string(STR_SUFFIX_JRE),
                           string(STR_SUFFIX_JRW),
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef65_1000_subtype_text;
  default: switch_ef65_1000_livery;
  purchase: switch_ef65_1000_yeardep_purchase;
  name: switch_ef65_1000_name;
  }
}


//ef67

switch(FEAT_TRAINS, SELF, switch_ef67_100_yeardep_purchase, current_year) {
	0..2003: spriteset_ef67_100_purchase;
    spriteset_ef67_100_refurbished_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef67_100_yeardep_livery, build_year) {
	0..2003: spriteset_ef67_100;
	spriteset_ef67_100_refurbished;
}

switch(FEAT_TRAINS, SELF, switch_ef67_100_livery, cargo_subtype) {
	1: spriteset_ef67_100;
	2: spriteset_ef67_100_refurbished;
	3: spriteset_ef67_100_cc;
	switch_ef67_100_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ef67_100_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_BANKER)
                                 );
	2: return string(STR_CONCAT_4, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_RED),
                                     string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_BANKER), string(STR_SUFFIX_REFURB)
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef67_100_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF67);
  } 
switch (FEAT_TRAINS, SELF, switch_ef67_100_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef67_100_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef67_100, 1924) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF67_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1990,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 3;
  model_life: 55;
  vehicle_life: 45;
  cost_factor: 84;
  length: 7;
  running_cost_factor: 81;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1024;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_BANK),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  ); 
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef67_100_subtype_text;
  default: switch_ef67_100_livery;
  purchase: switch_ef67_100_yeardep_purchase;
  name: switch_ef67_100_name;
  }
}
spriteset(spriteset_ef66_old_blue, "gfx/electric/ef66.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef66_old_jrf, "gfx/electric/ef66.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef66_old_experimental, "gfx/electric/ef66.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef66_new_blue, "gfx/electric/ef66.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef66_new_jrf, "gfx/electric/ef66.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef66_new_refit, "gfx/electric/ef66.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef66_new_experimental, "gfx/electric/ef66.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ef66_rainbow, "gfx/electric/ef66.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_ef66_old_cc, "gfx/electric/ef66.png") {
	template_2cc_std(1, 224)
}

//-100
spriteset(spriteset_ef66_100_jrf, "gfx/electric/ef66.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_ef66_100_2tone, "gfx/electric/ef66.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_ef66_100_jnr, "gfx/electric/ef66.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_ef66_100_blue_white, "gfx/electric/ef66.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_ef66_100_cc, "gfx/electric/ef66.png") {
	template_2cc_std(180, 128)
}

//2000 concept

spriteset(spriteset_ef66_2000, "gfx/electric/ef66.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_ef66_2000_cc, "gfx/electric/ef66.png") {
	template_2cc_std(180, 224)
}

//purch
spriteset(spriteset_ef66_old_jnr_purchase, "gfx/electric/ef66.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_ef66_old_jrf_purchase, "gfx/electric/ef66.png") {
	template_purchase(89, 256)
}

spriteset(spriteset_ef66_new_jrf_purchase, "gfx/electric/ef66.png") {
	template_purchase(1, 288)
}

//purch 100
spriteset(spriteset_ef66_100_jrf_purchase, "gfx/electric/ef66.png") {
	template_purchase(180, 256)
}

//purch 2000
spriteset(spriteset_ef66_2000_purchase, "gfx/electric/ef66.png") {
	template_purchase(180, 288)
}

switch(FEAT_TRAINS, SELF, switch_ef66_yeardep_purchase, current_year) {
	0..1987: spriteset_ef66_old_jnr_purchase;
	1987..2004: spriteset_ef66_old_jrf_purchase;
    spriteset_ef66_new_jrf_purchase;
}


random_switch (FEAT_TRAINS, SELF, random_ef66_blue) {
	2: spriteset_ef66_old_blue;
	1: spriteset_ef66_new_blue;
}

random_switch (FEAT_TRAINS, SELF, random_ef66_jrf) {
	2: spriteset_ef66_old_jrf;
	1: spriteset_ef66_new_jrf;
}


switch(FEAT_TRAINS, SELF, switch_ef66_yeardep_livery, build_year) {
	0..1980: spriteset_ef66_old_blue;
	1980..1987: random_ef66_blue;
	1987..2004: random_ef66_jrf;
	spriteset_ef66_new_refit;
}

switch(FEAT_TRAINS, SELF, switch_ef66_livery, cargo_subtype) {
	1: spriteset_ef66_old_blue;
	2: spriteset_ef66_old_jrf;
	3: spriteset_ef66_old_experimental;
	4: spriteset_ef66_new_blue;
	5: spriteset_ef66_new_jrf;
	6: spriteset_ef66_new_refit;
	7: spriteset_ef66_new_experimental;
  8: spriteset_ef66_rainbow;
	9: spriteset_ef66_old_cc;
	switch_ef66_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ef66_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_CREAM), 
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_EXPERIMENT)
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_PANTOS)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_PANTOS)
                                 );
	6: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_REFURB)
                                 );
	7: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_LARGELOGO), string(STR_SUFFIX_FICTION)
                                 );
	8: return string(STR_CONCAT_4, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_RAINBOW), string(STR_SUFFIX_FICTION)
                                 );
	9: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef66_0_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF66);
  } 
switch (FEAT_TRAINS, SELF, switch_ef66_0_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef66_0_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, ef66, 1026) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF66_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1966,1,1);
  speed: 110 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 3900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 17;
  model_life: 55;
  vehicle_life: 45;
  cost_factor: 100;
  length: 8;
  running_cost_factor: 100;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EF),
                        string(STR_CONCAT_3C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRF),
                           string(STR_SUFFIX_JRW)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef66_subtype_text;
  default: switch_ef66_livery;
  purchase: switch_ef66_yeardep_purchase;
  name: switch_ef66_0_name;
  }
}

//-100


switch(FEAT_TRAINS, SELF, switch_ef66_2_livery, cargo_subtype) {
	1: spriteset_ef66_100_jnr;
  2: spriteset_ef66_100_2tone;
  3: spriteset_ef66_100_blue_white;
	4: spriteset_ef66_100_cc;
	spriteset_ef66_100_jrf;
}

switch(FEAT_TRAINS, SELF, switch_ef66_2_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef66_100_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF66);
  } 
switch (FEAT_TRAINS, SELF, switch_ef66_100_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef66_100_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef66_2, 1926) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF66_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1989,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 3900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 17;
  model_life: 55;
  vehicle_life: 45;
  cost_factor: 100;
  length: 8;
  running_cost_factor: 100;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1026;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef66_2_subtype_text;
  default: switch_ef66_2_livery;
  purchase: spriteset_ef66_100_jrf_purchase;
  name: switch_ef66_100_name;
  }
}

//-2000 concept


switch(FEAT_TRAINS, SELF, switch_ef66_2000_livery, cargo_subtype) {
	1: spriteset_ef66_2000_cc;
	spriteset_ef66_2000;
}

switch(FEAT_TRAINS, SELF, switch_ef66_2000_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_GREY), 
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_CONCEPT)
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef66_2000_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF66);
  } 
switch (FEAT_TRAINS, SELF, switch_ef66_2000_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef66_2000_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef66_2000, 1927) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF66_3);
  climates_available: ALL_CLIMATES;
  introduction_date: date(2014,1,1);
  speed: 130 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 3900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 17;
  model_life: 55;
  vehicle_life: 45;
  cost_factor: 101;
  length: 8;
  running_cost_factor: 102;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1026;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_3S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_CONCEPT)
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef66_2000_subtype_text;
  default: switch_ef66_2000_livery;
  purchase: spriteset_ef66_2000_purchase;
  name: switch_ef66_2000_name;
  }
}
spriteset(spriteset_ef200_jrf_old, "gfx/electric/ef200.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef200_jrf_new, "gfx/electric/ef200.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef200_black, "gfx/electric/ef200.png") {
	template_2cc_std(1, 64)
}


spriteset(spriteset_ef200_rainbow, "gfx/electric/ef200.png") {
	template_2cc_std(1, 96)
}


spriteset(spriteset_ef200_blue, "gfx/electric/ef200.png") {
	template_2cc_std(1, 128)
}


spriteset(spriteset_ef200_cc, "gfx/electric/ef200.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef200_proto, "gfx/electric/ef200.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ef200_proto_cc, "gfx/electric/ef200.png") {
	template_2cc_std(1, 224)
}


spriteset(spriteset_ef200_proto_purchase, "gfx/electric/ef200.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_ef200_old_purchase, "gfx/electric/ef200.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_ef200_new_purchase, "gfx/electric/ef200.png") {
	template_purchase(89, 288)
}


switch(FEAT_TRAINS, SELF, switch_ef200_yeardep_purchase, current_year) {
	0..2006: spriteset_ef200_old_purchase;
    spriteset_ef200_new_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef200_yeardep_livery, build_year) {
	0..2006: spriteset_ef200_jrf_old;
	spriteset_ef200_jrf_new;
}

switch(FEAT_TRAINS, SELF, switch_ef200_livery, cargo_subtype) {
	1: spriteset_ef200_jrf_old;
	2: spriteset_ef200_jrf_new;
	3: spriteset_ef200_blue;
	4: spriteset_ef200_black;
	5: spriteset_ef200_rainbow;
	6: spriteset_ef200_cc;
	switch_ef200_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ef200_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_INVERTER)
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_REFURB)
                                 );
   3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
   4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK),
                                    string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
   5: return string(STR_CONCAT_4, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_RAINBOW), string(STR_SUFFIX_FICTION)
                                 );
	6: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, jr_ef200, 1262) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF200);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1992,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 6000 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 21;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 25;
  cost_factor: 109;
  length: 8;
  running_cost_factor: 109;
  running_cost_base: RUNNING_COST_ELECTRIC;
    misc_flags: bitmask(TRAIN_FLAG_2CC);
	} 


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef200_subtype_text;
  default: switch_ef200_livery;
  purchase: switch_ef200_yeardep_purchase;
  }
}

//prototype

switch(FEAT_TRAINS, SELF, switch_ef200_proto_yeardep_livery, build_year) {
	2006..2019: spriteset_ef200_jrf_new;
	spriteset_ef200_proto;
}

switch(FEAT_TRAINS, SELF, switch_ef200_proto_livery, cargo_subtype) {
	1: spriteset_ef200_proto;
	2: spriteset_ef200_jrf_new;
	3: spriteset_ef200_proto_cc;
	switch_ef200_proto_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ef200_proto_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_INVERTER)
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_REFURB)
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch (FEAT_TRAINS, SELF, switch_ef200_proto_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF200);
  } 
switch (FEAT_TRAINS, SELF, switch_ef200_proto_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef200_proto_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, jr_ef200_proto, 1962) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF200_P);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1990,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 6000 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 21;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 25;
  cost_factor: 109;
  length: 8;
  running_cost_factor: 109;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1262;
	} 


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PROTO),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef200_proto_subtype_text;
  default: switch_ef200_proto_livery;
  purchase: spriteset_ef200_proto_purchase;
  name: switch_ef200_proto_name;
  }
}
spriteset(spriteset_ef210_0, "gfx/electric/ef210.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef210_0_momotaro, "gfx/electric/ef210.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef210_0_refurb, "gfx/electric/ef210.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef210_100, "gfx/electric/ef210.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef210_100_momotaro, "gfx/electric/ef210.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef210_100_refurb, "gfx/electric/ef210.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef210_300, "gfx/electric/ef210.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ef210_0_cc, "gfx/electric/ef210.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_ef210_100_cc, "gfx/electric/ef210.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_ef210_300_cc, "gfx/electric/ef210.png") {
	template_2cc_std(1, 288)
}


spriteset(spriteset_ef210_0_jrf_purchase, "gfx/electric/ef210.png") {
	template_purchase(1, 320)
}

spriteset(spriteset_ef210_100_jrf_purchase, "gfx/electric/ef210.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_ef210_0_jr_purchase, "gfx/electric/ef210.png") {
	template_purchase(89, 320)
}

spriteset(spriteset_ef210_300_jrf_purchase, "gfx/electric/ef210.png") {
	template_purchase(89, 352)
}

spriteset(spriteset_ef210_100_jr_purchase, "gfx/electric/ef210.png") {
	template_purchase(180, 320)
}

spriteset(spriteset_ef210_300_jr_purchase, "gfx/electric/ef210.png") {
	template_purchase(180, 352)
}


//ef210_0

switch(FEAT_TRAINS, SELF, switch_ef210_0_yeardep_purchase, current_year) {
	2019..9999: spriteset_ef210_0_jr_purchase;
    spriteset_ef210_0_jrf_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef210_0_yeardep_livery, build_year) {
	0..2009: spriteset_ef210_0;
	2009..2019: spriteset_ef210_0_momotaro;
	spriteset_ef210_0_refurb;
}

switch(FEAT_TRAINS, SELF, switch_ef210_0_livery, cargo_subtype) {
	1: spriteset_ef210_0;
	2: spriteset_ef210_0_momotaro;
	3: spriteset_ef210_0_refurb;	
	4: spriteset_ef210_0_cc;
	switch_ef210_0_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ef210_0_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_MOMOTARO)
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_REFURB)
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef210_0_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF210);
  } 
switch (FEAT_TRAINS, SELF, switch_ef210_0_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef210_0_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef210_0, 1984) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF210_0);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1996,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 3600 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 16;
  model_life: 40;
  vehicle_life: 40;
  length: 8;
  cost_factor: 98;
  running_cost_factor: 92;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef210_0_subtype_text;
  default: switch_ef210_0_livery;
  purchase: switch_ef210_0_yeardep_purchase;
  name: switch_ef210_0_name;
  }
}


//ef210_100

switch(FEAT_TRAINS, SELF, switch_ef210_100_yeardep_purchase, current_year) {
	2019..9999: spriteset_ef210_100_jr_purchase;
    spriteset_ef210_100_jrf_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ef210_100_yeardep_livery, build_year) {
	0..2009: spriteset_ef210_100;
	2009..2019: spriteset_ef210_100_momotaro;
	spriteset_ef210_100_refurb;
}

switch(FEAT_TRAINS, SELF, switch_ef210_100_livery, cargo_subtype) {
	1: spriteset_ef210_100;
	2: spriteset_ef210_100_momotaro;
	3: spriteset_ef210_100_refurb;	
	4: spriteset_ef210_100_cc;
	switch_ef210_100_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ef210_100_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_MOMOTARO)
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_REFURB)
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef210_100_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF210);
  } 
switch (FEAT_TRAINS, SELF, switch_ef210_100_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef210_100_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef210_100, 1084) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF210_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(2000,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 3600 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 16;
  model_life: 40;
  vehicle_life: 40;
  length: 8;
  cost_factor: 98;
  running_cost_factor: 92;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1984;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef210_100_subtype_text;
  default: switch_ef210_100_livery;
  purchase: switch_ef210_100_yeardep_purchase;
  name: switch_ef210_100_name;
  }
}

//ef210_300

switch(FEAT_TRAINS, SELF, switch_ef210_300_yeardep_purchase, current_year) {
	2019..9999: spriteset_ef210_300_jr_purchase;
    spriteset_ef210_300_jrf_purchase;
}


switch(FEAT_TRAINS, SELF, switch_ef210_300_livery, cargo_subtype) {
	0: spriteset_ef210_300;
	1: spriteset_ef210_300_cc;
}



switch(FEAT_TRAINS, SELF, switch_ef210_300_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GOLD)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef210_300_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF210);
  } 
switch (FEAT_TRAINS, SELF, switch_ef210_300_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef210_300_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef210_300, 1985) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EF210_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(2013,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 3600 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 16;
  model_life: 40;
  vehicle_life: 40;
  length: 8;
  cost_factor: 98;
  running_cost_factor: 92;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1984;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_BANK),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef210_300_subtype_text;
  default: switch_ef210_300_livery;
  purchase: switch_ef210_300_yeardep_purchase;
  name: switch_ef210_300_name;
  }
}
//front

spriteset(spriteset_eh10_black_front, "gfx/electric/eh10.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_eh10_cc_front, "gfx/electric/eh10.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_eh10_proto_black_front, "gfx/electric/eh10.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_eh10_proto_brown_front, "gfx/electric/eh10.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_eh10_proto_cc_front, "gfx/electric/eh10.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_eh50_brown_front, "gfx/electric/eh10.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_eh50_blue_front, "gfx/electric/eh10.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_eh50_jrf_front, "gfx/electric/eh10.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_eh50_cc_front, "gfx/electric/eh10.png") {
	template_2cc_std(1, 256)
}

//rear

spriteset(spriteset_eh10_black_rear, "gfx/electric/eh10.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_eh10_cc_rear, "gfx/electric/eh10.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_eh10_proto_black_rear, "gfx/electric/eh10.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_eh10_proto_brown_rear, "gfx/electric/eh10.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_eh10_proto_cc_rear, "gfx/electric/eh10.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_eh50_brown_rear, "gfx/electric/eh10.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_eh50_blue_rear, "gfx/electric/eh10.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_eh50_jrf_rear, "gfx/electric/eh10.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_eh50_cc_rear, "gfx/electric/eh10.png") {
	template_2cc_std(180, 256)
}

//purchase

spriteset(spriteset_eh10_purchase, "gfx/electric/eh10.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_eh10_proto_purchase, "gfx/electric/eh10.png") {
	template_purchase(89, 288)
}

spriteset(spriteset_eh50_purchase, "gfx/electric/eh10.png") {
	template_purchase(1, 320)
}

spriteset(spriteset_eh10_jrf_purchase, "gfx/electric/eh10.png") {
	template_purchase(89, 320)
}




switch(FEAT_TRAINS, SELF, switch_eh10_livery, cargo_subtype) {
	0: spriteset_eh10_black_front;
	1: spriteset_eh10_cc_front;
}

switch(FEAT_TRAINS, SELF, switch_eh10_livery_rear, cargo_subtype) {
	0: spriteset_eh10_black_rear;
	1: spriteset_eh10_cc_rear;
}


switch(FEAT_TRAINS, SELF, switch_eh10_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_eh10_articulated_part, extra_callback_info1) {
	1: return eh10_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}



item (FEAT_TRAINS, eh10, 1218) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EH10);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1955,1,1);
  speed: 85 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 2600 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 116;
  reliability_decay: 22;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 50;
  length: 6;
  running_cost_factor: 58;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_eh10_subtype_text;
  default: switch_eh10_livery;
  purchase: spriteset_eh10_purchase;
  articulated_part: switch_eh10_articulated_part;
  }
}

item (FEAT_TRAINS, eh10_rear, 1018) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_EH10);
		climates_available: NO_CLIMATE;
		introduction_date: date(1950,1,1);
		engine_class: ENGINE_CLASS_ELECTRIC;
		power: 1 kW;
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 6;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
    power: return 0;
		default: switch_eh10_livery_rear;
	}
}


//eh10 prototype

switch(FEAT_TRAINS, SELF, switch_eh10_2_livery, cargo_subtype) {
	0: spriteset_eh10_proto_black_front;
	1: spriteset_eh10_proto_brown_front;
	2: spriteset_eh10_proto_cc_front;
}

switch(FEAT_TRAINS, SELF, switch_eh10_2_livery_rear, cargo_subtype) {
	0: spriteset_eh10_proto_black_rear;
	1: spriteset_eh10_proto_brown_rear;
	2: spriteset_eh10_proto_cc_rear;
}


switch(FEAT_TRAINS, SELF, switch_eh10_2_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_SILVER)
                                    )
                                 );
	2: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_eh10_2_articulated_part, extra_callback_info1) {
	1: return eh10_2_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


switch (FEAT_TRAINS, SELF, switch_eh10_2_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EH10);
  } 
switch (FEAT_TRAINS, SELF, switch_eh10_2_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_eh10_2_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, eh10_2, 1081) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EH10_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1954,1,1);
  speed: 85 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 2600 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 118;
  reliability_decay: 22;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 50;
  length: 6;
  running_cost_factor: 58;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1218;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PROTO),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_eh10_2_subtype_text;
  default: switch_eh10_2_livery;
  purchase: spriteset_eh10_proto_purchase;
  articulated_part: switch_eh10_2_articulated_part;
  name: switch_eh10_2_name;
  }
}

item (FEAT_TRAINS, eh10_2_rear, 1981) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_EH10);
		climates_available: NO_CLIMATE;
		introduction_date: date(1950,1,1);
		engine_class: ENGINE_CLASS_ELECTRIC;
		power: 1 kW;
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 6;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
    power: return 0;
		default: switch_eh10_2_livery_rear;
	}
}

//eh50

switch(FEAT_TRAINS, SELF, switch_eh50_livery, cargo_subtype) {
	0: spriteset_eh50_brown_front;
	1: spriteset_eh50_blue_front;
	2: spriteset_eh50_jrf_front;
	3: spriteset_eh50_cc_front;
}

switch(FEAT_TRAINS, SELF, switch_eh50_livery_rear, cargo_subtype) {
	0: spriteset_eh50_brown_rear;
	1: spriteset_eh50_blue_rear;
	2: spriteset_eh50_jrf_rear;
	3: spriteset_eh50_cc_rear;
}


switch(FEAT_TRAINS, SELF, switch_eh50_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_PROTO)
                                 );
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_PROPOSAL)
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_eh50_articulated_part, extra_callback_info1) {
	1: return eh50_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


item (FEAT_TRAINS, eh50, 1082) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EH50);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1956,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 2600 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 116;
  reliability_decay: 22;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 88;
  length: 6;
  running_cost_factor: 82;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1218;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PROTO),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
						               string(STR_SUFFIX_JRF)
                    )
                  );  
  cargo_capacity: return 0;
  cargo_subtype_text: switch_eh50_subtype_text;
  default: switch_eh50_livery;
  purchase: spriteset_eh50_purchase;
  articulated_part: switch_eh50_articulated_part;
  }
}

item (FEAT_TRAINS, eh50_rear, 1982) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_EH50);
		climates_available: NO_CLIMATE;
		introduction_date: date(1950,1,1);
    engine_class: ENGINE_CLASS_ELECTRIC;
		power: 1 kW;
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 6;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
    power: return 0;
		default: switch_eh50_livery_rear;
	}
}
spriteset(spriteset_eh200_blue_front, "gfx/electric/eh200.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_eh200_blue_rear, "gfx/electric/eh200.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_eh200_cc_front, "gfx/electric/eh200.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_eh200_cc_rear, "gfx/electric/eh200.png") {
	template_2cc_std(1, 96)
}


spriteset(spriteset_eh200_purchase, "gfx/electric/eh200.png") {
	template_purchase(1, 128)
}



switch(FEAT_TRAINS, SELF, switch_eh200_livery, cargo_subtype) {
	1: spriteset_eh200_cc_front;
	spriteset_eh200_blue_front;
}

switch(FEAT_TRAINS, SELF, switch_eh200_livery_rear, cargo_subtype) {
	1: spriteset_eh200_cc_rear;
	spriteset_eh200_blue_rear;
}




switch(FEAT_TRAINS, SELF, switch_eh200_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_BLUETHUNDER)
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_eh200_articulated_part, extra_callback_info1) {
	1: return eh200_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}



item (FEAT_TRAINS, eh200, 1088) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_DC;
  name: string(STR_NAME_EH200);
  climates_available: ALL_CLIMATES;
  introduction_date: date(2001,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 4520 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 134;
  reliability_decay: 16;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 45;
  cost_factor: 99;
  length: 6;
  running_cost_factor: 97;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DC15),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_eh200_subtype_text;
  default: switch_eh200_livery;
  purchase: spriteset_eh200_purchase;
  articulated_part: switch_eh200_articulated_part;
  }
}


item (FEAT_TRAINS, eh200_rear, 1988) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_EH200);
		climates_available: NO_CLIMATE;
		introduction_date: date(1950,1,1);
		cargo_capacity: 1; 
		engine_class: ENGINE_CLASS_ELECTRIC;
		power: 1 kW;
		cargo_allow_refit: [PASS];
		length: 6;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		cargo_capacity: return 0;
		power: return 0;
		default: switch_eh200_livery_rear;
	}
}


spriteset(spriteset_ed46_pink, "gfx/electric/ed46.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed46_cc, "gfx/electric/ed46.png") {
	template_2cc_std(1, 32)
}



spriteset(spriteset_ed46_purchase, "gfx/electric/ed46.png") {
	template_purchase(1, 64)
}


switch(FEAT_TRAINS, SELF, switch_ed46_livery, cargo_subtype) {
	1: spriteset_ed46_cc;
  spriteset_ed46_pink;
}


switch(FEAT_TRAINS, SELF, switch_ed46_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_PINK), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}




item (FEAT_TRAINS, ed46, 1055) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_ED46);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1959,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.21;
  power: 1400 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 64;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 40;
  cost_factor: 40;
  length: 6;
  running_cost_factor: 55;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_PROTO),
                      string(STR_CONCAT_1C, 
                    string(STR_SUFFIX_JNR)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed46_subtype_text;
  default: switch_ed46_livery;
  purchase: spriteset_ed46_purchase;
  }
}
spriteset(spriteset_ed70_red, "gfx/electric/ed70.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed70_cc, "gfx/electric/ed70.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ed70_purchase, "gfx/electric/ed70.png") {
	template_purchase(1, 96)
}


switch(FEAT_TRAINS, SELF, switch_ed70_livery, cargo_subtype) {
	1: spriteset_ed70_cc;
	spriteset_ed70_red;
}



switch(FEAT_TRAINS, SELF, switch_ed70_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, ed70, 1065) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_AC;
  name: string(STR_NAME_ED70);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1957,1,1);
  speed: 90 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1500 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 64;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 60;
  cost_factor: 37;
  length: 6;
  running_cost_factor: 54;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_AC20),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
							string(STR_SUFFIX_JNR)
							)
						);  
   cargo_capacity: return 0;
  default: switch_ed70_livery;
  cargo_subtype_text: switch_ed70_subtype_text;
  purchase: spriteset_ed70_purchase;
  }
}
//ed75 0

spriteset(spriteset_ed75_red, "gfx/electric/ed75.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed75_redstripe, "gfx/electric/ed75.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ed75_rainbow, "gfx/electric/ed75.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ed75_redspike, "gfx/electric/ed75.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ed75_panda, "gfx/electric/ed75.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ed75_thickstripe, "gfx/electric/ed75.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ed75_cc, "gfx/electric/ed75.png") {
	template_2cc_std(1, 192)
}

//ed75 0 purch

spriteset(spriteset_ed75_jnr_purchase, "gfx/electric/ed75.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_ed75_jrf_purchase, "gfx/electric/ed75.png") {
	template_purchase(1, 288)
}

//ed79

spriteset(spriteset_ed79_red, "gfx/electric/ed75.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_ed79_singlearm, "gfx/electric/ed75.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_ed79_jrf, "gfx/electric/ed75.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_ed79_cc, "gfx/electric/ed75.png") {
	template_2cc_std(180, 96)
}

//purch

spriteset(spriteset_ed79_jnr_purchase, "gfx/electric/ed75.png") {
	template_purchase(180, 256)
}

spriteset(spriteset_ed79_jrf_purchase, "gfx/electric/ed75.png") {
	template_purchase(180, 288)
}

//ed75 700

spriteset(spriteset_ed75_700_red, "gfx/electric/ed75.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_ed75_700_akebono, "gfx/electric/ed75.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_ed75_700_cc, "gfx/electric/ed75.png") {
	template_2cc_std(180, 192)
}

//purch

spriteset(spriteset_ed75_700_jnr_purchase, "gfx/electric/ed75.png") {
	template_purchase(89, 256)
}

spriteset(spriteset_ed75_700_jr_purchase, "gfx/electric/ed75.png") {
	template_purchase(89, 288)
}


//32bpp
//ed75 0

alternative_sprites(spriteset_ed75_red, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_ed75_redstripe, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_2cc_std(1, 32)
}

alternative_sprites(spriteset_ed75_rainbow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_2cc_std(1, 64)
}

alternative_sprites(spriteset_ed75_redspike, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_2cc_std(1, 96)
}

alternative_sprites(spriteset_ed75_panda, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_2cc_std(1, 128)
}

alternative_sprites(spriteset_ed75_thickstripe, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_2cc_std(1, 160)
}



//ed75 0 purch

alternative_sprites(spriteset_ed75_jnr_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_purchase(1, 256)
}

alternative_sprites(spriteset_ed75_jrf_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_purchase(1, 288)
}

//ed79

alternative_sprites(spriteset_ed79_red, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_2cc_std(180, 1)
}

alternative_sprites(spriteset_ed79_singlearm, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_2cc_std(180, 32)
}

alternative_sprites(spriteset_ed79_jrf, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_2cc_std(180, 64)
}



//purch

alternative_sprites(spriteset_ed79_jnr_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_purchase(180, 256)
}

alternative_sprites(spriteset_ed79_jrf_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_purchase(180, 288)
}

//ed75 700

alternative_sprites(spriteset_ed75_700_red, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_2cc_std(180, 128)
}

alternative_sprites(spriteset_ed75_700_akebono, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_2cc_std(180, 160)
}


//purch

alternative_sprites(spriteset_ed75_700_jnr_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_purchase(89, 256)
}

alternative_sprites(spriteset_ed75_700_jr_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/electric/32bpp/ed75.png") {
	template_purchase(89, 288)
}


//ed75 0


switch(FEAT_TRAINS, SELF, switch_ed75_yeardep_livery, build_year) {
	0..1993: spriteset_ed75_red;
	1993..2003: spriteset_ed75_thickstripe;
	spriteset_ed75_redstripe;
}

switch(FEAT_TRAINS, SELF, switch_ed75_yeardep_purchase, current_year) {
	0..1987: spriteset_ed75_jnr_purchase;
    spriteset_ed75_jrf_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ed75_livery, cargo_subtype) {
	1: spriteset_ed75_red;
	2: spriteset_ed75_redstripe;
	3: spriteset_ed75_rainbow;
	4: spriteset_ed75_redspike;
	5: spriteset_ed75_panda;
	6: spriteset_ed75_thickstripe;
	7: spriteset_ed75_cc;
	switch_ed75_yeardep_livery;
}

switch(FEAT_TRAINS, SELF, switch_ed75_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_WHITE)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_RAINBOW)
                                 );
	4: string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_WHISKERS)
                                 );
	5: string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_BLACK),
									string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_PANDA)
                                 );
	6: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_REFURB)
                                 );
	7: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ed75_0_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_ED75);
  } 
switch (FEAT_TRAINS, SELF, switch_ed75_0_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ed75_0_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ed75, 1070) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_AC;
  name: string(STR_NAME_ED75_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1963,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.26;
  power: 1900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 68;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 41;
  length: 6;
  running_cost_factor: 48;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
						string(STR_DESC_POWER_AC20),
						string(STR_DESC_NARROWGAUGE),
						string(STR_DESC_USAGE_GP),
						string(STR_CONCAT_3C, 
							string(STR_SUFFIX_JNR),
							string(STR_SUFFIX_JRE),
							string(STR_SUFFIX_JRF)
							)
						);  
	cargo_capacity: return 0;
  cargo_subtype_text: switch_ed75_subtype_text;
  default: switch_ed75_livery;
  purchase: switch_ed75_yeardep_purchase;
  name: switch_ed75_0_name;
  }
}


//ed79


switch(FEAT_TRAINS, SELF, switch_ed79_yeardep_livery, build_year) {
	0..1990: spriteset_ed79_red;
	spriteset_ed79_jrf;
}

switch(FEAT_TRAINS, SELF, switch_ed79_yeardep_purchase, current_year) {
	0..1987: spriteset_ed79_jnr_purchase;
    spriteset_ed79_jrf_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ed79_livery, cargo_subtype) {
	1: spriteset_ed79_red;
	2: spriteset_ed79_singlearm;
	3: spriteset_ed79_jrf;
	4: spriteset_ed79_cc;
	switch_ed79_yeardep_livery;
}

switch(FEAT_TRAINS, SELF, switch_ed79_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_PANTOS)
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, ed79, 1075) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_AC;
  name: string(STR_NAME_ED79);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1986,1,1);
  speed: 110 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.26;
  power: 1900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 68;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 41;
  length: 6;
  running_cost_factor: 50;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1070;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
						string(STR_DESC_POWER_AC20),
						string(STR_DESC_NARROWGAUGE),
						string(STR_DESC_USAGE_EF),
						string(STR_CONCAT_3C, 
							string(STR_SUFFIX_JNR),
							string(STR_SUFFIX_JRF),
							string(STR_SUFFIX_JRH)
							)
						);
  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed79_subtype_text;
  default: switch_ed79_livery;
  purchase: switch_ed79_yeardep_purchase;
  }
}

//ed75_700



switch(FEAT_TRAINS, SELF, switch_ed75_700_yeardep_purchase, current_year) {
	0..1987: spriteset_ed75_700_jnr_purchase;
    spriteset_ed75_700_jr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_ed75_700_livery, cargo_subtype) {
	1: spriteset_ed75_700_akebono;
	2: spriteset_ed75_700_cc;
	spriteset_ed75_700_red;
}

switch(FEAT_TRAINS, SELF, switch_ed75_700_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_AKEBONO)
                                 );
	2: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ed75_2_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_ED75);
  } 
switch (FEAT_TRAINS, SELF, switch_ed75_2_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ed75_2_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ed75_700, 1970) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_AC;
  name: string(STR_NAME_ED75_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1971,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.26;
  power: 1900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1; 
  cargo_allow_refit: [PASS];
  weight: 68;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 45;
  cost_factor: 41;
  length: 6;
  running_cost_factor: 48;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1070;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
						string(STR_DESC_POWER_AC20),
						string(STR_DESC_NARROWGAUGE),
						string(STR_DESC_USAGE_GP),
						string(STR_CONCAT_2C, 
							string(STR_SUFFIX_JNR),
							string(STR_SUFFIX_JRE)
							)
						);  
	cargo_capacity: return 0;
  cargo_subtype_text: switch_ed75_700_subtype_text;
  default: switch_ed75_700_livery;
  purchase: switch_ed75_700_yeardep_purchase;
  name: switch_ed75_2_name;
  }
}
spriteset(spriteset_ed76_0_red, "gfx/electric/ed76.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed76_0_jrf_stripe, "gfx/electric/ed76.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ed76_0_jrf_whiskers, "gfx/electric/ed76.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ed76_0_jrf_2tone, "gfx/electric/ed76.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ed76_0_southerncross, "gfx/electric/ed76.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ed76_0_cc, "gfx/electric/ed76.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ed76_500_red, "gfx/electric/ed76.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ed76_500_cc, "gfx/electric/ed76.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_ed76_550_red, "gfx/electric/ed76.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_ed76_550_cc, "gfx/electric/ed76.png") {
	template_2cc_std(1, 288)
}


spriteset(spriteset_ed76_0_jnr_purchase, "gfx/electric/ed76.png") {
	template_purchase(1, 320)
}

spriteset(spriteset_ed76_0_jrf_purchase, "gfx/electric/ed76.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_ed76_500_jnr_purchase, "gfx/electric/ed76.png") {
	template_purchase(89, 320)
}

spriteset(spriteset_ed76_500_jr_purchase, "gfx/electric/ed76.png") {
	template_purchase(89, 352)
}

spriteset(spriteset_ed76_550_jr_purchase, "gfx/electric/ed76.png") {
	template_purchase(89, 384)
}

//ed76_0

switch(FEAT_TRAINS, SELF, switch_ed76_0_yeardep_livery, build_year) {
	0..1990: spriteset_ed76_0_red; //guess
    1990..2000: spriteset_ed76_0_jrf_whiskers;
	spriteset_ed76_0_jrf_stripe;
}


switch(FEAT_TRAINS, SELF, switch_ed76_0_livery, cargo_subtype) {
	1: spriteset_ed76_0_red;
	2: spriteset_ed76_0_jrf_stripe;
	3: spriteset_ed76_0_jrf_whiskers;
	4: spriteset_ed76_0_jrf_2tone;
	5: spriteset_ed76_0_southerncross;
	6: spriteset_ed76_0_cc;
	switch_ed76_0_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_ed76_0_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									                  string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_STRIPE)
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									                  string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_WHISKERS)
                                 );
	4: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JRK),
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_SOUTHERNCROSS)
                                 );
	6: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_ed76_0_yeardep_purchase, current_year) {
	0..1987: spriteset_ed76_0_jnr_purchase;
    spriteset_ed76_0_jrf_purchase;
}


switch (FEAT_TRAINS, SELF, switch_ed76_0_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_ED76);
  } 
switch (FEAT_TRAINS, SELF, switch_ed76_0_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ed76_0_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ed76_0, 1071) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_AC;
  name: string(STR_NAME_ED76_0);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1965,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 87;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 54;
  length: 8;
  running_cost_factor: 55;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
						string(STR_DESC_POWER_AC20),
						string(STR_DESC_NARROWGAUGE),
						string(STR_DESC_USAGE_EF),
						string(STR_CONCAT_3C, 
							string(STR_SUFFIX_JNR),
							string(STR_SUFFIX_JRF),
							string(STR_SUFFIX_JRK)
							)
						);

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed76_0_subtype_text;
  default: switch_ed76_0_livery;
  purchase: switch_ed76_0_yeardep_purchase;
  name: switch_ed76_0_name;
  }
}


//ed76_500

switch(FEAT_TRAINS, SELF, switch_ed76_500_livery, cargo_subtype) {
	1: spriteset_ed76_500_cc;
	spriteset_ed76_500_red;
}


switch(FEAT_TRAINS, SELF, switch_ed76_500_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_ed76_500_yeardep_purchase, current_year) {
	0..1987: spriteset_ed76_500_jnr_purchase;
    spriteset_ed76_500_jr_purchase;
}


switch (FEAT_TRAINS, SELF, switch_ed76_500_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_ED76);
  } 
switch (FEAT_TRAINS, SELF, switch_ed76_500_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ed76_500_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, ed76_500, 1072) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_AC;
  name: string(STR_NAME_ED76_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1968,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 87;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 54;
  length: 8;
  running_cost_factor: 55;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1071;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
						string(STR_DESC_POWER_AC20),
						string(STR_DESC_NARROWGAUGE),
						string(STR_DESC_USAGE_EP),
						string(STR_CONCAT_2C, 
							string(STR_SUFFIX_JNR),
							string(STR_SUFFIX_JRH)
							)
						);

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed76_500_subtype_text;
  default: switch_ed76_500_livery;
  purchase: switch_ed76_500_yeardep_purchase;
  name: switch_ed76_500_name;
  }
}

//ed76_550

switch(FEAT_TRAINS, SELF, switch_ed76_550_livery, cargo_subtype) {
	1: spriteset_ed76_550_cc;
	spriteset_ed76_550_red;
}


switch(FEAT_TRAINS, SELF, switch_ed76_550_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JRH), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ed76_550_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_ED76);
  } 
switch (FEAT_TRAINS, SELF, switch_ed76_550_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ed76_550_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, ed76_550, 1972) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_AC;
  name: string(STR_NAME_ED76_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1991,1,1);
  speed: 110 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1900 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 84;
  reliability_decay: 20;
  model_life: 45;
  vehicle_life: 40;
  cost_factor: 56;
  length: 8;
  running_cost_factor: 57;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1071;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
						string(STR_DESC_POWER_AC20),
						string(STR_DESC_NARROWGAUGE),
						string(STR_DESC_USAGE_EP),
						string(STR_CONCAT_1C, 
							string(STR_SUFFIX_JRH)
							)
						);

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ed76_550_subtype_text;
  default: switch_ed76_550_livery;
  purchase: spriteset_ed76_550_jr_purchase;
  name: switch_ed76_550_name;
  }
}
spriteset(spriteset_ed500_jrf, "gfx/electric/ed500.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ed500_cc, "gfx/electric/ed500.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ed500_purchase, "gfx/electric/ed500.png") {
	template_purchase(1, 96)
}


switch(FEAT_TRAINS, SELF, switch_ed500_livery, cargo_subtype) {
	1: spriteset_ed500_cc;
	spriteset_ed500_jrf;
}

switch(FEAT_TRAINS, SELF, switch_ed500_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK),
									                  string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_PROTO)
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
}


item (FEAT_TRAINS, ed500, 1090) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_ED500);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1992,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.27;
  power: 4000 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 67;
  reliability_decay: 20;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 25;
  cost_factor: 99;
  length: 8;
  running_cost_factor: 95;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_PROTO),
                      string(STR_CONCAT_1C, 
                    string(STR_SUFFIX_JRF)
                    )
                  );

  cargo_capacity: return 0;
  default: switch_ed500_livery;
  cargo_subtype_text: switch_ed500_subtype_text;
  purchase: spriteset_ed500_purchase;
  }
}
spriteset(spriteset_ef30_proto_stripe, "gfx/electric/ef30.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef30_proto_silver, "gfx/electric/ef30.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef30_proto_cc, "gfx/electric/ef30.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef30_silver, "gfx/electric/ef30.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef30_cc, "gfx/electric/ef30.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef30_proto_purchase, "gfx/electric/ef30.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_ef30_purchase, "gfx/electric/ef30.png") {
	template_purchase(89, 192)
}

switch(FEAT_TRAINS, SELF, switch_ef30_livery, cargo_subtype) {
	1: spriteset_ef30_cc;
	spriteset_ef30_silver;
}

switch(FEAT_TRAINS, SELF, switch_ef30_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_SILVER)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, ef30, 1015) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_EF30);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1961,1,1);
  speed: 85 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1800 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 30;
  cost_factor: 40;
  length: 7;
  running_cost_factor: 64;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_GP),
                      string(STR_CONCAT_1C, 
                    string(STR_SUFFIX_JNR)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef30_subtype_text;
  default: switch_ef30_livery;
  purchase: spriteset_ef30_purchase;
  }
}

//prototype

switch(FEAT_TRAINS, SELF, switch_ef30_proto_livery, cargo_subtype) {
	1: spriteset_ef30_proto_silver;
  2: spriteset_ef30_proto_cc;
	spriteset_ef30_proto_stripe;
}

switch(FEAT_TRAINS, SELF, switch_ef30_proto_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_SILVER),
                                    string(STR_COLOUR_RED)
                                    )
                                 );
  1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_SILVER)
                                    )
                                 );
	2: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef30_p_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF30);
  } 
switch (FEAT_TRAINS, SELF, switch_ef30_p_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef30_p_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef30_proto, 1915) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_EF30_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1960,1,1);
  speed: 85 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1800 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 30;
  cost_factor: 40;
  length: 7;
  running_cost_factor: 64;
  running_cost_base: RUNNING_COST_ELECTRIC;
  variant_group: 1015;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_PROTO),
                      string(STR_CONCAT_1C, 
                    string(STR_SUFFIX_JNR)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef30_proto_subtype_text;
  default: switch_ef30_proto_livery;
  purchase: spriteset_ef30_proto_purchase;
  name: switch_ef30_p_name;
  }
}
spriteset(spriteset_ef70_old_red, "gfx/electric/ef70.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef70_old_cc, "gfx/electric/ef70.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef70_new_red, "gfx/electric/ef70.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef70_new_rainbow, "gfx/electric/ef70.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef70_new_express, "gfx/electric/ef70.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef70_new_cc, "gfx/electric/ef70.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef70_new_nyc, "gfx/electric/ef70.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ef70_new_prr, "gfx/electric/ef70.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_ef70_new_gnr, "gfx/electric/ef70.png") {
	template_2cc_std(180, 32)
}



spriteset(spriteset_ef70_old_purchase, "gfx/electric/ef70.png") {
	template_purchase(1, 224)
}

spriteset(spriteset_ef70_new_purchase, "gfx/electric/ef70.png") {
	template_purchase(89, 224)
}

//ef70 new

switch(FEAT_TRAINS, SELF, switch_ef70_new_livery, cargo_subtype) {
	1: spriteset_ef70_new_express;
	2: spriteset_ef70_new_rainbow;
  3: spriteset_ef70_new_nyc;
  4: spriteset_ef70_new_gnr;
  5: spriteset_ef70_new_prr;
	6: spriteset_ef70_new_cc;
	spriteset_ef70_new_red;
}


switch(FEAT_TRAINS, SELF, switch_ef70_new_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_SEMIFIC)
                                 );
	2: return string(STR_CONCAT_4, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									                  string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_RAINBOW), string(STR_SUFFIX_FICTION)
                                 );
  3: return string(STR_CONCAT_3, string(STR_SUFFIX_NYC), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_GNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_GREEN),
									                  string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_PRR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_GREEN)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
  4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef70_2_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF70);
  } 
switch (FEAT_TRAINS, SELF, switch_ef70_2_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef70_2_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef70_new, 1045) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_AC;
  name: string(STR_NAME_EF70_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1964,1,1);
  speed: 105 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2300 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 40;
  cost_factor: 56;
  length: 7;
  running_cost_factor: 88;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_AC20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_EF),
                      string(STR_CONCAT_1C, 
                    string(STR_SUFFIX_JNR)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef70_new_subtype_text;
  default: switch_ef70_new_livery;
  purchase: spriteset_ef70_new_purchase;
  name: switch_ef70_2_name;
  }
}

//ef70 old

switch(FEAT_TRAINS, SELF, switch_ef70_old_livery, cargo_subtype) {
	1: spriteset_ef70_old_cc;
	spriteset_ef70_old_red;
}


switch(FEAT_TRAINS, SELF, switch_ef70_old_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
  1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch (FEAT_TRAINS, SELF, switch_ef70_1_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF70);
  } 
switch (FEAT_TRAINS, SELF, switch_ef70_1_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef70_1_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef70_old, 1946) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_AC;
  name: string(STR_NAME_EF70_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1961,1,1);
  speed: 105 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2250 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 40;
  cost_factor: 54;
  length: 7;
  running_cost_factor: 87;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1045;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_AC20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_HF),
                      string(STR_CONCAT_1C, 
                    string(STR_SUFFIX_JNR)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef70_old_subtype_text;
  default: switch_ef70_old_livery;
  purchase: spriteset_ef70_old_purchase;
  name: switch_ef70_1_name;
  }
}
spriteset(spriteset_ef71_red, "gfx/electric/ef71.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef71_cc, "gfx/electric/ef71.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef71_jnr_purchase, "gfx/electric/ef71.png") {
	template_purchase(1, 96)
}

spriteset(spriteset_ef71_jr_purchase, "gfx/electric/ef71.png") {
	template_purchase(89, 96)
}

//ef71 new

switch(FEAT_TRAINS, SELF, switch_ef71_livery, cargo_subtype) {
	1: spriteset_ef71_cc;
	spriteset_ef71_red;
}

switch(FEAT_TRAINS, SELF, switch_ef71_yeardep_purchase, current_year) {
	0..1987: spriteset_ef71_jnr_purchase;
    spriteset_ef71_jr_purchase;
}


switch(FEAT_TRAINS, SELF, switch_ef71_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
  1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, ef71, 1047) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_AC;
  name: string(STR_NAME_EF71);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1968,1,1);
  speed: 100 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2700 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 40;
  cost_factor: 81;
  length: 8;
  running_cost_factor: 90;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_AC20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_EF),
                      string(STR_CONCAT_2C, 
                    string(STR_SUFFIX_JNR),
                    string(STR_SUFFIX_JRE)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef71_subtype_text;
  default: switch_ef71_livery;
  purchase: switch_ef71_yeardep_purchase;
  }
}

spriteset(spriteset_ef80_old_red, "gfx/electric/ef80.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef80_new_red, "gfx/electric/ef80.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef80_cc, "gfx/electric/ef80.png") {
	template_2cc_std(1, 64)
}



spriteset(spriteset_ef80_purchase, "gfx/electric/ef80.png") {
	template_purchase(1, 128)
}



switch(FEAT_TRAINS, SELF, switch_ef80_yeardep_livery, build_year) {
	0..1980: spriteset_ef80_old_red;
    spriteset_ef80_new_red;
}


switch(FEAT_TRAINS, SELF, switch_ef80_livery, cargo_subtype) {
	1: spriteset_ef80_old_red;
	2: spriteset_ef80_new_red;
	3: spriteset_ef80_cc;
	switch_ef80_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_ef80_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_PINK)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JRW), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_FICTION)
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}




item (FEAT_TRAINS, ef80, 1080) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_EF80);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1962,1,1);
  speed: 110 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 1950 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 40;
  cost_factor: 62;
  length: 7;
  running_cost_factor: 85;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_EF),
                      string(STR_CONCAT_1C, 
                    string(STR_SUFFIX_JNR)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef80_subtype_text;
  default: switch_ef80_livery;
  purchase: spriteset_ef80_purchase;
  }
}
//ef81 0

spriteset(spriteset_ef81_pink, "gfx/electric/ef81.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef81_red, "gfx/electric/ef81.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef81_rainbow, "gfx/electric/ef81.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef81_twilight, "gfx/electric/ef81.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ef81_cassiopeia, "gfx/electric/ef81.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef81_hokutosei, "gfx/electric/ef81.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef81_pinkstripe, "gfx/electric/ef81.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_ef81_jrf_pink, "gfx/electric/ef81.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_ef81_jrf_red, "gfx/electric/ef81.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_ef81_jrf_twotone, "gfx/electric/ef81.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_ef81_jrf_blue, "gfx/electric/ef81.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_ef81_jrf_bluestripe, "gfx/electric/ef81.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_ef81_cc, "gfx/electric/ef81.png") {
	template_2cc_std(180, 256)
}

spriteset(spriteset_ef81_jnr_purchase, "gfx/electric/ef81.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_ef81_jrf_purchase, "gfx/electric/ef81.png") {
	template_purchase(1, 320)
}

spriteset(spriteset_ef81_jr_purchase, "gfx/electric/ef81.png") {
	template_purchase(180, 288)
}

//ef81 300

spriteset(spriteset_ef81_300, "gfx/electric/ef81.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ef81_300_whiskers, "gfx/electric/ef81.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_ef81_300_cc, "gfx/electric/ef81.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_ef81_300_jnr_purchase, "gfx/electric/ef81.png") {
	template_purchase(89, 288)
}

spriteset(spriteset_ef81_300_jrf_purchase, "gfx/electric/ef81.png") {
	template_purchase(89, 320)
}

//ef81 450

spriteset(spriteset_ef81_450, "gfx/electric/ef81.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_ef81_450_cc, "gfx/electric/ef81.png") {
	template_2cc_std(180, 224)
}


spriteset(spriteset_ef81_450_jrf_purchase, "gfx/electric/ef81.png") {
	template_purchase(180, 320)
}


//ef81 0


switch(FEAT_TRAINS, SELF, switch_ef81_yeardep_livery, build_year) {
	1990..2000: spriteset_ef81_pinkstripe;
	2000..9999: spriteset_ef81_red;
    spriteset_ef81_pink;
}

switch(FEAT_TRAINS, SELF, switch_ef81_yeardep_purchase, current_year) {
	1987..2000: spriteset_ef81_jrf_purchase;
	2000..9999: spriteset_ef81_jr_purchase;
    spriteset_ef81_jnr_purchase;
}


switch(FEAT_TRAINS, SELF, switch_ef81_livery, cargo_subtype) {

	1: spriteset_ef81_pink;
	2: spriteset_ef81_red;
	3: spriteset_ef81_rainbow;
	4: spriteset_ef81_twilight;
	5: spriteset_ef81_cassiopeia;
	6: spriteset_ef81_hokutosei;
	7: spriteset_ef81_pinkstripe;
	8: spriteset_ef81_jrf_pink;
	9: spriteset_ef81_jrf_red;
	10: spriteset_ef81_jrf_twotone;
	11: spriteset_ef81_jrf_blue;
	12: spriteset_ef81_cc;
	
	switch_ef81_yeardep_livery;
	}
	
switch(FEAT_TRAINS, SELF, switch_ef81_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_PINK)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									                  string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_RAINBOW)
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRW), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_GREEN), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_TWILIGHT)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_4F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_CASSIOPEIA)
                                 );
	6: return string(STR_CONCAT_3, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_SILVER)
                                    ), string(STR_SUFFIX_HOKUTOSEI)
                                 );
	7: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_PINK),
									                  string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_STRIPE)
                                 );
	8: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_PINK),
									                  string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_WHISKERS)
                                 );
	9: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									                  string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_REFURB)
                                 );
	10: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
	11: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	12: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef81_0_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF81);
  } 
switch (FEAT_TRAINS, SELF, switch_ef81_0_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef81_0_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef81, 1255) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_EF81_0);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1968,1,1);
  speed: 110 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 19;
  model_life: 40;
  vehicle_life: 40;
  length: 8;
  cost_factor: 82;
  running_cost_factor: 90;
  running_cost_base: RUNNING_COST_ELECTRIC;
//  misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_EF),
                      string(STR_CONCAT_5C, 
						string(STR_SUFFIX_JNR),
						string(STR_SUFFIX_JRF),
						string(STR_SUFFIX_JRE),
						string(STR_SUFFIX_JRW),
						string(STR_SUFFIX_JRK)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef81_subtype_text;
  default: switch_ef81_livery;
  purchase: switch_ef81_yeardep_purchase;
  name: switch_ef81_0_name;
  }
}

//ef81 300

random_switch(FEAT_TRAINS, SELF, switch_ef81_300_whiskers) {
	1: spriteset_ef81_300;
    1: spriteset_ef81_300_whiskers;
}


switch(FEAT_TRAINS, SELF, switch_ef81_300_yeardep_livery, build_year) {
	1990..2000: switch_ef81_300_whiskers;
    spriteset_ef81_300;
}

switch(FEAT_TRAINS, SELF, switch_ef81_300_yeardep_purchase, current_year) {
	0..1987: spriteset_ef81_300_jnr_purchase;
    spriteset_ef81_300_jrf_purchase;
}


switch(FEAT_TRAINS, SELF, switch_ef81_300_livery, cargo_subtype) {

	1: spriteset_ef81_300;
	2: spriteset_ef81_300_whiskers;
	3: spriteset_ef81_pink;
	4: spriteset_ef81_jrf_pink;
	5: spriteset_ef81_300_cc;
	switch_ef81_300_yeardep_livery;
	}
	
switch(FEAT_TRAINS, SELF, switch_ef81_300_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_SILVER)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_SILVER),
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_WHISKERS)
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_PINK)
                                    )
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_PINK)
                                    ), string(STR_SUFFIX_REFURB)
                                 );
	5: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef81_300_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF81);
  } 
switch (FEAT_TRAINS, SELF, switch_ef81_300_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef81_300_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef81_300, 1083) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_EF81_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1973,1,1);
  speed: 110 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 19;
  model_life: 40;
  vehicle_life: 40;
  length: 8;
  cost_factor: 52;
  running_cost_factor: 90;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1255;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_EF),
                      string(STR_CONCAT_2C, 
                    	string(STR_SUFFIX_JNR),
						string(STR_SUFFIX_JRF)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef81_300_subtype_text;
  default: switch_ef81_300_livery;
  purchase: switch_ef81_300_yeardep_purchase;
  name: switch_ef81_300_name;
  }
}


//ef81 450


switch(FEAT_TRAINS, SELF, switch_ef81_450_livery, cargo_subtype) {
	0: spriteset_ef81_450;
  1: spriteset_ef81_jrf_bluestripe;
	2: spriteset_ef81_450_cc;
	}
	
switch(FEAT_TRAINS, SELF, switch_ef81_450_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_LIGHTS)
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	2: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef81_450_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF81);
  } 
switch (FEAT_TRAINS, SELF, switch_ef81_450_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef81_450_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, ef81_450, 1983) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_EF81_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1991,1,1);
  speed: 110 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 2550 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 19;
  model_life: 40;
  vehicle_life: 40;
  length: 8;
  cost_factor: 52;
  running_cost_factor: 90;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1255;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_HF),
                    	string(STR_CONCAT_1C, 
                        string(STR_SUFFIX_JRF)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef81_450_subtype_text;
  default: switch_ef81_450_livery;
  purchase: spriteset_ef81_450_jrf_purchase;
  name: switch_ef81_450_name;
  }
}
spriteset(spriteset_ef500_jrf, "gfx/electric/ef500.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef500_cc, "gfx/electric/ef500.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef500_purchase, "gfx/electric/ef500.png") {
	template_purchase(1, 96)
}

switch(FEAT_TRAINS, SELF, switch_ef500_livery, cargo_subtype) {
	1: spriteset_ef500_cc;
	spriteset_ef500_jrf;
}

switch(FEAT_TRAINS, SELF, switch_ef500_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_WHITE),
									                  string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_INVERTER)
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
}


item (FEAT_TRAINS, ef500, 1085) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_EF500);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1990,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 6000 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 20;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 25;
  cost_factor: 110;
  length: 8;
  running_cost_factor: 110;
  running_cost_base: RUNNING_COST_ELECTRIC;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_PROTO),
                      string(STR_CONCAT_1C, 
                        string(STR_SUFFIX_JRF)
                    )
                  );

  cargo_capacity: return 0;
  default: switch_ef500_livery;
  cargo_subtype_text: switch_ef500_subtype_text;
  purchase: spriteset_ef500_purchase;
  }
}
//ef510 0

spriteset(spriteset_ef510_0_proto, "gfx/electric/ef510.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ef510_0_red, "gfx/electric/ef510.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ef510_0_nologo, "gfx/electric/ef510.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ef510_0_cc, "gfx/electric/ef510.png") {
	template_2cc_std(1, 96)
}


spriteset(spriteset_ef510_0_proto_purchase, "gfx/electric/ef510.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_ef510_0_jrf_purchase, "gfx/electric/ef510.png") {
	template_purchase(1, 384)
}

spriteset(spriteset_ef510_0_jr_purchase, "gfx/electric/ef510.png") {
	template_purchase(89, 384)
}

//ef510 500

spriteset(spriteset_ef510_500_hokutosei, "gfx/electric/ef510.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_ef510_500_cassiopeia, "gfx/electric/ef510.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ef510_500_blue, "gfx/electric/ef510.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ef510_500_silver, "gfx/electric/ef510.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_ef510_500_cc, "gfx/electric/ef510.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_ef510_500_jre_purchase, "gfx/electric/ef510.png") {
	template_purchase(89, 352)
}

spriteset(spriteset_ef510_500_jr_purchase, "gfx/electric/ef510.png") {
	template_purchase(180, 352)
}

//ef510 300

spriteset(spriteset_ef510_300_silver, "gfx/electric/ef510.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_ef510_300_cc, "gfx/electric/ef510.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_ef510_300_jr_purchase, "gfx/electric/ef510.png") {
	template_purchase(180, 384)
}

//ef510 0

switch(FEAT_TRAINS, SELF, switch_ef510_0_purchase, current_year) {
	0..2002: spriteset_ef510_0_proto_purchase;
	2002..2018: spriteset_ef510_0_jrf_purchase;
	spriteset_ef510_0_jr_purchase;
	}


switch(FEAT_TRAINS, SELF, switch_ef510_0_yeardep_livery, build_year) {
	0..2004: spriteset_ef510_0_proto;
	2004..2018: spriteset_ef510_0_red;
	spriteset_ef510_0_nologo;
}

switch(FEAT_TRAINS, SELF, switch_ef510_0_livery, cargo_subtype) {
	1: spriteset_ef510_0_proto;
	2: spriteset_ef510_0_red;
	3: spriteset_ef510_0_nologo;	
	4: spriteset_ef510_0_cc;
	switch_ef510_0_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ef510_0_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									                  string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_PROTO)
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									                  string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_REDTHUNDER)
                                 );
	3: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									                  string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_REDTHUNDER), string(STR_SUFFIX_NOLOGO)
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef510_0_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF510);
  } 
switch (FEAT_TRAINS, SELF, switch_ef510_0_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef510_0_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, ef510_0, 1086) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_EF510_0);
  climates_available: ALL_CLIMATES;
  introduction_date: date(2001,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 3390 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 16;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 40;
  length: 8;
  cost_factor: 97;
  running_cost_factor: 94;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_HF),
                      string(STR_CONCAT_1C, 
                        string(STR_SUFFIX_JRF)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef510_0_subtype_text;
  default: switch_ef510_0_livery;
  purchase: switch_ef510_0_purchase;
  name: switch_ef510_0_name;
  }
}


//ef510 500

switch(FEAT_TRAINS, SELF, switch_ef510_500_purchase, current_year) {
	0..2018: spriteset_ef510_500_jre_purchase;
	spriteset_ef510_500_jr_purchase;
	}


switch(FEAT_TRAINS, SELF, switch_ef510_500_yeardep_livery, build_year) {
	0..2018: spriteset_ef510_500_hokutosei;
	spriteset_ef510_500_blue;
}

switch(FEAT_TRAINS, SELF, switch_ef510_500_livery, cargo_subtype) {
	1: spriteset_ef510_500_hokutosei;
	2: spriteset_ef510_500_cassiopeia;
	3: spriteset_ef510_500_blue;	
	4: spriteset_ef510_500_silver;	
	5: spriteset_ef510_500_cc;
	switch_ef510_500_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_ef510_500_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_HOKUTOSEI)
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_SILVER)
                                    ), string(STR_SUFFIX_CASSIOPEIA)
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GOLD)
                                    )
                                 );
	4: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_SILVER)
                                    )
                                 );
	5: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef510_500_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF510);
  } 
switch (FEAT_TRAINS, SELF, switch_ef510_500_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef510_500_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, ef510_500, 1087) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_EF510_5);
  climates_available: ALL_CLIMATES;
  introduction_date: date(2009,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 3390 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 16;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 40;
  length: 8;
  cost_factor: 97;
  running_cost_factor: 94;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1086;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_EF),
                      string(STR_CONCAT_2C, 
                        string(STR_SUFFIX_JRF),
						string(STR_SUFFIX_JRE)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef510_500_subtype_text;
  default: switch_ef510_500_livery;
  purchase: switch_ef510_500_purchase;
  name: switch_ef510_500_name;
  }
}



//ef510 300



switch(FEAT_TRAINS, SELF, switch_ef510_300_livery, cargo_subtype) {
	1: spriteset_ef510_300_cc;
	spriteset_ef510_300_silver;
}


switch(FEAT_TRAINS, SELF, switch_ef510_300_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_SILVER),
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_ef510_300_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EF510);
  } 
switch (FEAT_TRAINS, SELF, switch_ef510_300_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_ef510_300_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, ef510_300, 1987) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_ACDC;
  name: string(STR_NAME_EF510_3);
  climates_available: ALL_CLIMATES;
  introduction_date: date(2021,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 3390 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_ELECTRIC;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 100;
  reliability_decay: 16;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 40;
  length: 8;
  cost_factor: 97;
  running_cost_factor: 94;
  running_cost_base: RUNNING_COST_ELECTRIC;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1086;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_HF),
                      string(STR_CONCAT_1C, 
                        string(STR_SUFFIX_JRF)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_ef510_300_subtype_text;
  default: switch_ef510_300_livery;
  purchase: spriteset_ef510_300_jr_purchase;
  name: switch_ef510_300_name;
  }
}
//proto

spriteset(spriteset_eh500_proto_front, "gfx/electric/eh500.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_eh500_proto_rear, "gfx/electric/eh500.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_eh500_proto_kintaro_front, "gfx/electric/eh500.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_eh500_proto_kintaro_rear, "gfx/electric/eh500.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_eh500_proto_cc_front, "gfx/electric/eh500.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_eh500_proto_cc_rear, "gfx/electric/eh500.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_eh500_proto_purchase, "gfx/electric/eh500.png") {
	template_purchase(1, 320)
}

spriteset(spriteset_eh500_proto_kintaro_purchase, "gfx/electric/eh500.png") {
	template_purchase(1, 352)
}

//old

spriteset(spriteset_eh500_old_low_front, "gfx/electric/eh500.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_eh500_old_low_rear, "gfx/electric/eh500.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_eh500_old_low_kintaro_front, "gfx/electric/eh500.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_eh500_old_low_kintaro_rear, "gfx/electric/eh500.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_eh500_old_high_kintaro_front, "gfx/electric/eh500.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_eh500_old_high_kintaro_rear, "gfx/electric/eh500.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_eh500_old_cc_front, "gfx/electric/eh500.png") {
	template_2cc_std(180, 256)
}

spriteset(spriteset_eh500_old_cc_rear, "gfx/electric/eh500.png") {
	template_2cc_std(180, 288)
}

spriteset(spriteset_eh500_old_purchase, "gfx/electric/eh500.png") {
	template_purchase(89, 320)
}

spriteset(spriteset_eh500_old_kintaro_purchase, "gfx/electric/eh500.png") {
	template_purchase(89, 352)
}

//new

spriteset(spriteset_eh500_new_front, "gfx/electric/eh500.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_eh500_new_rear, "gfx/electric/eh500.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_eh500_new_nologo_front, "gfx/electric/eh500.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_eh500_new_nologo_rear, "gfx/electric/eh500.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_eh500_new_cc_front, "gfx/electric/eh500.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_eh500_new_cc_rear, "gfx/electric/eh500.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_eh500_new_jrf_purchase, "gfx/electric/eh500.png") {
	template_purchase(180, 320)
}

spriteset(spriteset_eh500_new_jr_purchase, "gfx/electric/eh500.png") {
	template_purchase(180, 352)
}


//new type

switch(FEAT_TRAINS, SELF, switch_eh500_new_front_yeardep, build_year) {
	0..2018: spriteset_eh500_new_front;
	spriteset_eh500_new_nologo_front;
}

switch(FEAT_TRAINS, SELF, switch_eh500_new_rear_yeardep, build_year) {
	0..2018: spriteset_eh500_new_rear;
	spriteset_eh500_new_nologo_rear;
}


switch(FEAT_TRAINS, SELF, switch_eh500_new_front_livery, cargo_subtype) {
	1: spriteset_eh500_new_front;
	2: spriteset_eh500_new_nologo_front;
	3: spriteset_eh500_new_cc_front;
	switch_eh500_new_front_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_eh500_new_rear_livery, cargo_subtype) {
	1: spriteset_eh500_new_rear;
	2: spriteset_eh500_new_nologo_rear;
	3: spriteset_eh500_new_cc_rear;
	switch_eh500_new_rear_yeardep;
}


switch(FEAT_TRAINS, SELF, switch_eh500_new_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_KINTARO)
                                 );
	2: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_KINTARO), string(STR_SUFFIX_NOLOGO)
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_eh500_new_purchase, current_year) {
	0..2018: spriteset_eh500_new_jrf_purchase;
	spriteset_eh500_new_jr_purchase;
	}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_eh500_new_articulated_part, extra_callback_info1) {
	1: return eh500_new_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


switch (FEAT_TRAINS, SELF, switch_eh500_2_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EH500);
  } 
switch (FEAT_TRAINS, SELF, switch_eh500_2_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_eh500_2_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, eh500_new, 1098) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_ACDC;
	name: string(STR_NAME_EH500_2);
	climates_available: ALL_CLIMATES;
	introduction_date: date(2002,1,1);
	speed: 120 km/h;
	air_drag_coefficient: 0;
	tractive_effort_coefficient:    0.25;
	power: 4000 kW;
	dual_headed: 0;
	engine_class: ENGINE_CLASS_ELECTRIC;
	cargo_capacity: 1;
	cargo_allow_refit: [PASS];
	weight: 134;
	reliability_decay: 16;
	model_life: 40;
	vehicle_life: 50;
	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	length: 6;
	cost_factor: 103;
	running_cost_factor: 106;
	running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_HF),
                      string(STR_CONCAT_1C, 
                        string(STR_SUFFIX_JRF)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_eh500_new_subtype_text;
  default: switch_eh500_new_front_livery;
  purchase: switch_eh500_new_purchase;
  articulated_part: switch_eh500_new_articulated_part;
  name: switch_eh500_2_name;
  }
}


item (FEAT_TRAINS, eh500_new_rear, 1998) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_EH500_P);
		climates_available: NO_CLIMATE;
		introduction_date: date(1950,1,1);
		engine_class: ENGINE_CLASS_ELECTRIC;
		power: 1 kW;
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 6;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		power: return 0;
		cargo_capacity: return 0;
		default: switch_eh500_new_rear_livery;
	}
}


//old type 

switch(FEAT_TRAINS, SELF, switch_eh500_old_front_yeardep, build_year) {
	0..2002: spriteset_eh500_old_low_front;
	spriteset_eh500_old_high_kintaro_front;
}

switch(FEAT_TRAINS, SELF, switch_eh500_old_rear_yeardep, build_year) {
	0..2002: spriteset_eh500_old_low_rear;
	spriteset_eh500_old_high_kintaro_rear;
}


switch(FEAT_TRAINS, SELF, switch_eh500_old_front_livery, cargo_subtype) {
	1: spriteset_eh500_old_low_front;
	2: spriteset_eh500_old_low_kintaro_front;
	3: spriteset_eh500_old_high_kintaro_front;
	4: spriteset_eh500_old_cc_front;
	switch_eh500_old_front_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_eh500_old_rear_livery, cargo_subtype) {
	1: spriteset_eh500_old_low_rear;
	2: spriteset_eh500_old_low_kintaro_rear;
	3: spriteset_eh500_old_high_kintaro_rear;
	4: spriteset_eh500_old_cc_rear;
	switch_eh500_old_rear_yeardep;
}


switch(FEAT_TRAINS, SELF, switch_eh500_old_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_GREY)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_KINTARO)
                                 );
	3: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_KINTARO), string(STR_SUFFIX_LIGHTS)
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_eh500_old_purchase, current_year) {
	0..2002: spriteset_eh500_old_purchase;
	spriteset_eh500_old_kintaro_purchase;
	}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_eh500_old_articulated_part, extra_callback_info1) {
	1: return eh500_old_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


switch (FEAT_TRAINS, SELF, switch_eh500_1_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EH500);
  } 
switch (FEAT_TRAINS, SELF, switch_eh500_1_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_eh500_1_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, eh500_old, 1267) {

property {
    sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_ACDC;
	name: string(STR_NAME_EH500_1);
	climates_available: ALL_CLIMATES;
	introduction_date: date(2000,1,1);
	speed: 120 km/h;
	air_drag_coefficient: 0;
	tractive_effort_coefficient:    0.25;
	power: 4000 kW;
	dual_headed: 0;
	engine_class: ENGINE_CLASS_ELECTRIC;
	cargo_capacity: 1;
	cargo_allow_refit: [PASS];
	weight: 134;
	reliability_decay: 16;
	model_life: 40;
	vehicle_life: 50;
	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	length: 6;
	cost_factor: 103;
	running_cost_factor: 106;
	running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	variant_group: 1098;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_HF),
                      string(STR_CONCAT_1C, 
                        string(STR_SUFFIX_JRF)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_eh500_old_subtype_text;
  default: switch_eh500_old_front_livery;
  purchase: switch_eh500_old_purchase;
  articulated_part: switch_eh500_old_articulated_part;
  name: switch_eh500_1_name;
  }
}


item (FEAT_TRAINS, eh500_old_rear, 1067) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_EH500_P);
		climates_available: NO_CLIMATE;
		introduction_date: date(1950,1,1);
		engine_class: ENGINE_CLASS_ELECTRIC;
		power: 1 kW;
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 6;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		power: return 0;
		cargo_capacity: return 0;
		default: switch_eh500_old_rear_livery;
	}
}

//prototype



switch(FEAT_TRAINS, SELF, switch_eh500_proto_front_yeardep, build_year) {
	0..2002: spriteset_eh500_proto_front;
	spriteset_eh500_proto_kintaro_front;
}

switch(FEAT_TRAINS, SELF, switch_eh500_proto_rear_yeardep, build_year) {
	0..2002: spriteset_eh500_proto_rear;
	spriteset_eh500_proto_kintaro_rear;
}


switch(FEAT_TRAINS, SELF, switch_eh500_proto_front_livery, cargo_subtype) {
	1: spriteset_eh500_proto_front;
	2: spriteset_eh500_proto_kintaro_front;
	3: spriteset_eh500_proto_cc_front;
	switch_eh500_proto_front_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_eh500_proto_rear_livery, cargo_subtype) {
	1: spriteset_eh500_proto_rear;
	2: spriteset_eh500_proto_kintaro_rear;
	3: spriteset_eh500_proto_cc_rear;
	switch_eh500_proto_rear_yeardep;
}


switch(FEAT_TRAINS, SELF, switch_eh500_proto_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_GREY)
                                    )
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_KINTARO)
                                 );
	3: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_eh500_proto_purchase, current_year) {
	0..2002: spriteset_eh500_proto_purchase;
	spriteset_eh500_proto_kintaro_purchase;
	}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_eh500_proto_articulated_part, extra_callback_info1) {
	1: return eh500_proto_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


switch (FEAT_TRAINS, SELF, switch_eh500_p_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_EH500);
  } 
switch (FEAT_TRAINS, SELF, switch_eh500_p_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_eh500_p_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }



item (FEAT_TRAINS, eh500_proto, 1097) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_ACDC;
	name: string(STR_NAME_EH500_P);
	climates_available: ALL_CLIMATES;
	introduction_date: date(1997,1,1);
	speed: 120 km/h;
	air_drag_coefficient: 0;
	tractive_effort_coefficient:    0.25;
	power: 4000 kW;
	dual_headed: 0;
	engine_class: ENGINE_CLASS_ELECTRIC;
	cargo_capacity: 1;
	cargo_allow_refit: [PASS];
	weight: 134;
	reliability_decay: 16;
	model_life: 40;
	vehicle_life: 50;
	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	length: 6;
	cost_factor: 103;
	running_cost_factor: 106;
	running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	variant_group: 1098;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS20),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_HF),
                      string(STR_CONCAT_1C, 
                        string(STR_SUFFIX_JRF)
                    )
                  );

  cargo_capacity: return 0;
  cargo_subtype_text: switch_eh500_proto_subtype_text;
  default: switch_eh500_proto_front_livery;
  purchase: switch_eh500_proto_purchase;
  articulated_part: switch_eh500_proto_articulated_part;
  name: switch_eh500_p_name;
  }
}


item (FEAT_TRAINS, eh500_proto_rear, 1997) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_EH500_P);
		climates_available: NO_CLIMATE;
		introduction_date: date(1950,1,1);
		engine_class: ENGINE_CLASS_ELECTRIC;
		power: 1 kW;
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 6;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		power: return 0;
		cargo_capacity: return 0;
		default: switch_eh500_proto_rear_livery;
	}
}
spriteset(spriteset_eh800_red_front, "gfx/electric/eh800.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_eh800_red_rear, "gfx/electric/eh800.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_eh800_cc_front, "gfx/electric/eh800.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_eh800_cc_rear, "gfx/electric/eh800.png") {
	template_2cc_std(1, 96)
}


spriteset(spriteset_eh800_jrf_purchase, "gfx/electric/eh800.png") {
	template_purchase(1, 128)
}

spriteset(spriteset_eh800_jr_purchase, "gfx/electric/eh800.png") {
	template_purchase(89, 128)
}



switch(FEAT_TRAINS, SELF, switch_eh800_livery, cargo_subtype) {
	1: spriteset_eh800_cc_front;
	spriteset_eh800_red_front;
}

switch(FEAT_TRAINS, SELF, switch_eh800_livery_rear, cargo_subtype) {
	1: spriteset_eh800_cc_rear;
	spriteset_eh800_red_rear;
}


switch(FEAT_TRAINS, SELF, switch_eh800_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED),
									string(STR_COLOUR_SILVER)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_eh800_articulated_part, extra_callback_info1) {
	1: return eh800_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


switch(FEAT_TRAINS, SELF, switch_eh800_purchase, current_year) {
	2018..9999: spriteset_eh800_jr_purchase;
	spriteset_eh800_jrf_purchase;
	}
	

item (FEAT_TRAINS, eh800, 1095) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_AC;
	name: string(STR_NAME_EH800);
	climates_available: ALL_CLIMATES;
	introduction_date: date(2012,1,1);
	speed: 140 km/h;
	air_drag_coefficient: 0;
	tractive_effort_coefficient:    0.25;
	power: 4000 kW;
	dual_headed: 0;
	engine_class: ENGINE_CLASS_ELECTRIC;
	cargo_capacity: 1;
	cargo_allow_refit: [PASS];
	weight: 134;
	reliability_decay: 20;
	model_life: 40;
	vehicle_life: 60;
	cost_factor: 105;
	length: 6;
	running_cost_factor: 115;
	running_cost_base: RUNNING_COST_ELECTRIC;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                      string(STR_DESC_POWER_MS25),
                      string(STR_DESC_NARROWGAUGE),
                      string(STR_DESC_USAGE_EF),
                      string(STR_CONCAT_1C, 
                        string(STR_SUFFIX_JRF)
                    )
                  );

	cargo_capacity: return 0;
	cargo_subtype_text: switch_eh800_subtype_text;
	default: switch_eh800_livery;
	purchase: switch_eh800_purchase;
	articulated_part: switch_eh800_articulated_part;
	}
}


item (FEAT_TRAINS, eh800_rear, 1096) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
//		name: string(STR_NAME_eh800);
		climates_available: NO_CLIMATE;
		introduction_date: date(1950,1,1);
		engine_class: ENGINE_CLASS_ELECTRIC;
		power: 1 kW;
		cargo_capacity: 1; 
		cargo_allow_refit: [PASS];
		length: 6;
		visual_effect_and_powered: (VISUAL_EFFECT_ELECTRIC);
		misc_flags: bitmask(TRAIN_FLAG_2CC);
	}
	graphics {
		power: return 0;
		cargo_capacity: return 0;
		default: switch_eh800_livery_rear;
	}
}

spriteset(spriteset_dd11_red, "gfx/diesel/dd11.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_dd11_brown_yellow, "gfx/diesel/dd11.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_dd11_brown_white, "gfx/diesel/dd11.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_dd11_yellow, "gfx/diesel/dd11.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_dd11_green, "gfx/diesel/dd11.png") {
	template_2cc_std(1, 128)
}

//fix 32bpp the old fashioned way because I couldn't find documentation for the new way
alternative_sprites(spriteset_dd11_green, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/diesel/32bpp/dd11.png") {
	template_2cc_std(1, 128)
}


spriteset(spriteset_dd11_blue, "gfx/diesel/dd11.png") {
	template_2cc_std(1, 160)
}



spriteset(spriteset_dd11_cc, "gfx/diesel/dd11.png") {
	template_2cc_std(1, 320)
}


spriteset(spriteset_dd11_brown_purchase, "gfx/diesel/dd11.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_dd11_red_purchase, "gfx/diesel/dd11.png") {
	template_purchase(89, 352)
}


switch(FEAT_TRAINS, SELF, switch_dd11_yeardep_livery, build_year) {
	0..1967: spriteset_dd11_brown_yellow;
    spriteset_dd11_red;
}




switch(FEAT_TRAINS, SELF, switch_dd11_livery, cargo_subtype) {
	1: spriteset_dd11_red;	
  2: spriteset_dd11_brown_yellow;	
  3: spriteset_dd11_brown_white;	
  4: spriteset_dd11_yellow;	
  5: spriteset_dd11_green;	
  6: spriteset_dd11_blue;	
  7: spriteset_dd11_cc;	
	switch_dd11_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_dd11_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	4: return string(STR_CONCAT_2, string(STR_SUFFIX_NIPPON), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_YELLOW), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	5: return string(STR_CONCAT_2, string(STR_SUFFIX_ASAHIKAWA), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTGREEN), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	6: return string(STR_CONCAT_2, string(STR_SUFFIX_SUMITOMO), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_ORANGE)
                                    )
                                 );
	7: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, dd11, 1203) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_DD11);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1954,1,1);
  speed: 53 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 240 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  weight: 34;
  model_life: 30;
  vehicle_life: 35;
  length: 5;
	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	reliability_decay: 13;
    cost_factor: 28;
	running_cost_factor: 20;
    running_cost_base: RUNNING_COST_DIESEL;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_SH),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_PRIVATE)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_dd11_subtype_text;
  default: switch_dd11_livery;
  purchase: spriteset_dd11_red_purchase;
//  reverse_build_probability: return 50;
  }
}
spriteset(spriteset_dd13_old_jnr_red, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_dd13_old_jnr_brown_yellow, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_dd13_old_cc, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_dd13_old_asahikawa, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_dd13_old_nagoya_rinkai, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_dd13_old_niigata_rinkai, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_dd13_old_ohmi, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_dd13_old_okayama_rinko, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_dd13_old_naebo, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_dd13_old_tamoura, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 288)
}



spriteset(spriteset_dd13_old_brown_purchase, "gfx/diesel/dd13.png") {
	template_purchase(1, 512)
}

spriteset(spriteset_dd13_old_red_purchase, "gfx/diesel/dd13.png") {
	template_purchase(89, 512)
}


switch(FEAT_TRAINS, SELF, switch_dd13_old_yeardep_livery, build_year) {
	0..1965: spriteset_dd13_old_jnr_brown_yellow;
    spriteset_dd13_old_jnr_red;
}


switch(FEAT_TRAINS, SELF, switch_dd13_old_livery, cargo_subtype) {
	1: spriteset_dd13_old_jnr_red;
	2: spriteset_dd13_old_jnr_brown_yellow;
	3: spriteset_dd13_old_naebo;
	4: spriteset_dd13_old_asahikawa;
	5: spriteset_dd13_old_nagoya_rinkai;
	6: spriteset_dd13_old_niigata_rinkai;
	7: spriteset_dd13_old_ohmi;
	8: spriteset_dd13_old_okayama_rinko;
   9: spriteset_dd13_old_tamoura;
	10: spriteset_dd13_old_cc;
	switch_dd13_old_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_dd13_old_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
   3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_GREEN)
                                    ), string(STR_SUFFIX_NAEBO)
                                 );
	4: return string(STR_CONCAT_2, string(STR_SUFFIX_ASAHIKAWA), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTGREEN), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	5: return string(STR_CONCAT_2, string(STR_SUFFIX_NAGOYA_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	6: return string(STR_CONCAT_2, string(STR_SUFFIX_NIIGATA_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	7: return string(STR_CONCAT_2, string(STR_SUFFIX_OHMI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTGREEN), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	8: return string(STR_CONCAT_2, string(STR_SUFFIX_OKAYAMA_RINKO), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_LTBLUE)
                                    )
                                 );
	9: return string(STR_CONCAT_2, string(STR_SUFFIX_TAMOURA), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_GREEN),
                                    string(STR_COLOUR_GREY)
                                    )
                                 );

	10: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_dd13_old_yeardep_purchase, current_year) {
	0..1965: spriteset_dd13_old_brown_purchase;
    spriteset_dd13_old_red_purchase;
}

switch (FEAT_TRAINS, SELF, switch_dd13_old_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_DD13);
  } 
switch (FEAT_TRAINS, SELF, switch_dd13_old_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_dd13_old_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, dd13_old, 1207) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_DD13_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1958,1,1);
  speed: 70 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.25;
  power: 552 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 56;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 55;
  cost_factor: 18;
  length: 6;
  running_cost_factor: 80;
  running_cost_base: RUNNING_COST_DIESEL;
//  misc_flags: bitmask(TRAIN_FLAG_2CC);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_LF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
						   string(STR_SUFFIX_PRIVATE)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_dd13_old_subtype_text;
  default: switch_dd13_old_livery;
  purchase: switch_dd13_old_yeardep_purchase;
  name: switch_dd13_old_name;
  }
}


spriteset(spriteset_dd13_new_jnr_red, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_dd13_new_jnr_brown, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_dd13_new_cc, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_dd13_new_akita, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_dd13_new_nagoya_rinkai, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_dd13_new_tomakomai, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_dd13_new_kashima_black, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_dd13_new_kashima_red, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_dd13_new_kosaka, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 256)
}

spriteset(spriteset_dd13_new_kamioka_white, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 288)
}

spriteset(spriteset_dd13_new_kamioka_brown, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 320)
}

spriteset(spriteset_dd13_new_hachinohe, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 352)
}

spriteset(spriteset_dd13_new_keiyo_blue, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 384)
}

spriteset(spriteset_dd13_new_keiyo_red, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 416)
}

spriteset(spriteset_dd13_new_sendai_yellow, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 448)
}

spriteset(spriteset_dd13_new_sendai_white, "gfx/diesel/dd13.png") {
	template_2cc_std(180, 480)
}

spriteset(spriteset_dd13_new_okayama_rinko, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_dd13_new_kanagawa, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 352)
}

spriteset(spriteset_dd13_new_mitsubishi_yubari, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 384)
}

spriteset(spriteset_dd13_new_fukushima_green, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_dd13_new_fukushima_blue, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 448)
}

spriteset(spriteset_dd13_new_fukushima_red, "gfx/diesel/dd13.png") {
	template_2cc_std(1, 480)
}


//purch

spriteset(spriteset_dd13_new_brown_purchase, "gfx/diesel/dd13.png") {
	template_purchase(180, 512)
}

spriteset(spriteset_dd13_new_red_purchase, "gfx/diesel/dd13.png") {
	template_purchase(268, 512)
}


switch(FEAT_TRAINS, SELF, switch_dd13_new_yeardep_livery, build_year) {
	0..1965: spriteset_dd13_new_jnr_brown;
    spriteset_dd13_new_jnr_red;
}


switch(FEAT_TRAINS, SELF, switch_dd13_new_livery, cargo_subtype) {
	1: spriteset_dd13_new_jnr_red;
	2: spriteset_dd13_new_jnr_brown;
	3: spriteset_dd13_new_akita;
	4: spriteset_dd13_new_nagoya_rinkai;
	5: spriteset_dd13_new_tomakomai;
	6: spriteset_dd13_new_kashima_black;
	7: spriteset_dd13_new_kashima_red;
	8: spriteset_dd13_new_kosaka;
	9: spriteset_dd13_new_kamioka_white;
	10: spriteset_dd13_new_kamioka_brown;
	11: spriteset_dd13_new_hachinohe;
	12: spriteset_dd13_new_keiyo_blue;
	13: spriteset_dd13_new_keiyo_red;
	14: spriteset_dd13_new_sendai_yellow;
	15: spriteset_dd13_new_sendai_white;
	16: spriteset_dd13_new_okayama_rinko;
	17: spriteset_dd13_new_kanagawa;
	18: spriteset_dd13_new_mitsubishi_yubari;
	19: spriteset_dd13_new_fukushima_green;
	20: spriteset_dd13_new_fukushima_blue;
	21: spriteset_dd13_new_fukushima_red;
	22: spriteset_dd13_new_cc;
	switch_dd13_new_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_dd13_new_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_AKITA_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	4: return string(STR_CONCAT_2, string(STR_SUFFIX_NAGOYA_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	5: return string(STR_CONCAT_2, string(STR_SUFFIX_TOMAKOMAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_PINK), 
                                    string(STR_COLOUR_GREEN)
                                    )
                                 );
	6: return string(STR_CONCAT_2, string(STR_SUFFIX_KASHIMA), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	7: return string(STR_CONCAT_2, string(STR_SUFFIX_KASHIMA), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	8: return string(STR_CONCAT_2, string(STR_SUFFIX_KOSAKA), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	9: return string(STR_CONCAT_2, string(STR_SUFFIX_KAMIOKA), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_WHITE), 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	10: return string(STR_CONCAT_2, string(STR_SUFFIX_KAMIOKA), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	11: return string(STR_CONCAT_2, string(STR_SUFFIX_HACHINOHE_RINKAI), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	12: return string(STR_CONCAT_2, string(STR_SUFFIX_KEIYO_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	13: return string(STR_CONCAT_2, string(STR_SUFFIX_KEIYO_RINKAI), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_LTBLUE),
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
	14: return string(STR_CONCAT_2, string(STR_SUFFIX_SENDAI_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	15: return string(STR_CONCAT_2, string(STR_SUFFIX_SENDAI_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	16: return string(STR_CONCAT_2, string(STR_SUFFIX_OKAYAMA_RINKO), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	17: return string(STR_CONCAT_2, string(STR_SUFFIX_KANAGAWA_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	18: return string(STR_CONCAT_2, string(STR_SUFFIX_MITSUBISHI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_ORANGE), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	19: return string(STR_CONCAT_2, string(STR_SUFFIX_FUKUSHIMA_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTGREEN), 
                                    string(STR_COLOUR_LTBLUE)
                                    )
                                 );
	20: return string(STR_CONCAT_2, string(STR_SUFFIX_FUKUSHIMA_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	21: return string(STR_CONCAT_2, string(STR_SUFFIX_FUKUSHIMA_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	22: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_dd13_new_yeardep_purchase, current_year) {
	0..1965: spriteset_dd13_new_brown_purchase;
    spriteset_dd13_new_red_purchase;
}


switch (FEAT_TRAINS, SELF, switch_dd13_new_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_DD13);
  } 
switch (FEAT_TRAINS, SELF, switch_dd13_new_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_dd13_new_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, dd13_new, 1208) {
 property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_DD13_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1961,1,1);
  speed: 70 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.27;
  power: 745 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 56;
  reliability_decay: 20;
  model_life: 40;
  vehicle_life: 55;
  cost_factor: 18;
  length: 6;
  running_cost_factor: 80;
  running_cost_base: RUNNING_COST_DIESEL;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1207;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_LF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
						   string(STR_SUFFIX_PRIVATE)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_dd13_new_subtype_text;
  default: switch_dd13_new_livery;
  purchase: switch_dd13_new_yeardep_purchase;
  name: switch_dd13_new_name;
  }
}
spriteset(spriteset_dd16_red, "gfx/diesel/dd16.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_dd16_flip_red, "gfx/diesel/dd16.png") {
	template_2cc_flip(180, 1)
}

spriteset(spriteset_dd16_cc, "gfx/diesel/dd16.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_dd16_flip_cc, "gfx/diesel/dd16.png") {
	template_2cc_flip(180, 320)
}


spriteset(spriteset_dd16_red_purchase, "gfx/diesel/dd16.png") {
	template_purchase(1, 352)
}



//flip switches
switch(FEAT_TRAINS, SELF, switch_dd16_flip_red, vehicle_is_flipped) {
	0: spriteset_dd16_red;
	1: spriteset_dd16_flip_red;
}

switch(FEAT_TRAINS, SELF, switch_dd16_flip_cc, vehicle_is_flipped) {
	0: spriteset_dd16_cc;
	1: spriteset_dd16_flip_cc;
}





switch(FEAT_TRAINS, SELF, switch_dd16_livery, cargo_subtype) {
	1: switch_dd16_flip_cc;	
	switch_dd16_flip_red;
}



switch(FEAT_TRAINS, SELF, switch_dd16_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	1: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, dd16, 1209) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_DD16);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1971,1,1);
  speed: 75 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 588 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  weight: 48;
  model_life: 40;
  vehicle_life: 35;
  length: 5;
	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	reliability_decay: 13;
    cost_factor: 37;
	running_cost_factor: 44;
    running_cost_base: RUNNING_COST_DIESEL;
	misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_SH),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_dd16_subtype_text;
  default: switch_dd16_livery;
  purchase: spriteset_dd16_red_purchase;
  reverse_build_probability: return 50;
  }
}
spriteset(spriteset_dd51_brown, "gfx/diesel/dd51.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_dd51_red, "gfx/diesel/dd51.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_dd51_hokkaido_blue, "gfx/diesel/dd51.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_dd51_hokkaido_red, "gfx/diesel/dd51.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_dd51_freight_blue, "gfx/diesel/dd51.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_dd51_freight_red, "gfx/diesel/dd51.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_dd51_euroliner, "gfx/diesel/dd51.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_dd51_testred, "gfx/diesel/dd51.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_dd51_testwhite, "gfx/diesel/dd51.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_dd51_testblue, "gfx/diesel/dd51.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_dd51_cc, "gfx/diesel/dd51.png") {
	template_2cc_std(1, 224)
}




spriteset(spriteset_dd51_brown_purchase, "gfx/diesel/dd51.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_dd51_red_purchase, "gfx/diesel/dd51.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_dd51_jrf_purchase, "gfx/diesel/dd51.png") {
	template_purchase(1, 320)
}



switch(FEAT_TRAINS, SELF, switch_dd51_yeardep_livery, build_year) {
	1000..1965: spriteset_dd51_brown;
	1965..1999: spriteset_dd51_red;
	1999..9999: spriteset_dd51_freight_red;
    CB_FAILED;
}

switch(FEAT_TRAINS, SELF, switch_dd51_livery, cargo_subtype) {
	1: spriteset_dd51_brown;
	2: spriteset_dd51_red;
	3: spriteset_dd51_hokkaido_blue;
	4: spriteset_dd51_hokkaido_red;
	5: spriteset_dd51_freight_blue;
	6: spriteset_dd51_freight_red;
	7: spriteset_dd51_euroliner;
	8: spriteset_dd51_testred;
	9: spriteset_dd51_testwhite;
	10: spriteset_dd51_testblue;
	11: spriteset_dd51_cc;	
	switch_dd51_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_dd51_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), //todo make prototype a variant
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_PROTO)
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_HOKUTOSEI)
                                 );
	4: return string(STR_CONCAT_2, string(STR_SUFFIX_JRH), 
									         string(STR_COLOUR_RED)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_REFURB)
                                 );
	6: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_REFURB)
                                 );
	7: return string(STR_CONCAT_3, string(STR_SUFFIX_JRC),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_WHITE), 
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_EUROLINER)
                                 );
	8: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_EXPERIMENT)
                                 );
	9: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_EXPERIMENT)
                                 );
	10: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_EXPERIMENT)
                                 );
	11: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_dd51_yeardep_purchase, current_year) {
	0..1965: spriteset_dd51_brown_purchase;
    1990..9999: spriteset_dd51_jrf_purchase;
	spriteset_dd51_red_purchase;
}



item (FEAT_TRAINS, dd51, 1214) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_DD51);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1961,1,1);
  speed: 95 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.27;
  power: 1600 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  weight: 84;
  model_life: 60;
  vehicle_life: 40;

	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	reliability_decay: 2;
   cost_factor: 89;
   running_cost_base: RUNNING_COST_DIESEL;
	running_cost_factor: 85;
	misc_flags: bitmask(TRAIN_FLAG_2CC);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_EF),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_dd51_subtype_text;
  default: switch_dd51_livery;
  purchase: switch_dd51_yeardep_purchase;
  }
}
spriteset(spriteset_de10_red, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_de10_jrf_red, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_de10_jrf_thick, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_de10_jrf_blue, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_de10_jnr_brown, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_de10_jrf_pink, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_de10_jrf_yellow, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_de10_island_express, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_de10_kinokuni, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_de10_kyushu_red, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_de10_kyushu_yellow, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_de10_hokutosei, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 352)
}

spriteset(spriteset_de10_hyper_saloon, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 384)
}

spriteset(spriteset_de10_kamioka_blue, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_de10_kamioka_black, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 448)
}

spriteset(spriteset_de10_niigata, "gfx/diesel/de10_a.png") {
	template_2cc_std(1, 480)
}

//B
spriteset(spriteset_de10_cc, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_de10_watarase, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_de10_norokko, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_de10_jnr_cream, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_de10_southerncross, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_de10_hokkaido_het, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_de10_okuizumo, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_de10_nostalgicview, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_de10_sagano, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_de10_hokkaido_black, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_de10_kansai_blue, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_de10_kansai_brown, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 352)
}

spriteset(spriteset_de10_tarumi_yellow, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 384)
}

spriteset(spriteset_de10_tarumi_blue, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_de10_tarumi_red, "gfx/diesel/de10_b.png") {
	template_2cc_std(1, 448)
}

//spriteset(spriteset_de10_niigata, "gfx/diesel/de10_b.png") {
//	template_2cc_std(1, 480)
//}


//Spriteset de10 flipped
spriteset(spriteset_de10_flip_red, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 1)
}

spriteset(spriteset_de10_flip_jrf_red, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 32)
}

spriteset(spriteset_de10_flip_jrf_thick, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 64)
}

spriteset(spriteset_de10_flip_jrf_blue, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 96)
}

spriteset(spriteset_de10_flip_jnr_brown, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 128)
}

spriteset(spriteset_de10_flip_jrf_pink, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 160)
}

spriteset(spriteset_de10_flip_jrf_yellow, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 192)
}

spriteset(spriteset_de10_flip_island_express, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 224)
}

spriteset(spriteset_de10_flip_kinokuni, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 256)
}

spriteset(spriteset_de10_flip_kyushu_red, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 288)
}

spriteset(spriteset_de10_flip_kyushu_yellow, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 320)
}

spriteset(spriteset_de10_flip_hokutosei, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 352)
}

spriteset(spriteset_de10_flip_hyper_saloon, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 384)
}

spriteset(spriteset_de10_flip_kamioka_blue, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 416)
}

spriteset(spriteset_de10_flip_kamioka_black, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 448)
}

spriteset(spriteset_de10_flip_niigata, "gfx/diesel/de10_a.png") {
	template_2cc_flip(180, 480)
}

//B
spriteset(spriteset_de10_flip_cc, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 1)
}

spriteset(spriteset_de10_flip_watarase, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 32)
}

spriteset(spriteset_de10_flip_norokko, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 64)
}

spriteset(spriteset_de10_flip_jnr_cream, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 96)
}

spriteset(spriteset_de10_flip_southerncross, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 128)
}

spriteset(spriteset_de10_flip_hokkaido_het, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 160)
}

spriteset(spriteset_de10_flip_okuizumo, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 192)
}

spriteset(spriteset_de10_flip_nostalgicview, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 224)
}

spriteset(spriteset_de10_flip_sagano, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 256)
}

spriteset(spriteset_de10_flip_hokkaido_black, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 288)
}

spriteset(spriteset_de10_flip_kansai_blue, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 320)
}

spriteset(spriteset_de10_flip_kansai_brown, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 352)
}

spriteset(spriteset_de10_flip_tarumi_yellow, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 384)
}

spriteset(spriteset_de10_flip_tarumi_blue, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 416)
}

spriteset(spriteset_de10_flip_tarumi_red, "gfx/diesel/de10_b.png") {
	template_2cc_flip(180, 448)
}

//spriteset(spriteset_de10_niigata, "gfx/diesel/de10_b.png") {
//	template_2cc_std(1, 480)
//}


//purchase

spriteset(spriteset_de10_red_purchase, "gfx/diesel/de10_a.png") {
	template_purchase(1, 512)
}

spriteset(spriteset_de10_jrf_purchase, "gfx/diesel/de10_a.png") {
	template_purchase(89, 512)
}



//flip switches
switch(FEAT_TRAINS, SELF, switch_de10_flip_red, vehicle_is_flipped) {
	0: spriteset_de10_red;
	1: spriteset_de10_flip_red;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_jrf_red, vehicle_is_flipped) {
	0: spriteset_de10_jrf_red;
	1: spriteset_de10_flip_jrf_red;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_jrf_thick, vehicle_is_flipped) {
	0: spriteset_de10_jrf_thick;
	1: spriteset_de10_flip_jrf_thick;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_jrf_blue, vehicle_is_flipped) {
	0: spriteset_de10_jrf_blue;
	1: spriteset_de10_flip_jrf_blue;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_jnr_brown, vehicle_is_flipped) {
	0: spriteset_de10_jnr_brown;
	1: spriteset_de10_flip_jnr_brown;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_jrf_pink, vehicle_is_flipped) {
	0: spriteset_de10_jrf_pink;
	1: spriteset_de10_flip_jrf_pink;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_jrf_yellow, vehicle_is_flipped) {
	0: spriteset_de10_jrf_yellow;
	1: spriteset_de10_flip_jrf_yellow;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_island_express, vehicle_is_flipped) {
	0: spriteset_de10_island_express;
	1: spriteset_de10_flip_island_express;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_kinokuni, vehicle_is_flipped) {
	0: spriteset_de10_kinokuni;
	1: spriteset_de10_flip_kinokuni;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_kyushu_red, vehicle_is_flipped) {
	0: spriteset_de10_kyushu_red;
	1: spriteset_de10_flip_kyushu_red;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_kyushu_yellow, vehicle_is_flipped) {
	0: spriteset_de10_kyushu_yellow;
	1: spriteset_de10_flip_kyushu_yellow;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_hokutosei, vehicle_is_flipped) {
	0: spriteset_de10_hokutosei;
	1: spriteset_de10_flip_hokutosei;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_hyper_saloon, vehicle_is_flipped) {
	0: spriteset_de10_hyper_saloon;
	1: spriteset_de10_flip_hyper_saloon;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_kamioka_blue, vehicle_is_flipped) {
	0: spriteset_de10_kamioka_blue;
	1: spriteset_de10_flip_kamioka_blue;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_kamioka_black, vehicle_is_flipped) {
	0: spriteset_de10_kamioka_black;
	1: spriteset_de10_flip_kamioka_black;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_niigata, vehicle_is_flipped) {
	0: spriteset_de10_niigata;
	1: spriteset_de10_flip_niigata;
}

//b

switch(FEAT_TRAINS, SELF, switch_de10_flip_cc, vehicle_is_flipped) {
	0: spriteset_de10_cc;
	1: spriteset_de10_flip_cc;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_watarase, vehicle_is_flipped) {
	0: spriteset_de10_watarase;
	1: spriteset_de10_flip_watarase;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_norokko, vehicle_is_flipped) {
	0: spriteset_de10_norokko;
	1: spriteset_de10_flip_norokko;
}
switch(FEAT_TRAINS, SELF, switch_de10_flip_jnr_cream, vehicle_is_flipped) {
	0: spriteset_de10_jnr_cream;
	1: spriteset_de10_flip_jnr_cream;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_southerncross, vehicle_is_flipped) {
	0: spriteset_de10_southerncross;
	1: spriteset_de10_flip_southerncross;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_hokkaido_het, vehicle_is_flipped) {
	0: spriteset_de10_hokkaido_het;
	1: spriteset_de10_flip_hokkaido_het;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_okuizumo, vehicle_is_flipped) {
	0: spriteset_de10_okuizumo;
	1: spriteset_de10_flip_okuizumo;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_nostalgicview, vehicle_is_flipped) {
	0: spriteset_de10_nostalgicview;
	1: spriteset_de10_flip_nostalgicview;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_sagano, vehicle_is_flipped) {
	0: spriteset_de10_sagano;
	1: spriteset_de10_flip_sagano;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_hokkaido_black, vehicle_is_flipped) {
	0: spriteset_de10_hokkaido_black;
	1: spriteset_de10_flip_hokkaido_black;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_kansai_blue, vehicle_is_flipped) {
	0: spriteset_de10_kansai_blue;
	1: spriteset_de10_flip_kansai_blue;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_kansai_brown, vehicle_is_flipped) {
	0: spriteset_de10_kansai_brown;
	1: spriteset_de10_flip_kansai_brown;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_tarumi_yellow, vehicle_is_flipped) {
	0: spriteset_de10_tarumi_yellow;
	1: spriteset_de10_flip_tarumi_yellow;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_tarumi_red, vehicle_is_flipped) {
	0: spriteset_de10_tarumi_red;
	1: spriteset_de10_flip_tarumi_red;
}

switch(FEAT_TRAINS, SELF, switch_de10_flip_tarumi_blue, vehicle_is_flipped) {
	0: spriteset_de10_tarumi_blue;
	1: spriteset_de10_flip_tarumi_blue;
}



switch(FEAT_TRAINS, SELF, switch_de10_yeardep_livery, build_year) {
	0..1967: switch_de10_flip_jnr_brown;
	1988..1999: switch_de10_flip_jrf_blue;
	1999..9999: switch_de10_flip_jrf_red;
    switch_de10_flip_red;
}

switch(FEAT_TRAINS, SELF, switch_de10_livery, cargo_subtype) {
	1: switch_de10_flip_red;
	2: switch_de10_flip_jrf_blue;
	3: switch_de10_flip_jrf_red;
	4: switch_de10_flip_jrf_thick;
	5: switch_de10_flip_jrf_pink;
	6: switch_de10_flip_jrf_yellow;
	7: switch_de10_flip_jnr_brown;
	8: switch_de10_flip_jnr_cream;
	9: switch_de10_flip_hyper_saloon;
	10: switch_de10_flip_kyushu_red;
	11: switch_de10_flip_kyushu_yellow;
	12: switch_de10_flip_hokkaido_black;
	13: switch_de10_flip_hokkaido_het;
	14: switch_de10_flip_hokutosei;
	15: switch_de10_flip_southerncross;
	16: switch_de10_flip_norokko;
	17: switch_de10_flip_island_express;
	18: switch_de10_flip_nostalgicview;
	19: switch_de10_flip_okuizumo;
	20: switch_de10_flip_kinokuni;
	21: switch_de10_flip_sagano;
	22: switch_de10_flip_watarase;
	23: switch_de10_flip_niigata;
	24: switch_de10_flip_kansai_brown;
	25: switch_de10_flip_kansai_blue;
	26: switch_de10_flip_tarumi_red;
	27: switch_de10_flip_tarumi_blue;
	28: switch_de10_flip_tarumi_yellow;
	29: switch_de10_flip_kamioka_blue;
	30: switch_de10_flip_kamioka_black;
	31: switch_de10_flip_cc;	
	switch_de10_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_de10_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_CREAM)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	4: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE),
									string(STR_COLOUR_GREY)
                                    )
                                 );
	5: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_PINK), 
                                    string(STR_COLOUR_ORANGE)
                                    )
                                 );
	6: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	7: return string(STR_CONCAT_3, string(STR_SUFFIX_JRK),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_JNR_RETRO)
                                 );
	8: return string(STR_CONCAT_3, string(STR_SUFFIX_JRK),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_CREAM)
                                    ), string(STR_SUFFIX_JNR_RETRO)
                                 );
	9: return string(STR_CONCAT_3, string(STR_SUFFIX_JRK),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_WHITE), 
                                    string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_HYPERSALOON)
                                 );		


	10: return string(STR_CONCAT_2, string(STR_SUFFIX_JRK), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK), 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	11: return string(STR_CONCAT_2, string(STR_SUFFIX_JRK), 
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	12: return string(STR_CONCAT_2, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                    )
                                 );
	13: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_LTGREEN),
									string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_NAEBO)
                                 );
	14: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_HOKUTOSEI)
                                 );
	15: return string(STR_CONCAT_3, string(STR_SUFFIX_JRK),
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_SOUTHERNCROSS)
                                 );
	16: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_GREEN), 
                                    string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_NOROKKO)
                                 );
	17: return string(STR_CONCAT_3, string(STR_SUFFIX_JRS),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_ISLANDEXPRESS)
                                 );
	18: return string(STR_CONCAT_3, string(STR_SUFFIX_JRE),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_YELLOW), 
                                    string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_NOSTALGICVIEW)
                                 );
	19: return string(STR_CONCAT_3, string(STR_SUFFIX_JRW),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_OKUIZUMO)
                                 );
	20: return string(STR_CONCAT_3, string(STR_SUFFIX_JRW),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_KINOKUNI)
                                 );
	21: return string(STR_CONCAT_2, string(STR_SUFFIX_SAGANO), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_BLACK), 
                                    string(STR_COLOUR_RED),
                                    string(STR_COLOUR_ORANGE),
                                    )
                                 );
	22: return string(STR_CONCAT_2, string(STR_SUFFIX_WATARASE), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GOLD)
                                    )
                                 );
	23: return string(STR_CONCAT_2, string(STR_SUFFIX_NIIGATA_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	24: return string(STR_CONCAT_2, string(STR_SUFFIX_KANSAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_RED)
                                    )
                                 );
	25: return string(STR_CONCAT_2, string(STR_SUFFIX_KANSAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	26: return string(STR_CONCAT_2, string(STR_SUFFIX_TARUMI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	27: return string(STR_CONCAT_2, string(STR_SUFFIX_TARUMI), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE),
									string(STR_COLOUR_RED)
                                    )
                                 );
	28: return string(STR_CONCAT_2, string(STR_SUFFIX_TARUMI), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_YELLOW), 
                                    string(STR_COLOUR_BLUE),
									string(STR_COLOUR_WHITE)
                                    )
                                 );
	29: return string(STR_CONCAT_2, string(STR_SUFFIX_KAMIOKA), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	30: return string(STR_CONCAT_2, string(STR_SUFFIX_KAMIOKA), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );

	31: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_de10_purchase, current_year) {
	0..1999: spriteset_de10_red_purchase;
	spriteset_de10_jrf_purchase;
	}


item (FEAT_TRAINS, de10, 1219) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_DE10);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1966,1,1);
  speed: 85 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 1005 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  weight: 65;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 40;
  length: 7;

	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	reliability_decay: 9;
    cost_factor: 46;
	running_cost_factor: 80;
    running_cost_base: RUNNING_COST_DIESEL;
	misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_SHG),
                        string(STR_CONCAT_3C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JR),
						   string(STR_SUFFIX_PRIVATE)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_de10_subtype_text;
  default: switch_de10_livery;
  purchase: switch_de10_purchase;
	reverse_build_probability: return 50;
  }
}
spriteset(spriteset_de11_old_jnr_red, "gfx/diesel/de11.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_de11_old_jrf_red, "gfx/diesel/de11.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_de11_old_cc, "gfx/diesel/de11.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_de11_old_tarumi_yellow, "gfx/diesel/de11.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_de11_old_tarumi_blue, "gfx/diesel/de11.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_de11_old_tarumi_red, "gfx/diesel/de11.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_de11_old_niigata, "gfx/diesel/de11.png") {
	template_2cc_std(1, 192)
}


spriteset(spriteset_de11_old_flip_jnr_red, "gfx/diesel/de11.png") {
	template_2cc_flip(180, 1)
}

spriteset(spriteset_de11_old_flip_jrf_red, "gfx/diesel/de11.png") {
	template_2cc_flip(180, 32)
}

spriteset(spriteset_de11_old_flip_cc, "gfx/diesel/de11.png") {
	template_2cc_flip(180, 64)
}

spriteset(spriteset_de11_old_flip_tarumi_yellow, "gfx/diesel/de11.png") {
	template_2cc_flip(180, 96)
}

spriteset(spriteset_de11_old_flip_tarumi_blue, "gfx/diesel/de11.png") {
	template_2cc_flip(180, 128)
}

spriteset(spriteset_de11_old_flip_tarumi_red, "gfx/diesel/de11.png") {
	template_2cc_flip(180, 160)
}

spriteset(spriteset_de11_old_flip_niigata, "gfx/diesel/de11.png") {
	template_2cc_flip(180, 192)
}


spriteset(spriteset_de11_old_jnr_purchase, "gfx/diesel/de11.png") {
	template_purchase(1, 512)
}

spriteset(spriteset_de11_old_jrf_purchase, "gfx/diesel/de11.png") {
	template_purchase(89, 512)
}

//flip

switch(FEAT_TRAINS, SELF, switch_de11_old_flip_jnr_red, vehicle_is_flipped) {
	0: spriteset_de11_old_jnr_red;
	1: spriteset_de11_old_flip_jnr_red;
}

switch(FEAT_TRAINS, SELF, switch_de11_old_flip_jrf_red, vehicle_is_flipped) {
	0: spriteset_de11_old_jrf_red;
	1: spriteset_de11_old_flip_jrf_red;
}

switch(FEAT_TRAINS, SELF, switch_de11_old_flip_cc, vehicle_is_flipped) {
	0: spriteset_de11_old_cc;
	1: spriteset_de11_old_flip_cc;
}

switch(FEAT_TRAINS, SELF, switch_de11_old_flip_tarumi_yellow, vehicle_is_flipped) {
	0: spriteset_de11_old_tarumi_yellow;
	1: spriteset_de11_old_flip_tarumi_yellow;
}

switch(FEAT_TRAINS, SELF, switch_de11_old_flip_tarumi_blue, vehicle_is_flipped) {
	0: spriteset_de11_old_tarumi_blue;
	1: spriteset_de11_old_flip_tarumi_blue;
}

switch(FEAT_TRAINS, SELF, switch_de11_old_flip_tarumi_red, vehicle_is_flipped) {
	0: spriteset_de11_old_tarumi_red;
	1: spriteset_de11_old_flip_tarumi_red;
}

switch(FEAT_TRAINS, SELF, switch_de11_old_flip_niigata, vehicle_is_flipped) {
	0: spriteset_de11_old_niigata;
	1: spriteset_de11_old_flip_niigata;
}

//yeardep

switch(FEAT_TRAINS, SELF, switch_de11_old_yeardep_livery, build_year) {
	0..1999: switch_de11_old_flip_jnr_red;
    switch_de11_old_flip_jrf_red;
}


switch(FEAT_TRAINS, SELF, switch_de11_old_livery, cargo_subtype) {
	1: switch_de11_old_flip_jnr_red;
	2: switch_de11_old_flip_jrf_red;
	3: switch_de11_old_flip_niigata;
	4: switch_de11_old_flip_tarumi_red;
	5: switch_de11_old_flip_tarumi_blue;
	6: switch_de11_old_flip_tarumi_yellow;
	7: switch_de11_old_flip_cc;
	switch_de11_old_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_de11_old_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
									         string(STR_COLOUR_GREY)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_NIIGATA_RINKAI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_YELLOW)
                                    )
                                 );
	4: return string(STR_CONCAT_2, string(STR_SUFFIX_TARUMI), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	5: return string(STR_CONCAT_2, string(STR_SUFFIX_TARUMI), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE),
									         string(STR_COLOUR_RED)
                                    )
                                 );
	6: return string(STR_CONCAT_2, string(STR_SUFFIX_TARUMI), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_YELLOW), 
                                    string(STR_COLOUR_BLUE),
									         string(STR_COLOUR_WHITE)
                                    )
                                 );
	7: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_de11_old_yeardep_purchase, current_year) {
	0..1987: spriteset_de11_old_jnr_purchase;
    spriteset_de11_old_jrf_purchase;
}

switch (FEAT_TRAINS, SELF, switch_de11_old_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_DE11);
  } 
switch (FEAT_TRAINS, SELF, switch_de11_old_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_de11_old_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, de11_old, 1220) {
 property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_DE11_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1968,1,1);
  speed: 85 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.29;
  power: 930 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  weight: 70;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 40;
  length: 7;
	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	reliability_decay: 9;
    cost_factor: 46;
	running_cost_factor: 80;
    running_cost_base: RUNNING_COST_DIESEL;
	misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_SH),
                        string(STR_CONCAT_3C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JRF),
						         string(STR_SUFFIX_PRIVATE)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_de11_old_subtype_text;
  default: switch_de11_old_livery;
  purchase: switch_de11_old_yeardep_purchase;
  name: switch_de11_old_name;
  reverse_build_probability: return 50;
  }
}


spriteset(spriteset_de11_new_jnr_red, "gfx/diesel/de11.png") {
	template_2cc_std(1, 384)
}

spriteset(spriteset_de11_new_jrf_red, "gfx/diesel/de11.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_de11_new_jrf_thick, "gfx/diesel/de11.png") {
	template_2cc_std(1, 448)
}

spriteset(spriteset_de11_new_cc, "gfx/diesel/de11.png") {
	template_2cc_std(1, 480)
}



spriteset(spriteset_de11_new_flip_jnr_red, "gfx/diesel/de11.png") {
	template_2cc_flip(180, 384)
}

spriteset(spriteset_de11_new_flip_jrf_red, "gfx/diesel/de11.png") {
	template_2cc_flip(180, 416)
}

spriteset(spriteset_de11_new_flip_jrf_thick, "gfx/diesel/de11.png") {
	template_2cc_flip(180, 448)
}

spriteset(spriteset_de11_new_flip_cc, "gfx/diesel/de11.png") {
	template_2cc_flip(180, 480)
}


spriteset(spriteset_de11_new_jnr_purchase, "gfx/diesel/de11.png") {
	template_purchase(180, 512)
}

spriteset(spriteset_de11_new_jrf_purchase, "gfx/diesel/de11.png") {
	template_purchase(268, 512)
}

//flip

switch(FEAT_TRAINS, SELF, switch_de11_new_flip_jnr_red, vehicle_is_flipped) {
	0: spriteset_de11_new_jnr_red;
	1: spriteset_de11_new_flip_jnr_red;
}

switch(FEAT_TRAINS, SELF, switch_de11_new_flip_jrf_red, vehicle_is_flipped) {
	0: spriteset_de11_new_jrf_red;
	1: spriteset_de11_new_flip_jrf_red;
}

switch(FEAT_TRAINS, SELF, switch_de11_new_flip_jrf_thick, vehicle_is_flipped) {
	0: spriteset_de11_new_jrf_thick;
	1: spriteset_de11_new_flip_jrf_thick;
}

switch(FEAT_TRAINS, SELF, switch_de11_new_flip_cc, vehicle_is_flipped) {
	0: spriteset_de11_new_cc;
	1: spriteset_de11_new_flip_cc;
}



//yeardep

switch(FEAT_TRAINS, SELF, switch_de11_new_yeardep_livery, build_year) {
	0..1999: switch_de11_new_flip_jnr_red;
    switch_de11_new_flip_jrf_red;
}


switch(FEAT_TRAINS, SELF, switch_de11_new_livery, cargo_subtype) {
	1: switch_de11_new_flip_jnr_red;
	2: switch_de11_new_flip_jrf_red;
	3: switch_de11_new_flip_jrf_thick;
	4: switch_de11_new_flip_cc;
	switch_de11_new_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_de11_new_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE),
									                  string(STR_COLOUR_GREY)
                                    )
                                 );
	4: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_de11_new_yeardep_purchase, current_year) {
	0..1987: spriteset_de11_new_jnr_purchase;
    spriteset_de11_new_jrf_purchase;
}

switch (FEAT_TRAINS, SELF, switch_de11_new_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_DE11);
  } 
switch (FEAT_TRAINS, SELF, switch_de11_new_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_de11_new_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, de11_new, 1221) {
 property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_DE11_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1979,1,1);
  speed: 85 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.29;
  power: 1010 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  weight: 70;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 40;
  length: 7;
	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	reliability_decay: 9;
    cost_factor: 46;
	running_cost_factor: 80;
    running_cost_base: RUNNING_COST_DIESEL;
	misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
  variant_group: 1220;
  }
  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_SH),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
						         string(STR_SUFFIX_JRF)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_de11_new_subtype_text;
  default: switch_de11_new_livery;
  purchase: switch_de11_new_yeardep_purchase;
  name: switch_de11_new_name;
  reverse_build_probability: return 50;
  }
}




spriteset(spriteset_de15_red, "gfx/diesel/de15.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_de15_okuizumo, "gfx/diesel/de15.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_de15_royal_express, "gfx/diesel/de15.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_de15_yellow_grey, "gfx/diesel/de15.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_de15_norokko_0, "gfx/diesel/de15.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_de15_black_red, "gfx/diesel/de15.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_de15_norokko_1, "gfx/diesel/de15.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_de15_norokko_2, "gfx/diesel/de15.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_de15_norokko_3, "gfx/diesel/de15.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_de15_norokko_4, "gfx/diesel/de15.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_de15_cc, "gfx/diesel/de15.png") {
	template_2cc_std(1, 320)
}


//Spriteset de15 flipped
spriteset(spriteset_de15_flip_red, "gfx/diesel/de15.png") {
	template_2cc_flip(180, 1)
}

spriteset(spriteset_de15_flip_okuizumo, "gfx/diesel/de15.png") {
	template_2cc_flip(180, 32)
}

spriteset(spriteset_de15_flip_royal_express, "gfx/diesel/de15.png") {
	template_2cc_flip(180, 64)
}

spriteset(spriteset_de15_flip_yellow_grey, "gfx/diesel/de15.png") {
	template_2cc_flip(180, 96)
}

spriteset(spriteset_de15_flip_norokko_0, "gfx/diesel/de15.png") {
	template_2cc_flip(180, 128)
}

spriteset(spriteset_de15_flip_black_red, "gfx/diesel/de15.png") {
	template_2cc_flip(180, 160)
}

spriteset(spriteset_de15_flip_norokko_1, "gfx/diesel/de15.png") {
	template_2cc_flip(180, 192)
}

spriteset(spriteset_de15_flip_norokko_2, "gfx/diesel/de15.png") {
	template_2cc_flip(180, 224)
}

spriteset(spriteset_de15_flip_norokko_3, "gfx/diesel/de15.png") {
	template_2cc_flip(180, 256)
}

spriteset(spriteset_de15_flip_norokko_4, "gfx/diesel/de15.png") {
	template_2cc_flip(180, 288)
}

spriteset(spriteset_de15_flip_cc, "gfx/diesel/de15.png") {
	template_2cc_flip(180, 320)
}


//purchase

spriteset(spriteset_de15_purchase, "gfx/diesel/de15.png") {
	template_purchase(1, 512)
}





//flip switches
switch(FEAT_TRAINS, SELF, switch_de15_flip_red, vehicle_is_flipped) {
	0: spriteset_de15_red;
	1: spriteset_de15_flip_red;
}

switch(FEAT_TRAINS, SELF, switch_de15_flip_okuizumo, vehicle_is_flipped) {
	0: spriteset_de15_okuizumo;
	1: spriteset_de15_flip_okuizumo;
}

switch(FEAT_TRAINS, SELF, switch_de15_flip_royal_express, vehicle_is_flipped) {
	0: spriteset_de15_royal_express;
	1: spriteset_de15_flip_royal_express;
}

switch(FEAT_TRAINS, SELF, switch_de15_flip_yellow_grey, vehicle_is_flipped) {
	0: spriteset_de15_yellow_grey;
	1: spriteset_de15_flip_yellow_grey;
}

switch(FEAT_TRAINS, SELF, switch_de15_flip_norokko_0, vehicle_is_flipped) {
	0: spriteset_de15_norokko_0;
	1: spriteset_de15_flip_norokko_0;
}

switch(FEAT_TRAINS, SELF, switch_de15_flip_black_red, vehicle_is_flipped) {
	0: spriteset_de15_black_red;
	1: spriteset_de15_flip_black_red;
}

switch(FEAT_TRAINS, SELF, switch_de15_flip_norokko_1, vehicle_is_flipped) {
	0: spriteset_de15_norokko_1;
	1: spriteset_de15_flip_norokko_1;
}

switch(FEAT_TRAINS, SELF, switch_de15_flip_norokko_2, vehicle_is_flipped) {
	0: spriteset_de15_norokko_2;
	1: spriteset_de15_flip_norokko_2;
}

switch(FEAT_TRAINS, SELF, switch_de15_flip_norokko_3, vehicle_is_flipped) {
	0: spriteset_de15_norokko_3;
	1: spriteset_de15_flip_norokko_3;
}

switch(FEAT_TRAINS, SELF, switch_de15_flip_norokko_4, vehicle_is_flipped) {
	0: spriteset_de15_norokko_4;
	1: spriteset_de15_flip_norokko_4;
}



switch(FEAT_TRAINS, SELF, switch_de15_flip_cc, vehicle_is_flipped) {
	0: spriteset_de15_cc;
	1: spriteset_de15_flip_cc;
}




switch(FEAT_TRAINS, SELF, switch_de15_livery, cargo_subtype) {
	1: switch_de15_flip_okuizumo;
	2: switch_de15_flip_royal_express;
	3: switch_de15_flip_yellow_grey;
	4: switch_de15_flip_black_red;
	5: switch_de15_flip_norokko_0;
	6: switch_de15_flip_norokko_1;
	7: switch_de15_flip_norokko_2;
	8: switch_de15_flip_norokko_3;
	9: switch_de15_flip_norokko_4;
	10: switch_de15_flip_cc;
	switch_de15_flip_red;
}



switch(FEAT_TRAINS, SELF, switch_de15_subtype_text, cargo_subtype) {

	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JRW),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_WHITE)
                                    ), string(STR_SUFFIX_OKUIZUMO)
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_ROYAL_EXPRESS)
                                 );

	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_YELLOW), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_NAEBO)
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_BLACK)
                                    ), string(STR_SUFFIX_KUSHIRO)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_WHITE), 
									string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREEN)
                                    ), string(STR_SUFFIX_NOROKKO)
                                 );
	6: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_GREEN), 
									string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_NOROKKO)
                                 );
	7: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_4F, 
                                    string(STR_COLOUR_GREEN), 
                                    string(STR_COLOUR_LTGREEN), 
									string(STR_COLOUR_LTBLUE), 
                                    string(STR_COLOUR_PURPLE)
                                    ), string(STR_SUFFIX_NOROKKO)
                                 );
	8: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_LTGREEN), 
									string(STR_COLOUR_GREEN), 
                                    string(STR_COLOUR_PURPLE)
                                    ), string(STR_SUFFIX_NOROKKO)
                                 );
	9: return string(STR_CONCAT_3, string(STR_SUFFIX_JRH),
                                    string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_PURPLE), 
									string(STR_COLOUR_LTGREEN), 
									string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_NOROKKO)
                                 );

	10: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, de15, 1222) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_DE15);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1967,1,1);
  speed: 85 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 1005 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  weight: 65;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 40;
  length: 7;

	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	reliability_decay: 9;
    cost_factor: 46;
	running_cost_factor: 80;
    running_cost_base: RUNNING_COST_DIESEL;
	misc_flags: bitmask(TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DH),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PLOWG),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_de15_subtype_text;
  default: switch_de15_livery;
  purchase: spriteset_de15_purchase;
	reverse_build_probability: return 50;
  }
}



//snowplough

spriteset(spriteset_de15_plow, "gfx/diesel/de15.png") {
	template_2cc_std(1, 448)
}

spriteset(spriteset_de15_plow_cc, "gfx/diesel/de15.png") {
	template_2cc_std(1, 480)
}

//Spriteset snowplough flipped
spriteset(spriteset_de15_plow_flip, "gfx/diesel/de15.png") {
	template_2cc_std(180, 448)
}

spriteset(spriteset_de15_plow_flip_cc, "gfx/diesel/de15.png") {
	template_2cc_std(180, 480)
}

//purchase

spriteset(spriteset_de15_plow_purchase, "gfx/diesel/de15.png") {
	template_purchase(268, 512)
}

//end switch
switch(FEAT_TRAINS, SELF, switch_de15_plow_end, position_in_consist) {
	0: spriteset_de15_plow;
	spriteset_de15_plow_flip;
	}

switch(FEAT_TRAINS, SELF, switch_de15_plow_end_cc, position_in_consist) {
	0: spriteset_de15_plow_cc;
	spriteset_de15_plow_flip_cc;
	}
	


//livery
switch(FEAT_TRAINS, SELF, switch_de15_plow_livery, cargo_subtype) {
	1: switch_de15_plow_end_cc;
	switch_de15_plow_end;
}



switch(FEAT_TRAINS, SELF, switch_de15_plow_subtype_text, cargo_subtype) {

	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	1: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}






item (FEAT_TRAINS, de15_plow, 1223) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_DE15_P);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1967,1,1);
  speed: 85 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.1;
  power: 1 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  weight: 25;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 40;
  length: 3;
  visual_effect_and_powered: VISUAL_EFFECT_DISABLE;
	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	reliability_decay: 9;
    cost_factor: 8;
	running_cost_factor: 2;
    running_cost_base: RUNNING_COST_DIESEL;
//	misc_flags: bitmask(TRAIN_FLAG_FLIP);
	variant_group: 1222;
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_NP),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PLOW),
                        string(STR_CONCAT_2C, 
                           string(STR_SUFFIX_JNR),
                           string(STR_SUFFIX_JR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_de15_plow_subtype_text;
  default: switch_de15_plow_livery;
  purchase: spriteset_de15_plow_purchase;
  }
}
spriteset(spriteset_df50_red, "gfx/diesel/df50.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_df50_brown, "gfx/diesel/df50.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_df50_cc, "gfx/diesel/df50.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_df50_purchase, "gfx/diesel/df50.png") {
	template_purchase(1, 96)
}


switch(FEAT_TRAINS, SELF, switch_df50_yeardep_livery, build_year) {
	0..1965: spriteset_df50_brown;
	spriteset_df50_red;

}


switch(FEAT_TRAINS, SELF, switch_df50_livery, cargo_subtype) {
	1: spriteset_df50_brown;
	2: spriteset_df50_red;
	3: spriteset_df50_cc;	
	switch_df50_yeardep_livery;
}



switch(FEAT_TRAINS, SELF, switch_df50_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                  string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    )
                                 );
	3: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}




item (FEAT_TRAINS, df50, 1225) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_DF50);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1955,1,1);
  speed: 90 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 800 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  weight: 83;
  model_life: 20;
  vehicle_life: 25;
  length: 7;

	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	reliability_decay: 13;
	cost_factor: 40;
	running_cost_factor: 82;
   running_cost_base: RUNNING_COST_DIESEL;
//	misc_flags: bitmask(TRAIN_FLAG_2CC);	
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DE),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_GP),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JNR)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_df50_subtype_text;
  default: switch_df50_livery;
  purchase: spriteset_df50_purchase;
  }
}
spriteset(spriteset_df200_proto, "gfx/diesel/df200.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_df200_proto_cc, "gfx/diesel/df200.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_df200_0, "gfx/diesel/df200.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_df200_0_cc, "gfx/diesel/df200.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_df200_100, "gfx/diesel/df200.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_df200_100_cc, "gfx/diesel/df200.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_df200_aime, "gfx/diesel/df200.png") {
	template_2cc_std(1, 192)
}


spriteset(spriteset_df200_7000, "gfx/diesel/df200.png") {
	template_2cc_std(180, 1)
}

alternative_sprites(spriteset_df200_7000, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_df200_7000_cc, "gfx/diesel/df200.png") {
	template_2cc_std(180, 32)
}

//fake

spriteset(spriteset_df200_hokutosei, "gfx/diesel/df200.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_df200_cassiopeia, "gfx/diesel/df200.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_df200_twilight, "gfx/diesel/df200.png") {
	template_2cc_std(180, 256)
}

//logos 

spriteset(spriteset_df200_logo_red, "gfx/diesel/df200.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_df200_logo_white, "gfx/diesel/df200.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_df200_logo_redbear, "gfx/diesel/df200.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_df200_nologo_redbear, "gfx/diesel/df200.png") {
	template_2cc_std(180, 160)
}

//purchase

spriteset(spriteset_df200_proto_purchase, "gfx/diesel/df200.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_df200_0_purchase, "gfx/diesel/df200.png") {
	template_purchase(89, 288)
}

spriteset(spriteset_df200_100_jrf_purchase, "gfx/diesel/df200.png") {
	template_purchase(1, 320)
}

spriteset(spriteset_df200_100_jr_purchase, "gfx/diesel/df200.png") {
	template_purchase(1, 320)
}

spriteset(spriteset_df200_7000_purchase, "gfx/diesel/df200.png") {
	template_purchase(180, 288)
}

alternative_sprites(spriteset_df200_7000_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_purchase(89, 288)
}


switch(FEAT_TRAINS, SELF, switch_df200_logo_yeardep, build_year) {
   0..1996: spriteset_df200_logo_red;
   1996..2002: spriteset_df200_logo_white;
   2002..2018: spriteset_df200_logo_redbear;
	spriteset_df200_nologo_redbear;
}


switch(FEAT_TRAINS, SELF, switch_df200_0_logo_livery, cargo_subtype) {
	0: switch_df200_logo_yeardep;
   1: spriteset_df200_logo_red;
   2: spriteset_df200_logo_white;
   3: spriteset_df200_logo_redbear;
	4: spriteset_df200_nologo_redbear;
   spriteset_blank;
}



switch(FEAT_TRAINS, SELF, switch_df200_0_livery, cargo_subtype) {
	5: spriteset_df200_0_cc;
	spriteset_df200_0;
}



switch(FEAT_TRAINS, SELF, switch_df200_0_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_REDLOGO)
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_WHITELOGO)
                                 );
	3: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_WHITELOGO), string(STR_SUFFIX_REDBEAR)
                                 );
	4: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_NOLOGO), string(STR_SUFFIX_REDBEAR)
                                 );
	5: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}



switch(FEAT_TRAINS, SELF, stack_df200_0, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_df200_0_livery;
	 1:  switch_df200_0_logo_livery;
}


switch (FEAT_TRAINS, SELF, switch_df200_0_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_DF200);
  } 
switch (FEAT_TRAINS, SELF, switch_df200_0_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_df200_0_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }

item (FEAT_TRAINS, df200_0, 1263) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_DF200_1);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1994,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 2500 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 18;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 25;
  cost_factor: 96;
  length: 8;
  running_cost_factor: 100;
  running_cost_base: RUNNING_COST_DIESEL;
  misc_flags: bitmask(TRAIN_FLAG_SPRITE_STACK);
  } 

  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DE),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_df200_0_subtype_text;
  default: stack_df200_0;
  purchase: spriteset_df200_0_purchase;
  name: switch_df200_0_name;
  }
}



//df200 100 


switch(FEAT_TRAINS, SELF, switch_df200_100_yeardep_purchase, current_year) {
	0..2018: spriteset_df200_100_jrf_purchase;
    spriteset_df200_100_jr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_df200_100_livery, cargo_subtype) {
	3: spriteset_df200_aime;
	4: spriteset_df200_hokutosei;
	5: spriteset_df200_cassiopeia;
	6: spriteset_df200_twilight;
   7: spriteset_df200_100_cc;
	spriteset_df200_100;
}

switch(FEAT_TRAINS, SELF, switch_df200_100_logo_livery, cargo_subtype) {
	0: switch_df200_logo_yeardep;
   1: spriteset_df200_logo_redbear;
	2: spriteset_df200_nologo_redbear;
   spriteset_blank;
}


switch(FEAT_TRAINS, SELF, switch_df200_100_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);

	1: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_WHITELOGO), string(STR_SUFFIX_REDBEAR)
                                 );
	2: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_NOLOGO), string(STR_SUFFIX_REDBEAR)
                                 );
	3: return string(STR_CONCAT_3, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_AIME)
                                 );
	4: return string(STR_CONCAT_4, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE), 
                                    string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_HOKUTOSEI), string(STR_SUFFIX_FICTION)
                                 );
	5: return string(STR_CONCAT_4, string(STR_SUFFIX_JRE), 
                                   string(STR_CONCAT_4F, 
												string(STR_COLOUR_SILVER),
												string(STR_COLOUR_PURPLE),
												string(STR_COLOUR_RED),
												string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_CASSIOPEIA), string(STR_SUFFIX_FICTION)
                                 );
	6: return string(STR_CONCAT_4, string(STR_SUFFIX_JRW), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_GREEN), 
                                    string(STR_COLOUR_YELLOW)
                                    ), string(STR_SUFFIX_TWILIGHT), string(STR_SUFFIX_FICTION)
                                 );
	7: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}



switch(FEAT_TRAINS, SELF, stack_df200_100, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_df200_100_livery;
	 1:  switch_df200_100_logo_livery;
}

switch (FEAT_TRAINS, SELF, switch_df200_100_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_DF200);
  } 
switch (FEAT_TRAINS, SELF, switch_df200_100_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_df200_100_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, df200_100, 1963) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_DF200_2);
  climates_available: ALL_CLIMATES;
  introduction_date: date(2011,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 2700 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 18;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 25;
  cost_factor: 97;
  length: 8;
  running_cost_factor: 101;
  running_cost_base: RUNNING_COST_DIESEL;
  misc_flags: bitmask(TRAIN_FLAG_SPRITE_STACK);
  variant_group: 1263;
  } 

  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DE),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_HF),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_df200_100_subtype_text;
  default: stack_df200_100;
  purchase: switch_df200_100_yeardep_purchase;
  name: switch_df200_100_name;
  }
}

//7stars



switch(FEAT_TRAINS, SELF, switch_df200_7000_livery, cargo_subtype) {
   1: spriteset_df200_7000_cc;
	spriteset_df200_7000;
}



switch(FEAT_TRAINS, SELF, switch_df200_7000_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JRK), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_DKRED), 
                                    string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_7STARS)
                                 );
	1: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}


switch (FEAT_TRAINS, SELF, switch_df200_7000_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_DF200);
  } 
switch (FEAT_TRAINS, SELF, switch_df200_7000_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_df200_7000_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }


item (FEAT_TRAINS, df200_7000, 1964) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_DF200_7);
  climates_available: ALL_CLIMATES;
  introduction_date: date(2013,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 2700 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 18;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 25;
  cost_factor: 97;
  length: 8;
  running_cost_factor: 101;
  running_cost_base: RUNNING_COST_DIESEL;
  misc_flags: bitmask(TRAIN_FLAG_2CC);
  variant_group: 1263;
  } 

  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DE),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PAX_JOY),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRK)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_df200_7000_subtype_text;
  default: switch_df200_7000_livery;
  purchase: spriteset_df200_7000_purchase;
  name: switch_df200_7000_name;
  }
}

//proto


switch(FEAT_TRAINS, SELF, switch_df200_proto_logo_yeardep, build_year) {
   0..2002: spriteset_df200_logo_white;
   2002..2018: spriteset_df200_logo_redbear;
	spriteset_df200_nologo_redbear;
}

switch(FEAT_TRAINS, SELF, switch_df200_proto_logo_livery, cargo_subtype) {
	0: switch_df200_proto_logo_yeardep;
   1: spriteset_df200_logo_white;
   2: spriteset_df200_logo_redbear;
	3: spriteset_df200_nologo_redbear;
   spriteset_blank;
}



switch(FEAT_TRAINS, SELF, switch_df200_proto_livery, cargo_subtype) {
	4: spriteset_df200_proto_cc;
	spriteset_df200_proto;
}



switch(FEAT_TRAINS, SELF, switch_df200_proto_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_WHITELOGO), string(STR_SUFFIX_INVERTER)
                                 );
	2: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_WHITELOGO), string(STR_SUFFIX_REDBEAR)
                                 );
	3: return string(STR_CONCAT_4, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_GREY)
                                    ), string(STR_SUFFIX_NOLOGO), string(STR_SUFFIX_REDBEAR)
                                 );
	4: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}



switch(FEAT_TRAINS, SELF, stack_df200_proto, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_df200_proto_livery;
	 1:  switch_df200_proto_logo_livery;
}


switch (FEAT_TRAINS, SELF, switch_df200_proto_name_purchase, getbits(extra_callback_info1, 8, 8)) { 
  1: return CB_RESULT_NO_TEXT; 
  return string(STR_NAME_DF200);
  } 
switch (FEAT_TRAINS, SELF, switch_df200_proto_name, getbits(extra_callback_info1, 0, 8)) { 
  0x20: switch_df200_proto_name_purchase; 
  return CB_RESULT_NO_TEXT;
  }

item (FEAT_TRAINS, df200_proto, 1063) {

property {
  sprite_id: SPRITE_ID_NEW_TRAIN;
  track_type: TR_1067_NE;
  name: string(STR_NAME_DF200_P);
  climates_available: ALL_CLIMATES;
  introduction_date: date(1992,1,1);
  speed: 120 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 2500 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  cargo_capacity: 1;
  cargo_allow_refit: [PASS];
  weight: 96;
  reliability_decay: 18;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 25;
  cost_factor: 96;
  length: 8;
  running_cost_factor: 100;
  running_cost_base: RUNNING_COST_DIESEL;
  misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
  variant_group: 1263;
  } 

  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_DE),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_PROTO),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_df200_proto_subtype_text;
  default: stack_df200_proto;
  purchase: spriteset_df200_proto_purchase;
  name: switch_df200_proto_name;
  }
}
spriteset(spriteset_hd300_red, "gfx/diesel/hd300.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_hd300_flip_red, "gfx/diesel/hd300.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_hd300_cc, "gfx/diesel/hd300.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_hd300_flip_cc, "gfx/diesel/hd300.png") {
	template_2cc_flip(1, 96)
}


spriteset(spriteset_hd300_red_purchase, "gfx/diesel/hd300.png") {
	template_purchase(1, 128)
}



//flip switches
switch(FEAT_TRAINS, SELF, switch_hd300_flip_red, vehicle_is_flipped) {
	0: spriteset_hd300_red;
	1: spriteset_hd300_flip_red;
}

switch(FEAT_TRAINS, SELF, switch_hd300_flip_cc, vehicle_is_flipped) {
	0: spriteset_hd300_cc;
	1: spriteset_hd300_flip_cc;
}





switch(FEAT_TRAINS, SELF, switch_hd300_livery, cargo_subtype) {
	1: switch_hd300_flip_cc;	
	switch_hd300_flip_red;
}



switch(FEAT_TRAINS, SELF, switch_hd300_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_WHITE)
                                    )
                                 );
	1: return string(STR_REFIT_CC);	
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, hd300, 1230) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_HD300);
  climates_available: ALL_CLIMATES;
  introduction_date: date(2011,1,1);
  speed: 110 km/h;
  air_drag_coefficient: 0;
  tractive_effort_coefficient:    0.28;
  power: 500 kW;
  dual_headed: 0;
  engine_class: ENGINE_CLASS_DIESEL;
  weight: 60;
  model_life: VEHICLE_NEVER_EXPIRES;
  vehicle_life: 40;
  length: 7;
	cargo_capacity: 1; 
	cargo_allow_refit: [PASS];
	reliability_decay: 13;
    cost_factor: 38;
	running_cost_factor: 45;
    running_cost_base: RUNNING_COST_DIESEL;
	misc_flags: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
	}


  graphics { // graphics for engine
  additional_text:	string(STR_CONCAT_4S, 
                        string(STR_DESC_POWER_HYBRID),
                        string(STR_DESC_NARROWGAUGE),
                        string(STR_DESC_USAGE_SH),
                        string(STR_CONCAT_1C, 
                           string(STR_SUFFIX_JRF)
                    )
                  );
  cargo_capacity: return 0;
  cargo_subtype_text: switch_hd300_subtype_text;
  default: switch_hd300_livery;
  purchase: spriteset_hd300_red_purchase;
  reverse_build_probability: return 50;
  }
}

//all purpose blank sprite

spriteset(spriteset_blank, "gfx/blank.png") {
	template_2cc_std(1, 1)
}

//universal taillights 8/8

spriteset(spriteset_taillights_8, "gfx/taillights_8.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_taillights_flip, "gfx/taillights_8.png") {
	template_2cc_flip(1, 1)
}


switch(FEAT_TRAINS, SELF, switch_taillights_8_flip, vehicle_is_flipped) {
	1: spriteset_taillights_flip;
	spriteset_taillights_8;
	}


switch(FEAT_TRAINS, SELF, switch_taillights_8, position_in_consist_from_end) {
	0: switch_taillights_8_flip;
	spriteset_blank;
	}

//universal taillights 7/8

spriteset(spriteset_taillights_7, "gfx/taillights_7.png") {
	template_2cc_std(1, 1)
}




switch(FEAT_TRAINS, SELF, switch_taillights_7_flip, vehicle_is_flipped) {
	1: spriteset_taillights_flip;
	spriteset_taillights_7;
	}


switch(FEAT_TRAINS, SELF, switch_taillights_7, position_in_consist_from_end) {
	0: switch_taillights_7_flip;
	spriteset_blank;
	}


//universal taillights 6/8

spriteset(spriteset_taillights_6, "gfx/taillights_6.png") {
	template_2cc_std(1, 1)
}




switch(FEAT_TRAINS, SELF, switch_taillights_6_flip, vehicle_is_flipped) {
	1: spriteset_taillights_flip;
	spriteset_taillights_6;
	}


switch(FEAT_TRAINS, SELF, switch_taillights_6, position_in_consist_from_end) {
	0: switch_taillights_6_flip;
	spriteset_blank;
	}


//universal taillights 5/8

spriteset(spriteset_taillights_5, "gfx/taillights_5.png") {
	template_2cc_std(1, 1)
}




switch(FEAT_TRAINS, SELF, switch_taillights_5_flip, vehicle_is_flipped) {
	1: spriteset_taillights_flip;
	spriteset_taillights_5;
	}


switch(FEAT_TRAINS, SELF, switch_taillights_5, position_in_consist_from_end) {
	0: switch_taillights_5_flip;
	spriteset_blank;
	}



//brake van super switch

switch(FEAT_TRAINS, SELF, switch_speedboost_5, hasbit(bitmask_consist_info, 5)) {
	1: return 75;
	CB_FAILED;
	}

switch(FEAT_TRAINS, SELF, switch_speedboost_4, hasbit(bitmask_consist_info, 4)) {
	1: return 85;
	switch_speedboost_5;
	}

switch(FEAT_TRAINS, SELF, switch_speedboost_3, hasbit(bitmask_consist_info, 3)) {
	1: return 95;
	switch_speedboost_4;
	}

switch(FEAT_TRAINS, SELF, switch_speedboost_2, hasbit(bitmask_consist_info, 2)) {
	1: return 100;
	switch_speedboost_3;
	}

switch(FEAT_TRAINS, SELF, switch_speedboost_1, hasbit(bitmask_consist_info, 1)) {
	1: return 110;
	switch_speedboost_2;
	}

// "7" stands for bitmask(CC_REFRIGERATED); only in this way it worked
switch(FEAT_TRAINS, SELF, switch_container_cargo_decay, hasbit(cargo_classes, 7)) {
	1: return 1000;
	return 185;
	}

spriteset(spriteset_yo_1_black, "gfx/brake/yo_1.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_yo_1_brown, "gfx/brake/yo_1.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_yo_1_stripe, "gfx/brake/yo_1.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_yo_1_cc, "gfx/brake/yo_1.png") {
	template_2cc_std(1, 96)
}



spriteset(spriteset_yo_1_purchase, "gfx/brake/yo_1.png") {
	template_purchase(1, 128)
}


switch(FEAT_TRAINS, SELF, switch_yo_1_livery, cargo_subtype) {
	0: spriteset_yo_1_black;
	1: spriteset_yo_1_brown;
	2: spriteset_yo_1_stripe;
	3: spriteset_yo_1_cc;
}



switch(FEAT_TRAINS, SELF, switch_yo_1_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK),
									string(STR_COLOUR_YELLOW)
                                    )
                                 );
	3: return string(STR_REFIT_CC);
	}



item (FEAT_TRAINS, yo_1, 1601) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_YO_1);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1870,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 1; 
		refit_cost: 0;
		cargo_allow_refit: [PASS];
		loading_speed: 1;
		weight: 20;
		cost_factor: 14;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 4;
		bitmask_vehicle_info: bitmask(5);//speed boost 75
	}
	graphics {
		speed: switch_speedboost_1;
		purchase_speed: return 75;
		cargo_capacity: return 0;
		default: switch_yo_1_livery;
		purchase: spriteset_yo_1_purchase;
		cargo_subtype_text: switch_yo_1_subtype_text;
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_BRAKE),
							string(STR_CONCAT_3C, 	
								string(STR_SUFFIX_JGR),								
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	}
}
spriteset(spriteset_yo_5000_black, "gfx/brake/yo_5000.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_yo_5000_green, "gfx/brake/yo_5000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_yo_5000_blue, "gfx/brake/yo_5000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_yo_5000_cc, "gfx/brake/yo_5000.png") {
	template_2cc_std(1, 96)
}



spriteset(spriteset_yo_5000_jgr_purchase, "gfx/brake/yo_5000.png") {
	template_purchase(1, 128)
}

spriteset(spriteset_yo_5000_jnr_purchase, "gfx/brake/yo_5000.png") {
	template_purchase(89, 128)
}

switch(FEAT_TRAINS, SELF, switch_yo_5000_purchase_yeardep, current_year) {
    0..1949: spriteset_yo_5000_jgr_purchase;
    spriteset_yo_5000_jnr_purchase;
    }



switch(FEAT_TRAINS, SELF, switch_yo_5000_livery, cargo_subtype) {
	0: spriteset_yo_5000_black;
	1: spriteset_yo_5000_green;
	2: spriteset_yo_5000_blue;
	3: spriteset_yo_5000_cc;
}



switch(FEAT_TRAINS, SELF, switch_yo_5000_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_GREEN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE),
									string(STR_COLOUR_YELLOW)
                                    )
                                 );
	3: return string(STR_REFIT_CC);
	}



item (FEAT_TRAINS, yo_5000, 1600) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_YO_5000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1928,1,1);//change to 1949 when yo 1500 added
		speed: 85 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 1; 
		refit_cost: 0;
		cargo_allow_refit: [PASS];
		loading_speed: 1;
		weight: 20;
		cost_factor: 22;
		running_cost_factor: 10;
		running_cost_base: RUNNING_COST_STEAM;
		length: 5;
		bitmask_vehicle_info: bitmask(4);//speed boost 85
	}
	graphics {
		speed: switch_speedboost_1;
		purchase_speed: return 85;
		cargo_capacity: return 0;
		default: switch_yo_5000_livery;
		purchase: switch_yo_5000_purchase_yeardep;
		cargo_subtype_text: switch_yo_5000_subtype_text;
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_BRAKE),
							string(STR_CONCAT_2C, 	
								string(STR_SUFFIX_JGR),								
								string(STR_SUFFIX_JNR)
							)
						);
	}
}
spriteset(spriteset_yo_8000_black, "gfx/brake/yo_8000.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_yo_8000_green, "gfx/brake/yo_8000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_yo_8000_blue, "gfx/brake/yo_8000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_yo_38000_redblue, "gfx/brake/yo_8000.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_yo_8000_whitered, "gfx/brake/yo_8000.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_yo_8000_pink, "gfx/brake/yo_8000.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_yo_8000_blackorange, "gfx/brake/yo_8000.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_yo_38000_cc, "gfx/brake/yo_8000.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_yo_8000_cc, "gfx/brake/yo_8000.png") {
	template_2cc_std(1, 256)
}


spriteset(spriteset_yo_8000_purchase, "gfx/brake/yo_8000.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_yo_38000_purchase, "gfx/brake/yo_8000.png") {
	template_purchase(89, 288)
}

/*
switch(FEAT_TRAINS, SELF, switch_yo_8000_purchase_yeardep, current_year) {
    0..1987: spriteset_yo_8000_jnr_purchase;
    spriteset_yo_38000_jrf_purchase;
    }
*/

switch(FEAT_TRAINS, SELF, switch_yo_8000_livery, cargo_subtype) {
	0: spriteset_yo_8000_black;
	1: spriteset_yo_8000_green;
	2: spriteset_yo_8000_blue;
	3: spriteset_yo_8000_blackorange;
	4: spriteset_yo_8000_whitered;
	5: spriteset_yo_8000_pink;
	6: spriteset_yo_8000_cc;
}



switch(FEAT_TRAINS, SELF, switch_yo_8000_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_GREEN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK), 
                                    string(STR_COLOUR_ORANGE)
                                    )
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JRK), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_WHITE), 
                                    string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_HYPERSALOON)
                                 );
	5: return string(STR_CONCAT_3, string(STR_SUFFIX_MPL), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_PINK)
                                    ), string(STR_SUFFIX_SEMIFIC)
                                 );							 
	6: return string(STR_REFIT_CC);
	}



item (FEAT_TRAINS, yo_8000, 1935) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_YO_8000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1974,1,1);
		speed: 95 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 1; 
		refit_cost: 0;
		cargo_allow_refit: [PASS];
//		loading_speed: 1;
		weight: 11;
		cost_factor: 40;
		running_cost_factor: 12;
		running_cost_base: RUNNING_COST_STEAM;
		length: 4;
		bitmask_vehicle_info: bitmask(3);//speed boost 95
	}
	graphics {
		speed: switch_speedboost_1;
		purchase_speed: return 95;
		cargo_capacity: return 0;
		default: switch_yo_8000_livery;
		purchase: spriteset_yo_8000_purchase;
		cargo_subtype_text: switch_yo_8000_subtype_text;
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_BRAKE),
							string(STR_CONCAT_2C, 	
								string(STR_SUFFIX_JNR),								
								string(STR_SUFFIX_JR)
							)
						);
		reverse_build_probability: return 50;
	}
}



switch(FEAT_TRAINS, SELF, switch_yo_38000_livery, cargo_subtype) {
	0: spriteset_yo_38000_redblue;
	1: spriteset_yo_8000_black;
	2: spriteset_yo_8000_blue;
	3: spriteset_yo_38000_cc;
}



switch(FEAT_TRAINS, SELF, switch_yo_38000_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF),
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_RED), 
									string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
	3: return string(STR_REFIT_CC);
	}


item (FEAT_TRAINS, yo_38000, 1603) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_YO_38000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1994,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 1; 
		refit_cost: 0;
		cargo_allow_refit: [PASS];
//		loading_speed: 1;
		weight: 11;
		cost_factor: 40;
		running_cost_factor: 15;
		running_cost_base: RUNNING_COST_STEAM;
		length: 4;
		bitmask_vehicle_info: bitmask(1);//speed boost 110
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		variant_group: 1935;
	}
	graphics {
		speed: switch_speedboost_1;
		purchase_speed: return 110;
		cargo_capacity: return 0;
		default: switch_yo_38000_livery;
		purchase: spriteset_yo_38000_purchase;
		cargo_subtype_text: switch_yo_38000_subtype_text;
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_BRAKE),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JRF)
							)
						);
		reverse_build_probability: return 50;
	}
}

//brake van super switch

/*

switch(FEAT_TRAINS, SELF, switch_speedboost_3, hasbit(bitmask_consist_info, 3)) {
	1: return 75;
	CB_FAILED;
	}

switch(FEAT_TRAINS, SELF, switch_speedboost_2, hasbit(bitmask_consist_info, 2)) {
	1: return 85;
	switch_speedboost_3;
	}

switch(FEAT_TRAINS, SELF, switch_speedboost_1, hasbit(bitmask_consist_info, 1)) {
	1: return 95;
	switch_speedboost_2;
	}

switch(FEAT_TRAINS, SELF, switch_speedboost_100, hasbit(bitmask_consist_info, 1)) {
	1: return 100;
	switch_speedboost_1;
	}

*/
spriteset(spriteset_yo_9000_black, "gfx/brake/yo_9000.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_yo_9000_stripe, "gfx/brake/yo_9000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_yo_9000_blue, "gfx/brake/yo_9000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_yo_9000_cc, "gfx/brake/yo_9000.png") {
	template_2cc_std(1, 96)
}



spriteset(spriteset_yo_9000_blue_purchase, "gfx/brake/yo_9000.png") {
	template_purchase(1, 128)
}

spriteset(spriteset_yo_9000_stripe_purchase, "gfx/brake/yo_9000.png") {
	template_purchase(89, 128)
}

switch(FEAT_TRAINS, SELF, switch_yo_9000_purchase_yeardep, current_year) {
    0..1972: spriteset_yo_9000_blue_purchase;
    spriteset_yo_9000_stripe_purchase;
    }

switch(FEAT_TRAINS, SELF, switch_yo_9000_yeardep, build_year) {
    0..1972: spriteset_yo_9000_blue;
    spriteset_yo_9000_stripe;
    }


switch(FEAT_TRAINS, SELF, switch_yo_9000_livery, cargo_subtype) {
	0: switch_yo_9000_yeardep;
	1: spriteset_yo_9000_black;
	2: spriteset_yo_9000_stripe;
	3: spriteset_yo_9000_blue;
	4: spriteset_yo_9000_cc;
}



switch(FEAT_TRAINS, SELF, switch_yo_9000_subtype_text, cargo_subtype) {
	0: return string(STR_SUFFIX_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE),
									string(STR_COLOUR_YELLOW)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
	4: return string(STR_REFIT_CC);
	}



item (FEAT_TRAINS, yo_9000, 1604) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_YO_9000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1968,1,1);
		speed: 100 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 1; 
		refit_cost: 0;
		cargo_allow_refit: [PASS];
		loading_speed: 1;
		weight: 10;
		cost_factor: 40;
		running_cost_factor: 12;
		running_cost_base: RUNNING_COST_STEAM;
		length: 4;
		misc_flags: bitmask(TRAIN_FLAG_2CC);
		bitmask_vehicle_info: bitmask(2);//speed boost 100
	}
	graphics {
		speed: switch_speedboost_1;
		purchase_speed: return 100;
		cargo_capacity: return 0;
		default: switch_yo_9000_livery;
		purchase: switch_yo_9000_purchase_yeardep;
		cargo_subtype_text: switch_yo_9000_subtype_text;
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_BRAKE),
							string(STR_CONCAT_1C, 	
								string(STR_SUFFIX_JNR)
							)
						);
		reverse_build_probability: return 50;
	}
}


spriteset(spriteset_pax_1870_3rd_compartment_brown, "gfx/paxmail/paxmail-1870.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_1870_3rd_combine_brown, "gfx/paxmail/paxmail-1870.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_1870_3rd_combine_brown_flip, "gfx/paxmail/paxmail-1870.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_pax_1870_3rd_compartment_jgr, "gfx/paxmail/paxmail-1870.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_1870_3rd_combine_jgr, "gfx/paxmail/paxmail-1870.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_1870_3rd_combine_jgr_flip, "gfx/paxmail/paxmail-1870.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_pax_1870_2nd_compartment, "gfx/paxmail/paxmail-1870.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_1870_mail_brown, "gfx/paxmail/paxmail-1870.png") {
	template_2cc_std(1, 160)
}



//purchase sprites

spriteset(spriteset_pax_1870_brown_purchase, "gfx/paxmail/paxmail-1870.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_pax_1870_jgr_purchase, "gfx/paxmail/paxmail-1870.png") {
	template_purchase(1, 224)
}

spriteset(spriteset_mail_1870_jgr_purchase, "gfx/paxmail/paxmail-1870.png") {
	template_purchase(89, 224)
}


//purchase switches
switch(FEAT_TRAINS, SELF, switch_pax_1870_yeardep_purchase, current_year) {
	0..1897: spriteset_pax_1870_brown_purchase;
	spriteset_pax_1870_jgr_purchase;
}




//brown auto formation
switch(FEAT_TRAINS, SELF, switch_pax_1870_brown_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_1870_3rd_combine_brown_flip;
	spriteset_pax_1870_3rd_compartment_brown;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_1870_brown_beginning, position_in_vehid_chain) {
	0: spriteset_pax_1870_3rd_combine_brown;
	switch_pax_1870_brown_end;
	}
	
	
	
//jgr auto formation
switch(FEAT_TRAINS, SELF, switch_pax_1870_jgr_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_1870_2nd_compartment;
	spriteset_pax_1870_3rd_compartment_jgr;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_1870_jgr_beginning, position_in_vehid_chain) {
	0: spriteset_pax_1870_3rd_combine_jgr;
	switch_pax_1870_jgr_end;
	}
	
	




switch(FEAT_TRAINS, SELF, switch_pax_1870_yeardep, build_year) {
	0..1897: switch_pax_1870_brown_beginning;
	switch_pax_1870_jgr_beginning;
	}




switch(FEAT_TRAINS, SELF, switch_pax_1870_livery, cargo_subtype) {
	0: switch_pax_1870_yeardep;
	1: switch_pax_1870_brown_beginning;
	2: switch_pax_1870_jgr_beginning;
	3: spriteset_pax_1870_3rd_compartment_brown;
	4: spriteset_pax_1870_3rd_combine_brown;
	5: spriteset_pax_1870_3rd_combine_brown_flip;
	6: spriteset_pax_1870_3rd_compartment_jgr;
	7: spriteset_pax_1870_3rd_combine_jgr;
	8: spriteset_pax_1870_3rd_combine_jgr_flip;
	9: spriteset_pax_1870_2nd_compartment;
}



switch(FEAT_TRAINS, SELF, switch_pax_1870_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARFORM);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_JGR)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_REFIT_PAX_HA4995), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	4: return string(STR_CONCAT_3, string(STR_REFIT_PAX_HABU3), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	5: return string(STR_CONCAT_4, string(STR_REFIT_PAX_HABU3), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 ), string(STR_SUFFIX_FLIPPED)
	                                );
	6: return string(STR_CONCAT_3, string(STR_REFIT_PAX_HA4995), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_RED)
									 )
	                                );
	7: return string(STR_CONCAT_3, string(STR_REFIT_PAX_HABU3), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_RED)
									 )
	                                );
	8: return string(STR_CONCAT_4, string(STR_REFIT_PAX_HABU3), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_RED)
									 ), string(STR_SUFFIX_FLIPPED)
	                                );
	9: return string(STR_CONCAT_3, string(STR_REFIT_PAX_RO481), 
									string(STR_SUFFIX_PAX_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_BLUE)
									 )
	                                );
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, pax_1870, 1536) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PAX_HA4995);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1870,1,1);
		speed: 70 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 36; 
		refit_cost: 0;
		default_cargo_type: PASS;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 50;
		running_cost_factor: 5;
		running_cost_base: RUNNING_COST_STEAM;
		length: 5;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_LOC),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_PRIVATE)
								)
							);

		cargo_capacity: return 36;
		cargo_age_period: return 100;
		default: switch_pax_1870_livery;
		purchase: switch_pax_1870_yeardep_purchase;
		cargo_subtype_text: switch_pax_1870_subtype_text;
	}
}


switch(FEAT_TRAINS, SELF, switch_mail_1870_livery, cargo_subtype) {
	0: spriteset_pax_1870_mail_brown;
	1: spriteset_pax_1870_3rd_combine_brown;
	2: spriteset_pax_1870_3rd_combine_brown_flip;
	3: spriteset_pax_1870_3rd_combine_jgr;
	4: spriteset_pax_1870_3rd_combine_jgr_flip;	
}


switch(FEAT_TRAINS, SELF, switch_mail_1870_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_HANI1), 
									string(STR_SUFFIX_MAIL),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	1: return string(STR_CONCAT_3, string(STR_REFIT_PAX_HABU3), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	2: return string(STR_CONCAT_4, string(STR_REFIT_PAX_HABU3), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 ), string(STR_SUFFIX_FLIPPED)
	                                );
	3: return string(STR_CONCAT_3, string(STR_REFIT_PAX_HABU3), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_RED)
									 )
	                                );
	4: return string(STR_CONCAT_4, string(STR_REFIT_PAX_HABU3), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_RED)
									 ), string(STR_SUFFIX_FLIPPED)
	                                );
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, mail_1870, 1664) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_HANI1);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1870,1,1);
		speed: 70 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 36; 
		refit_cost: 0;
		cargo_age_period: 185;
		default_cargo_type: PASS;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_ARMOURED); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 25;
		running_cost_factor: 4;
		running_cost_base: RUNNING_COST_STEAM;
		length: 5;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_LUG),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_PRIVATE)
								)
							);

		cargo_capacity: return 36;
		default: switch_mail_1870_livery;
		purchase: spriteset_mail_1870_jgr_purchase;
		cargo_subtype_text: switch_mail_1870_subtype_text;
	}
}
spriteset(spriteset_pax_1880_hcc_clerestory, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_1880_hcc_flat, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_1880_jgr_3rd_flat, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_1880_jgr_3rd_clerestory, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_1880_jgr_2nd_clerestory, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_1880_jgr_1st_clerestory, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_pax_1880_jgr_3rdclass_end, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_pax_1880_brown_clerestory, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_pax_1880_brown_flat, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_pax_1880_hcc_combine, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_pax_1880_hcc_mail, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_pax_1880_brown_combine, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 352)
}

spriteset(spriteset_pax_1880_jgr_combine, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 384)
}

spriteset(spriteset_pax_1880_jgr_mail, "gfx/paxmail/paxmail-1880.png") {
	template_2cc_std(1, 416)
}


//purchase sprites
spriteset(spriteset_pax_1880_hcc_purchase, "gfx/paxmail/paxmail-1880.png") {
	template_purchase(1, 448)
}

spriteset(spriteset_mail_1880_hcc_purchase, "gfx/paxmail/paxmail-1880.png") {
	template_purchase(1, 480)
}

spriteset(spriteset_pax_1880_jgr_purchase, "gfx/paxmail/paxmail-1880.png") {
	template_purchase(89, 448)
}

spriteset(spriteset_mail_1880_jgr_purchase, "gfx/paxmail/paxmail-1880.png") {
	template_purchase(89, 480)
}

//purchase switches
switch(FEAT_TRAINS, SELF, switch_pax_1880_yeardep_purchase, current_year) {
	0..1906: spriteset_pax_1880_hcc_purchase;
	spriteset_pax_1880_jgr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_mail_1880_yeardep_purchase, current_year) {
	0..1906: spriteset_mail_1880_hcc_purchase;
	spriteset_mail_1880_jgr_purchase;
}




//hcc auto formation
random_switch (FEAT_TRAINS, SELF, random_pax_1880_hcc_auto_middle) {
	1: spriteset_pax_1880_hcc_flat;
	2: spriteset_pax_1880_hcc_clerestory;
}

switch(FEAT_TRAINS, SELF, switch_pax_1880_hcc_auto_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_1880_hcc_combine;
	random_pax_1880_hcc_auto_middle;
	}
	
	
//brown auto formation
random_switch (FEAT_TRAINS, SELF, random_pax_1880_brown_auto_middle) {
	1: spriteset_pax_1880_brown_flat;
	1: spriteset_pax_1880_brown_clerestory;
}

switch(FEAT_TRAINS, SELF, switch_pax_1880_brown_auto_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_1880_brown_combine;
	random_pax_1880_brown_auto_middle;
	}
	
	
//jgr auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_1880_jgr_auto_middle) {
	1: spriteset_pax_1880_jgr_3rd_clerestory;
	2: spriteset_pax_1880_jgr_3rd_flat;
	1: spriteset_pax_1880_jgr_2nd_clerestory;
}


	random_switch (FEAT_TRAINS, SELF, random_pax_1880_jgr_auto_end) {
	1: spriteset_pax_1880_jgr_3rdclass_end;
	2: spriteset_pax_1880_jgr_combine;
}

	random_switch (FEAT_TRAINS, SELF, random_pax_1880_jgr_auto_beginning) {
	1: spriteset_pax_1880_jgr_2nd_clerestory;
	1: spriteset_pax_1880_jgr_1st_clerestory;
}


switch(FEAT_TRAINS, SELF, switch_pax_1880_jgr_auto_end, position_in_vehid_chain_from_end) {
	0: random_pax_1880_jgr_auto_end;
	random_pax_1880_jgr_auto_middle;
	}

switch(FEAT_TRAINS, SELF, switch_pax_1880_jgr_auto_beginning, position_in_vehid_chain) {
	0: random_pax_1880_jgr_auto_beginning;
	switch_pax_1880_jgr_auto_end;
	}
	
random_switch (FEAT_TRAINS, SELF, random_pax_1880_jgr_clerestory_auto_middle) {
	3: spriteset_pax_1880_jgr_3rd_clerestory;
	1: spriteset_pax_1880_jgr_2nd_clerestory;
}
	
switch(FEAT_TRAINS, SELF, switch_pax_1880_jgr_clerestory_auto_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_1880_jgr_3rdclass_end;
	random_pax_1880_jgr_clerestory_auto_middle;
	}

switch(FEAT_TRAINS, SELF, switch_pax_1880_jgr_clerestory_auto_beginning, position_in_vehid_chain) {
	0: random_pax_1880_jgr_auto_beginning;
	switch_pax_1880_jgr_clerestory_auto_end;
	}






switch(FEAT_TRAINS, SELF, switch_pax_1880_yeardep, build_year) {
	0..1906: switch_pax_1880_hcc_auto_end;
	1906..1910: switch_pax_1880_jgr_auto_beginning;
	switch_pax_1880_jgr_clerestory_auto_beginning;
	}




switch(FEAT_TRAINS, SELF, switch_pax_1880_livery, cargo_subtype) {
	1: switch_pax_1880_hcc_auto_end;
	2: switch_pax_1880_jgr_auto_beginning;
	3: switch_pax_1880_brown_auto_end;
	4: spriteset_pax_1880_hcc_clerestory;
	5: spriteset_pax_1880_hcc_flat;
	6: spriteset_pax_1880_hcc_combine;
	7: spriteset_pax_1880_jgr_1st_clerestory;
	8: spriteset_pax_1880_jgr_2nd_clerestory;
	9: spriteset_pax_1880_jgr_3rd_clerestory;
	10: spriteset_pax_1880_jgr_3rd_flat;
	11: spriteset_pax_1880_jgr_combine;
	12: spriteset_pax_1880_brown_clerestory;
	13: spriteset_pax_1880_brown_flat;
	14: spriteset_pax_1880_brown_combine;
	switch_pax_1880_yeardep;
}



switch(FEAT_TRAINS, SELF, switch_pax_1880_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARFORM);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_HCC)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_JGR)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BROWN)
                                    )
                                 );
	4: return string(STR_CONCAT_4, string(STR_REFIT_PAX_FKI5670), 
									string(STR_SUFFIX_PAX_1CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_YELLOW), 
                                     string(STR_COLOUR_BROWN)
									 ), string(STR_SUFFIX_CLERESTORY)
	                                );
	5: return string(STR_CONCAT_4, string(STR_REFIT_PAX_FKH7925), 
									string(STR_SUFFIX_PAX_3CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_YELLOW), 
                                     string(STR_COLOUR_BROWN)
									 ), string(STR_SUFFIX_FLATROOF)
	                                );
	6: return string(STR_CONCAT_4, string(STR_REFIT_PAXMAIL_FKHY8050), 
									string(STR_SUFFIX_COMBINE_3CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_YELLOW), 
                                     string(STR_COLOUR_BROWN)
									 ), string(STR_SUFFIX_CLERESTORY)
	                                );
	7: return string(STR_CONCAT_4, string(STR_REFIT_PAX_FKI5670), 
									string(STR_SUFFIX_PAX_1CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_WHITE)
									 ), string(STR_SUFFIX_CLERESTORY)
	                                );
	8: return string(STR_CONCAT_4, string(STR_REFIT_PAX_FKR5675), 
									string(STR_SUFFIX_PAX_2CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_BLUE)
									 ), string(STR_SUFFIX_CLERESTORY)
	                                );
	9: return string(STR_CONCAT_4, string(STR_REFIT_PAX_FKH7945), 
									string(STR_SUFFIX_PAX_3CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 ), string(STR_SUFFIX_CLERESTORY)
	                                );
	10: return string(STR_CONCAT_4, string(STR_REFIT_PAX_FKH7925), 
									string(STR_SUFFIX_PAX_3CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 ), string(STR_SUFFIX_FLATROOF)
	                                );
	11: return string(STR_CONCAT_4, string(STR_REFIT_PAXMAIL_FKHY8050), 
									string(STR_SUFFIX_COMBINE_3CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 ), string(STR_SUFFIX_FLATROOF)
	                                );
	12: return string(STR_CONCAT_4, string(STR_REFIT_PAX_FKI5670), 
									string(STR_SUFFIX_PAX_1CLASS), 
									string(STR_CONCAT_1F,  
                                     string(STR_COLOUR_BROWN)
									 ), string(STR_SUFFIX_CLERESTORY)
	                                );
	13: return string(STR_CONCAT_4, string(STR_REFIT_PAX_FKH7925), 
									string(STR_SUFFIX_PAX_3CLASS), 
									string(STR_CONCAT_1F,  
                                     string(STR_COLOUR_BROWN)
									 ), string(STR_SUFFIX_FLATROOF)
	                                );
	14: return string(STR_CONCAT_4, string(STR_REFIT_PAXMAIL_FKHY8050), 
									string(STR_SUFFIX_COMBINE_3CLASS), 
									string(STR_CONCAT_1F,  
                                     string(STR_COLOUR_BROWN)
									 ), string(STR_SUFFIX_FLATROOF)
	                                );
	   return CB_RESULT_NO_TEXT;
	}





item (FEAT_TRAINS, pax_1880, 1537) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PAX_FUKOHA7945);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1880,1,1);
		speed: 80 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 50; 
		refit_cost: 0;
		cargo_age_period: 120;
		default_cargo_type: PASS;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 55;
		running_cost_factor: 6;
		running_cost_base: RUNNING_COST_STEAM;
		length: 6;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_EXP),
								string(STR_CONCAT_3C, 
									string(STR_SUFFIX_HCC),
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_PRIVATE)
								)
							);

		cargo_capacity: return 50;
		cargo_age_period: return 120;
		default: switch_pax_1880_livery;
		purchase: switch_pax_1880_yeardep_purchase;
		cargo_subtype_text: switch_pax_1880_subtype_text;
	}
}




switch(FEAT_TRAINS, SELF, switch_mail_1880_yeardep, build_year) {
	0..1906: spriteset_pax_1880_hcc_mail;
	spriteset_pax_1880_jgr_mail;
	}

switch(FEAT_TRAINS, SELF, switch_mail_1880_length, cargo_subtype) {
	1: return 5;
	2: return 6;
	3: return 5;
	4: return 6;
	5: return 6;
	return 5;
}


switch(FEAT_TRAINS, SELF, switch_mail_1880_livery, cargo_subtype) {
	1: spriteset_pax_1880_hcc_mail;
	2: spriteset_pax_1880_hcc_combine;
	3: spriteset_pax_1880_jgr_mail;
	4: spriteset_pax_1880_jgr_combine;
	5: spriteset_pax_1880_brown_combine;
	switch_mail_1880_yeardep;
}



switch(FEAT_TRAINS, SELF, switch_mail_1880_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_KN8890), 
									string(STR_SUFFIX_MAIL), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_YELLOW), 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	2: return string(STR_CONCAT_3, string(STR_REFIT_PAXMAIL_FKHY8050), 
									string(STR_SUFFIX_COMBINE_3CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_YELLOW), 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	3: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_KN8890), 
									string(STR_SUFFIX_MAIL), 
									string(STR_CONCAT_1F,  
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	4: return string(STR_CONCAT_3, string(STR_REFIT_PAXMAIL_FKHY8050), 
									string(STR_SUFFIX_COMBINE_3CLASS), 
									string(STR_CONCAT_2F,  
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_RED)
									 )
	                                );
	5: return string(STR_CONCAT_3, string(STR_REFIT_PAXMAIL_FKHY8050), 
									string(STR_SUFFIX_COMBINE_3CLASS), 
									string(STR_CONCAT_1F,  
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	   return CB_RESULT_NO_TEXT;
	}





item (FEAT_TRAINS, mail_1880, 1665) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_KONI_8890);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1880,1,1);
		speed: 80 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 50; 
		refit_cost: 0;
		default_cargo_type: PASS;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_ARMOURED); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 30;
		running_cost_factor: 5;
		running_cost_base: RUNNING_COST_STEAM;
		length: 5;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_LUG),
								string(STR_CONCAT_3C, 
									string(STR_SUFFIX_HCC),
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_PRIVATE)
								)
							);

		cargo_capacity: return 50;
		default: switch_mail_1880_livery;
		purchase: switch_mail_1880_yeardep_purchase;
		cargo_subtype_text: switch_mail_1880_subtype_text;
		length: switch_mail_1880_length;
	}
}
spriteset(spriteset_pax_1910_17m_3rd, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_1910_17m_3rd_end, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_1910_17m_2nd, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_1910_17m_2nd_end, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_1910_17m_1st, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_1910_17m_2nd_sleeper, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_pax_1910_17m_1st_sleeper, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_pax_1910_17m_diner, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_pax_1910_17m_combine, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_pax_1910_17m_combine_end, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_pax_1910_17m_luggage, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_pax_1910_17m_luggage_end, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 352)
}

spriteset(spriteset_pax_1910_17m_mail, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 384)
}

spriteset(spriteset_pax_1910_17m_mail_end, "gfx/paxmail/paxmail-1910-17m.png") {
	template_2cc_std(1, 416)
}


//purchase sprites
spriteset(spriteset_pax_1910_17m_jgr_purchase, "gfx/paxmail/paxmail-1910-17m.png") {
	template_purchase(1, 448)
}

spriteset(spriteset_mail_1910_17m_jgr_purchase, "gfx/paxmail/paxmail-1910-17m.png") {
	template_purchase(1, 480)
}

spriteset(spriteset_pax_1910_17m_jnr_purchase, "gfx/paxmail/paxmail-1910-17m.png") {
	template_purchase(89, 448)
}

spriteset(spriteset_mail_1910_17m_jnr_purchase, "gfx/paxmail/paxmail-1910-17m.png") {
	template_purchase(89, 480)
}

//don't need jnr

/* 
switch(FEAT_TRAINS, SELF, switch_pax_1910_yeardep_purchase, current_year) {
	0..1949: spriteset_pax_1910_17m_jgr_purchase;
	spriteset_pax_1910_17m_jnr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_mail_1910_yeardep_purchase, current_year) {
	0..1949: spriteset_mail_1910_17m_jgr_purchase;
	spriteset_mail_1910_17m_jnr_purchase;
}
*/


	
//17m local auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_1910_17m_local_auto_middle) {
	3: spriteset_pax_1910_17m_3rd;
	1: spriteset_pax_1910_17m_3rd_end;
	1: spriteset_pax_1910_17m_2nd;
}


	random_switch (FEAT_TRAINS, SELF, random_pax_1910_17m_local_auto_end) {
	1: spriteset_pax_1910_17m_3rd_end;
	2: spriteset_pax_1910_17m_combine_end;
}

	random_switch (FEAT_TRAINS, SELF, random_pax_1910_17m_local_auto_beginning) {
	1: spriteset_pax_1910_17m_2nd;
	1: spriteset_pax_1910_17m_combine;
}

	random_switch (FEAT_TRAINS, SELF, random_pax_1910_17m_local_auto_diner) {
	1: spriteset_pax_1910_17m_2nd;
	1: spriteset_pax_1910_17m_diner;
}


switch(FEAT_TRAINS, SELF, switch_pax_1910_17m_local_auto_end, position_in_consist_from_end) {
	0: random_pax_1910_17m_local_auto_end;
	random_pax_1910_17m_local_auto_middle;
	}

switch(FEAT_TRAINS, SELF, switch_pax_1910_17m_local_auto_beginning, position_in_vehid_chain) {
	0: random_pax_1910_17m_local_auto_beginning;
	3: random_pax_1910_17m_local_auto_diner;
	switch_pax_1910_17m_local_auto_end;
	}


//17m express auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_1910_17m_express_auto_middle) {
	1: spriteset_pax_1910_17m_2nd_end;
	2: spriteset_pax_1910_17m_2nd;
}


	random_switch (FEAT_TRAINS, SELF, random_pax_1910_17m_express_auto_beginning) {
	1: spriteset_pax_1910_17m_2nd;
	1: spriteset_pax_1910_17m_2nd_sleeper;
	1: spriteset_pax_1910_17m_1st;
}


switch(FEAT_TRAINS, SELF, switch_pax_1910_17m_express_auto_end, position_in_consist_from_end) {
	0: spriteset_pax_1910_17m_2nd_end;
	random_pax_1910_17m_express_auto_middle;
	}

switch(FEAT_TRAINS, SELF, switch_pax_1910_17m_express_auto_beginning, position_in_vehid_chain) {
	0..2: spriteset_pax_1910_17m_1st;
	3: spriteset_pax_1910_17m_diner;
	4: random_pax_1910_17m_express_auto_beginning;
	switch_pax_1910_17m_express_auto_end;
	}


//17m sleeper auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_1910_17m_sleeper_auto_middle) {
	3: spriteset_pax_1910_17m_2nd_sleeper;
	1: spriteset_pax_1910_17m_1st_sleeper;
}


	random_switch (FEAT_TRAINS, SELF, random_pax_1910_17m_sleeper_auto_end) {
	1: spriteset_pax_1910_17m_3rd_end;
	2: spriteset_pax_1910_17m_combine_end;
}

	random_switch (FEAT_TRAINS, SELF, random_pax_1910_17m_sleeper_auto_beginning) {
	1: spriteset_pax_1910_17m_1st_sleeper;
	1: spriteset_pax_1910_17m_diner;
}


switch(FEAT_TRAINS, SELF, switch_pax_1910_17m_sleeper_auto_end, position_in_consist_from_end) {
	0: random_pax_1910_17m_sleeper_auto_end;
	random_pax_1910_17m_sleeper_auto_middle;
	}

switch(FEAT_TRAINS, SELF, switch_pax_1910_17m_sleeper_auto_beginning, position_in_vehid_chain) {
	0: random_pax_1910_17m_sleeper_auto_beginning;
	switch_pax_1910_17m_sleeper_auto_end;
	}



//todo add postwar brown


switch(FEAT_TRAINS, SELF, switch_pax_1910_livery, cargo_subtype) {
	1: switch_pax_1910_17m_express_auto_beginning;
	2: switch_pax_1910_17m_sleeper_auto_beginning;
	3: spriteset_pax_1910_17m_3rd;
	4: spriteset_pax_1910_17m_3rd_end;
	5: spriteset_pax_1910_17m_2nd;
	6: spriteset_pax_1910_17m_2nd_end;
	7: spriteset_pax_1910_17m_1st;
	8: spriteset_pax_1910_17m_2nd_sleeper;
	9: spriteset_pax_1910_17m_1st_sleeper;
	10: spriteset_pax_1910_17m_diner;
	11: spriteset_pax_1910_17m_combine;
	12: spriteset_pax_1910_17m_combine_end;
	switch_pax_1910_17m_local_auto_beginning;
}


switch(FEAT_TRAINS, SELF, switch_pax_1910_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_LOCAL)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_LTDEXP)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_SLEEPER)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_REFIT_PAX_HOHA6810), 
									string(STR_SUFFIX_PAX_3CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 )
	                                );
	4: return string(STR_CONCAT_4, string(STR_REFIT_PAX_HOHAFU7570), 
									string(STR_SUFFIX_PAX_3CLASS), 
									string(STR_SUFFIX_CONDUCTOR),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 )
	                                );
	5: return string(STR_CONCAT_3, string(STR_REFIT_PAX_HORO5535), 
									string(STR_SUFFIX_PAX_2CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	6: return string(STR_CONCAT_4, string(STR_REFIT_PAX_HOROFU5615), 
									string(STR_SUFFIX_PAX_2CLASS), 
									string(STR_SUFFIX_CONDUCTOR),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	7: return string(STR_CONCAT_3, string(STR_REFIT_PAX_HOYA5100), 
									string(STR_SUFFIX_PAX_1CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_CREAM)
									 )
	                                );
	8: return string(STR_CONCAT_3, string(STR_REFIT_PAX_INERO5135), 
									string(STR_SUFFIX_SLEEPER_2CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	9: return string(STR_CONCAT_3, string(STR_REFIT_PAX_INAI5035), 
									string(STR_SUFFIX_SLEEPER_1CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_CREAM)
									 )
	                                );
	10: return string(STR_CONCAT_3, string(STR_REFIT_PAX_HOSHI5065), 
									string(STR_SUFFIX_DINER), 
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	11: return string(STR_CONCAT_3, string(STR_REFIT_PAXMAIL_NAHANI8430), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 )
	                                );
	12: return string(STR_CONCAT_4, string(STR_REFIT_PAXMAIL_NAHANI8430), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 ), string(STR_SUFFIX_FLIPPED)
	                                );
	   return CB_RESULT_NO_TEXT;
	}





item (FEAT_TRAINS, pax_1910_17m, 1538) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PAX_HOHA6810);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1910,1,1);
		speed: 95 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 75; 
		refit_cost: 0;
		default_cargo_type: PASS;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 65;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_EXP),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_JGR)
								)
							);

		cargo_capacity: return 75;
		default: switch_pax_1910_livery;
		purchase: spriteset_pax_1910_17m_jgr_purchase;
		cargo_subtype_text: switch_pax_1910_subtype_text;
	}
}




switch(FEAT_TRAINS, SELF, switch_mail_1910_mail_end, position_in_consist_from_end) {
	0: spriteset_pax_1910_17m_mail_end;
	spriteset_pax_1910_17m_mail;
	}

switch(FEAT_TRAINS, SELF, switch_mail_1910_luggage_end, position_in_consist_from_end) {
	0: spriteset_pax_1910_17m_luggage_end;
	spriteset_pax_1910_17m_luggage;
	}
	
switch(FEAT_TRAINS, SELF, switch_mail_1910_combine_end, position_in_consist_from_end) {
	0: spriteset_pax_1910_17m_combine_end;
	spriteset_pax_1910_17m_combine;
	}

random_switch (FEAT_TRAINS, SELF, random_mail_1910) {
	3: switch_mail_1910_luggage_end;
	1: switch_mail_1910_mail_end;
	1: switch_mail_1910_combine_end;
}


switch(FEAT_TRAINS, SELF, switch_mail_1910_livery, cargo_subtype) {
	1: switch_mail_1910_luggage_end;
	2: switch_mail_1910_mail_end;
	3: switch_mail_1910_combine_end;
	4: spriteset_pax_1910_17m_combine_end;
	random_mail_1910;
}



switch(FEAT_TRAINS, SELF, switch_mail_1910_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_HONI8900), 
									string(STR_SUFFIX_LUGGAGE),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	2: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_HOYUNI8725), 
									string(STR_SUFFIX_MAIL),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	3: return string(STR_CONCAT_3, string(STR_REFIT_PAXMAIL_NAHANI8430), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 )
	                                );
	4: return string(STR_CONCAT_4, string(STR_REFIT_PAXMAIL_NAHANI8430), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 ), string(STR_SUFFIX_FLIPPED)
	                                );
	   return CB_RESULT_NO_TEXT;
	}





item (FEAT_TRAINS, mail_1910_17m, 1666) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_HONI_8900);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1910,1,1);
		speed: 95 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 75; 
		refit_cost: 0;
		cargo_age_period: 185;
		default_cargo_type: PASS;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_MAIL); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 35;
		running_cost_factor: 6;
		running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_LUG),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_JGR)
								)
							);

		cargo_capacity: return 75;
		default: switch_mail_1910_livery;
		purchase: spriteset_mail_1910_17m_jgr_purchase;
		cargo_subtype_text: switch_mail_1910_subtype_text;
	}
}
spriteset(spriteset_pax_suha_32_3rd, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_suha_32_3rd_stripe, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_suha_32_2nd, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_suha_32_2nd_sleeper, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_suha_32_1st, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_suha_32_diner, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_pax_suha_32_1st_diner, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_pax_suha_32_1st_2nd, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_pax_suha_32_1st_observation, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_mail_mani_31, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_pax_suha_32_combine, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_pax_suha_32_combine_stripe, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 352)
}


spriteset(spriteset_mail_mayu_33, "gfx/paxmail/suha32.png") {
	template_2cc_std(1, 384)
}


spriteset(spriteset_pax_suha_32_roof, "gfx/paxmail/suha32.png") {
	template_2cc_flip(1, 416)
}


//purchase sprites
spriteset(spriteset_suha_32_jgr_purchase, "gfx/paxmail/suha32.png") {
	template_purchase(1, 448)
}

spriteset(spriteset_suha_32_jnr_purchase, "gfx/paxmail/suha32.png") {
	template_purchase(89, 448)
}


spriteset(spriteset_mani_31_jgr_purchase, "gfx/paxmail/suha32.png") {
	template_purchase(1, 480)
}

spriteset(spriteset_mani_31_jnr_purchase, "gfx/paxmail/suha32.png") {
	template_purchase(89, 480)
}

//purchase switches
switch(FEAT_TRAINS, SELF, switch_suha_32_yeardep_purchase, current_year) {
	0..1949: spriteset_suha_32_jgr_purchase;
	spriteset_suha_32_jnr_purchase;
}

switch(FEAT_TRAINS, SELF, switch_mani_31_yeardep_purchase, current_year) {
	0..1949: spriteset_mani_31_jgr_purchase;
	spriteset_mani_31_jnr_purchase;
}

//stripe yeardep
//1940 end of red stripe

switch(FEAT_TRAINS, SELF, switch_suha_32_3rd_stripe, current_year) {
	0..1940: spriteset_pax_suha_32_3rd_stripe;
	spriteset_pax_suha_32_3rd;
}

switch(FEAT_TRAINS, SELF, switch_suha_32_combine_stripe, current_year) {
	0..1940: spriteset_pax_suha_32_combine_stripe;
	spriteset_pax_suha_32_combine;
}


	
//local auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_suha_32_local_auto_middle) {
	4: switch_suha_32_3rd_stripe;
	1: spriteset_pax_suha_32_2nd;
}


	random_switch (FEAT_TRAINS, SELF, random_pax_suha_32_local_auto_end) {
	1: switch_suha_32_3rd_stripe;
	2: switch_suha_32_combine_stripe;
}

	random_switch (FEAT_TRAINS, SELF, random_pax_suha_32_local_auto_beginning) {
	1: spriteset_pax_suha_32_2nd;
	1: switch_suha_32_combine_stripe;
}

	random_switch (FEAT_TRAINS, SELF, random_pax_suha_32_local_auto_diner) {
	1: spriteset_pax_suha_32_2nd;
	1: spriteset_pax_suha_32_diner;
}


switch(FEAT_TRAINS, SELF, switch_pax_suha_32_local_auto_end, position_in_consist_from_end) {
	0: random_pax_suha_32_local_auto_end;
	random_pax_suha_32_local_auto_middle;
	}

switch(FEAT_TRAINS, SELF, switch_pax_suha_32_local_auto_beginning, position_in_vehid_chain) {
	0: random_pax_suha_32_local_auto_beginning;
	3: random_pax_suha_32_local_auto_diner;
	switch_pax_suha_32_local_auto_end;
	}


// express auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_suha_32_express_auto_middle) {
	1: spriteset_pax_suha_32_2nd_sleeper;
	2: spriteset_pax_suha_32_2nd;
}


	random_switch (FEAT_TRAINS, SELF, random_pax_suha_32_express_auto_beginning) {
	1: spriteset_pax_suha_32_2nd;
	1: spriteset_pax_suha_32_2nd_sleeper;
	1: spriteset_pax_suha_32_1st;
}


switch(FEAT_TRAINS, SELF, switch_pax_suha_32_express_auto_end, position_in_consist_from_end) {
	0: spriteset_pax_suha_32_1st_observation;
	random_pax_suha_32_express_auto_middle;
	}

switch(FEAT_TRAINS, SELF, switch_pax_suha_32_express_auto_beginning, position_in_vehid_chain) {
	0..2: spriteset_pax_suha_32_1st;
	3: spriteset_pax_suha_32_diner;
	4: random_pax_suha_32_express_auto_beginning;
	switch_pax_suha_32_express_auto_end;
	}


// sleeper auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_suha_32_sleeper_auto_middle) {
	3: spriteset_pax_suha_32_2nd_sleeper;
	1: spriteset_pax_suha_32_1st;
	1: spriteset_pax_suha_32_1st_2nd;
}


	random_switch (FEAT_TRAINS, SELF, random_pax_suha_32_sleeper_auto_beginning) {
	1: spriteset_pax_suha_32_1st;
	1: spriteset_pax_suha_32_1st_diner;
}


switch(FEAT_TRAINS, SELF, switch_pax_suha_32_sleeper_auto_end, position_in_consist_from_end) {
	0: spriteset_pax_suha_32_1st_observation;
	random_pax_suha_32_sleeper_auto_middle;
	}

switch(FEAT_TRAINS, SELF, switch_pax_suha_32_sleeper_auto_beginning, position_in_vehid_chain) {
	0: random_pax_suha_32_sleeper_auto_beginning;
	switch_pax_suha_32_sleeper_auto_end;
	}

//individual refits


random_switch (FEAT_TRAINS, SELF, random_pax_suha_32_2nd) {
	1: spriteset_pax_suha_32_2nd_sleeper;
	1: spriteset_pax_suha_32_2nd;
}

random_switch (FEAT_TRAINS, SELF, random_pax_suha_32_1st) {
	1: spriteset_pax_suha_32_1st_2nd;
	1: spriteset_pax_suha_32_1st;
}

random_switch (FEAT_TRAINS, SELF, random_pax_suha_32_diner) {
	1: spriteset_pax_suha_32_1st_diner;
	1: spriteset_pax_suha_32_diner;
}



//todo add prewar brown


switch(FEAT_TRAINS, SELF, switch_suha_32_livery, cargo_subtype) {
	0: switch_pax_suha_32_local_auto_beginning;
	1: switch_pax_suha_32_express_auto_beginning;
	2: switch_pax_suha_32_sleeper_auto_beginning;
	3: spriteset_pax_suha_32_3rd_stripe;
	4: spriteset_pax_suha_32_3rd;
	5: spriteset_pax_suha_32_2nd;
	6: spriteset_pax_suha_32_2nd_sleeper;
	7: spriteset_pax_suha_32_1st;
	8: spriteset_pax_suha_32_diner;
	9: spriteset_pax_suha_32_1st_diner;
	10: spriteset_pax_suha_32_1st_2nd;
	11: spriteset_pax_suha_32_1st_observation;
	12: spriteset_pax_suha_32_combine_stripe;
	13: spriteset_pax_suha_32_combine;

}



switch(FEAT_TRAINS, SELF, switch_suha_32_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_LOCAL)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_LTDEXP)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_SLEEPER)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHA32), 
									string(STR_SUFFIX_PAX_3CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 )
	                                );
	4: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHA32), 
									string(STR_SUFFIX_PAX_3CLASS), 
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	5: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SURO30), 
									string(STR_SUFFIX_PAX_2CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	6: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MARONE37), 
									string(STR_SUFFIX_SLEEPER_2CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	7: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MAINE37), 
									string(STR_SUFFIX_SLEEPER_1CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_CREAM)
									 )
	                                );
	8: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUSHI37), 
									string(STR_SUFFIX_DINER), 
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	9: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MAISHI37), 
									string(STR_SUFFIX_DINER_1CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_CREAM)
									 )
	                                );
	10: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MAIRONEFU37), 
									string(STR_SUFFIX_PAX_12CLASS), 
									string(STR_CONCAT_3F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_CREAM),
									 string(STR_COLOUR_BLUE)
									 )
	                                );
	11: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SITE37), 
									string(STR_SUFFIX_OBS_1CLASS), 
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_CREAM)
									 )
	                                );
	12: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHANE31), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 )
	                                );
	13: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHANE31), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 )
	                                );
	   return CB_RESULT_NO_TEXT;
	}


random_switch (FEAT_TRAINS, SELF, random_suha_32_roof_old) {
	1: spriteset_pax_suha_32_roof;
	2: spriteset_blank;
}

random_switch (FEAT_TRAINS, SELF, random_suha_32_roof_new) {
	2: spriteset_pax_suha_32_roof;
	1: spriteset_blank;
}


switch(FEAT_TRAINS, SELF, switch_suha_32_roof, build_year) {
	0..1935: spriteset_blank; //all clerestory
	1935..1942: random_suha_32_roof_old;
	1942..1949: random_suha_32_roof_new; //mixed
	spriteset_pax_suha_32_roof; //all round
	}




switch(FEAT_TRAINS, SELF, stack_suha_32, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 3 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_suha_32_livery;
    1:  switch_suha_32_roof;
	2:  switch_taillights_8;
}



item (FEAT_TRAINS, pax_suha_32, 1539) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PAX_SUHA32);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1929,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 80; 
		cargo_age_period: 185;
		refit_cost: 0;
		default_cargo_type: PASS;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 76;
		running_cost_factor: 10;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_SLP),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR)
								)
							);

		cargo_capacity: return 80;
		default: stack_suha_32;
		purchase: switch_suha_32_yeardep_purchase;
		cargo_subtype_text: switch_suha_32_subtype_text;
	}
}




random_switch (FEAT_TRAINS, SELF, random_mani_31) {
	2: spriteset_mail_mayu_33;
	3: spriteset_mail_mani_31;
	1: switch_suha_32_combine_stripe;
}


switch(FEAT_TRAINS, SELF, switch_mani_31_livery, cargo_subtype) {
	1: spriteset_mail_mayu_33;
	2: spriteset_mail_mani_31;
	3: spriteset_pax_suha_32_combine_stripe;
	4: spriteset_pax_suha_32_combine;
	random_mani_31;
}


switch(FEAT_TRAINS, SELF, switch_mani_31_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_MAYU33), 
									string(STR_SUFFIX_MAIL), 
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	2: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_MANI31), 
									string(STR_SUFFIX_LUGGAGE), 
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	3: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHANE31), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN), 
                                     string(STR_COLOUR_RED)
									 )
	                                );
	4: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHANE31), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, stack_mani_31, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 3 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_mani_31_livery;
    1:  switch_suha_32_roof;
	2:  switch_taillights_8;
}



item (FEAT_TRAINS, mani_31, 1667) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_MANI_31);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1929,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 90; 
		refit_cost: 0;
		default_cargo_type: PASS;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_MAIL); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 45;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_RPO),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR)
								)
							);

		cargo_capacity: return 90;
		default: stack_mani_31;
		purchase: switch_mani_31_yeardep_purchase;
		cargo_subtype_text: switch_mani_31_subtype_text;
	}
}
spriteset(spriteset_pax_suha43_brown, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_suhafu43_brown, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_suha44_brown, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_suhafu44_brown, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_suro51_brown, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_suro54_brown, "gfx/paxmail/suha43.png") { //dont use
	template_2cc_std(1, 160)
}

spriteset(spriteset_pax_mashi35_brown, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_pax_marone40_brown, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_pax_marone41_brown, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_pax_suhani35_brown, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 288)
}


spriteset(spriteset_pax_suha43_blue, "gfx/paxmail/suha43.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_pax_suhafu43_blue, "gfx/paxmail/suha43.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_pax_suha44_blue, "gfx/paxmail/suha43.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_pax_suhafu44_blue, "gfx/paxmail/suha43.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_pax_suro51_blue, "gfx/paxmail/suha43.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_pax_suro54_blue, "gfx/paxmail/suha43.png") { 
	template_2cc_std(180, 160)
}

spriteset(spriteset_pax_mashi35_blue, "gfx/paxmail/suha43.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_pax_marone40_blue, "gfx/paxmail/suha43.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_pax_marone41_blue, "gfx/paxmail/suha43.png") {
	template_2cc_std(180, 256)
}

spriteset(spriteset_pax_suhani35_blue, "gfx/paxmail/suha43.png") {
	template_2cc_std(180, 288)
}


//stripes
spriteset(spriteset_pax_suha43_stripe_yellow, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_pax_suha43_stripe_blue, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 352)
}

spriteset(spriteset_pax_suha43_stripe_green, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 384)
}

spriteset(spriteset_pax_suha43_stripe_cream, "gfx/paxmail/suha43.png") {
	template_2cc_std(1, 416)
}


//purchase sprites
spriteset(spriteset_pax_suha43_jgr_brown_purchase, "gfx/paxmail/suha43.png") {
	template_purchase(1, 448)
}

spriteset(spriteset_pax_suha43_jnr_brown_purchase, "gfx/paxmail/suha43.png") {
	template_purchase(1, 480)
}

spriteset(spriteset_pax_suha43_jnr_blue_purchase, "gfx/paxmail/suha43.png") {
	template_purchase(89, 480)
}



switch(FEAT_TRAINS, SELF, switch_pax_suha43_purchase, current_year) {
	0..1949: spriteset_pax_suha43_jgr_brown_purchase;
	1949..1964: spriteset_pax_suha43_jnr_brown_purchase;
	spriteset_pax_suha43_jnr_blue_purchase;	
}


//yeardep base livery

random_switch (FEAT_TRAINS, SELF, random_pax_suha43_old) {
	3: spriteset_pax_suha43_brown;
	1: spriteset_pax_suha43_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_suha43_new) {
	1: spriteset_pax_suha43_brown;
	3: spriteset_pax_suha43_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_suha43_yeardep, current_year) {
	0..1964: spriteset_pax_suha43_brown;
	1964..1970: random_pax_suha43_old;
	1970..1979: random_pax_suha43_new;
	spriteset_pax_suha43_blue;	
}

random_switch (FEAT_TRAINS, SELF, random_pax_suhafu43_old) {
	3: spriteset_pax_suhafu43_brown;
	1: spriteset_pax_suhafu43_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_suhafu43_new) {
	1: spriteset_pax_suhafu43_brown;
	3: spriteset_pax_suhafu43_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_suhafu43_yeardep, current_year) {
	0..1964: spriteset_pax_suhafu43_brown;
	1964..1970: random_pax_suhafu43_old;
	1970..1979: random_pax_suhafu43_new;
	spriteset_pax_suhafu43_blue;	
}

random_switch (FEAT_TRAINS, SELF, random_pax_suha44_old) {
	3: spriteset_pax_suha44_brown;
	1: spriteset_pax_suha44_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_suha44_new) {
	1: spriteset_pax_suha44_brown;
	3: spriteset_pax_suha44_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_suha44_yeardep, current_year) {
	0..1964: spriteset_pax_suha44_brown;
	1964..1970: random_pax_suha44_old;
	1970..1979: random_pax_suha44_new;
	spriteset_pax_suha44_blue;	
}


random_switch (FEAT_TRAINS, SELF, random_pax_suhafu44_old) {
	3: spriteset_pax_suhafu44_brown;
	1: spriteset_pax_suhafu44_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_suhafu44_new) {
	1: spriteset_pax_suhafu44_brown;
	3: spriteset_pax_suhafu44_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_suro51_old) {
	3: spriteset_pax_suro51_brown;
	1: spriteset_pax_suro51_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_suro51_new) {
	1: spriteset_pax_suro51_brown;
	3: spriteset_pax_suro51_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_suro51_yeardep, current_year) {
	0..1964: spriteset_pax_suro51_brown;
	1964..1970: random_pax_suro51_old;
	1970..1979: random_pax_suro51_new;
	spriteset_pax_suro51_blue;	
}




switch(FEAT_TRAINS, SELF, switch_pax_suro54_yeardep, current_year) {
	0..1964: spriteset_pax_marone40_brown;
	spriteset_pax_suro54_blue;	
}



switch(FEAT_TRAINS, SELF, switch_pax_suhafu44_yeardep, current_year) {
	0..1964: spriteset_pax_suhafu44_brown;
	1964..1970: random_pax_suhafu44_old;
	1970..1979: random_pax_suhafu44_new;
	spriteset_pax_suhafu44_blue;	
}

random_switch (FEAT_TRAINS, SELF, random_pax_mashi35_old) {
	3: spriteset_pax_mashi35_brown;
	1: spriteset_pax_mashi35_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_mashi35_new) {
	1: spriteset_pax_mashi35_brown;
	3: spriteset_pax_mashi35_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_mashi35_yeardep, current_year) {
	0..1964: spriteset_pax_mashi35_brown;
	1964..1970: random_pax_mashi35_old;
	1970..1979: random_pax_mashi35_new;
	spriteset_pax_mashi35_blue;	
}

random_switch (FEAT_TRAINS, SELF, random_pax_marone40_old) {
	3: spriteset_pax_marone40_brown;
	1: spriteset_pax_marone40_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_marone40_new) {
	1: spriteset_pax_marone40_brown;
	3: spriteset_pax_marone40_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_marone40_yeardep, current_year) {
	0..1964: spriteset_pax_marone40_brown;
	1964..1970: random_pax_marone40_old;
	1970..1979: random_pax_marone40_new;
	spriteset_pax_marone40_blue;	
}

random_switch (FEAT_TRAINS, SELF, random_pax_marone41_old) {
	3: spriteset_pax_marone41_brown;
	1: spriteset_pax_marone41_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_marone41_new) {
	1: spriteset_pax_marone41_brown;
	3: spriteset_pax_marone41_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_marone41_yeardep, current_year) {
	0..1964: spriteset_pax_marone41_brown;
	1964..1970: random_pax_marone41_old;
	1970..1979: random_pax_marone41_new;
	spriteset_pax_marone41_blue;	
}

random_switch (FEAT_TRAINS, SELF, random_pax_suhani35_old) {
	3: spriteset_pax_suhani35_brown;
	1: spriteset_pax_suhani35_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_suhani35_new) {
	1: spriteset_pax_suhani35_brown;
	3: spriteset_pax_suhani35_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_suhani35_yeardep, current_year) {
	0..1964: spriteset_pax_suhani35_brown;
	1964..1970: random_pax_suhani35_old;
	1970..1979: random_pax_suhani35_new;
	spriteset_pax_suhani35_blue;	
}

//stripe switch
switch(FEAT_TRAINS, SELF, switch_pax_suha43_stripe_yeardep, current_year) {
	0..1961: spriteset_pax_suha43_stripe_blue;
	1961..1987: spriteset_pax_suha43_stripe_green;
	spriteset_blank;
}

switch(FEAT_TRAINS, SELF, switch_pax_maine40_stripe_yeardep, current_year) {
	0..1961: spriteset_pax_suha43_stripe_cream;
	1961..1987: spriteset_pax_suha43_stripe_green;
	spriteset_blank;
}

	
//auto formations
//local auto formation


switch(FEAT_TRAINS, SELF, switch_pax_suha43_local_auto_end, position_in_consist_from_end) {
	0: switch_pax_suhafu43_yeardep;
	switch_pax_suha43_yeardep;
	}

switch(FEAT_TRAINS, SELF, switch_pax_suha43_local_auto_beginning, position_in_vehid_chain) {
	0: switch_pax_suhani35_yeardep;
	switch_pax_suha43_local_auto_end;
	}


// express auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_suha43_express_auto_beginning) {
	3: switch_pax_suro51_yeardep;
	1: switch_pax_suro54_yeardep;
}


switch(FEAT_TRAINS, SELF, switch_pax_suha43_express_auto_end, position_in_consist_from_end) {
	0: switch_pax_suhafu44_yeardep;
	switch_pax_suha44_yeardep;
	}

switch(FEAT_TRAINS, SELF, switch_pax_suha43_express_auto_beginning, position_in_vehid_chain) {
	0..2: random_pax_suha43_express_auto_beginning;
	3: switch_pax_mashi35_yeardep;
	switch_pax_suha43_express_auto_end;
	}


random_switch (FEAT_TRAINS, SELF, random_pax_suha43_express_auto_stripe) {
	dependent: random_pax_suha43_express_auto_beginning;
	1: switch_pax_suha43_stripe_yeardep;
	1: switch_pax_maine40_stripe_yeardep;
	}

switch(FEAT_TRAINS, SELF, switch_pax_suha43_express_auto_stripe, position_in_vehid_chain) {
	0..2: random_pax_suha43_express_auto_stripe;
	}

// sleeper auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_suha43_sleeper_auto_beginning) {
	1: switch_pax_marone40_yeardep;
	1: switch_pax_suro54_yeardep;
}


switch(FEAT_TRAINS, SELF, switch_pax_suha43_sleeper_auto_end, position_in_consist_from_end) {
	0: switch_pax_suhafu44_yeardep;
	switch_pax_suha44_yeardep;
	}

switch(FEAT_TRAINS, SELF, switch_pax_suha43_sleeper_auto_beginning, position_in_vehid_chain) {
	0..2: random_pax_suha43_sleeper_auto_beginning;
	3: switch_pax_mashi35_yeardep;
	4..6: switch_pax_marone41_yeardep;
	switch_pax_suha43_sleeper_auto_end;
	}


random_switch (FEAT_TRAINS, SELF, random_pax_suha43_sleeper_auto_stripe) {
	dependent: random_pax_suha43_sleeper_auto_beginning;
	1: switch_pax_suha43_stripe_yeardep;
	1: switch_pax_maine40_stripe_yeardep;
	}

switch(FEAT_TRAINS, SELF, switch_pax_suha43_sleeper_auto_stripe, position_in_vehid_chain) {
	0..2: random_pax_suha43_express_auto_stripe;
	4..6: switch_pax_suha43_stripe_yeardep;
	}





switch(FEAT_TRAINS, SELF, switch_pax_suha43_base_livery, cargo_subtype) {
	0: switch_pax_suha43_local_auto_beginning;
	1: switch_pax_suha43_express_auto_beginning;
	2: switch_pax_suha43_sleeper_auto_beginning;
	3: spriteset_pax_suha43_brown;
	4: spriteset_pax_suhafu43_brown;
	5: spriteset_pax_suha44_brown;
	6: spriteset_pax_suhafu44_brown;
	7: spriteset_pax_suro51_brown;
	8: spriteset_pax_marone40_brown;
	9: spriteset_pax_marone41_brown;
	10: spriteset_pax_suro51_brown;
	11: spriteset_pax_marone40_brown;
	12: spriteset_pax_marone41_brown;
	13: spriteset_pax_marone40_brown; //maine
	14: spriteset_pax_suhani35_brown;
	15: spriteset_pax_mashi35_brown;
	16: spriteset_pax_suha43_blue;
	17: spriteset_pax_suhafu43_blue;
	18: spriteset_pax_suha44_blue;
	19: spriteset_pax_suhafu44_blue;
	20: spriteset_pax_suro51_blue;
	21: spriteset_pax_suro54_blue;
	22: spriteset_pax_marone40_blue;
	23: spriteset_pax_marone41_blue;
	24: spriteset_pax_suro51_blue;
	25: spriteset_pax_suro54_blue;
	26: spriteset_pax_marone40_blue;
	27: spriteset_pax_marone41_blue;
	28: spriteset_pax_suhani35_blue;
	29: spriteset_pax_mashi35_blue;
	30: spriteset_pax_marone40_blue;
}

switch(FEAT_TRAINS, SELF, switch_pax_suha43_stripe_livery, cargo_subtype) {
	0: spriteset_blank;
	1: switch_pax_suha43_express_auto_stripe;
	2: switch_pax_suha43_sleeper_auto_stripe;
	3: spriteset_blank;
	4: spriteset_blank;
	5: spriteset_blank;
	6: spriteset_blank;
	7: spriteset_pax_suha43_stripe_blue;
	8: spriteset_pax_suha43_stripe_blue;
	9: spriteset_pax_suha43_stripe_blue;
	10: spriteset_pax_suha43_stripe_green;
	11: spriteset_pax_suha43_stripe_green;
	12: spriteset_pax_suha43_stripe_green;
	13: spriteset_pax_suha43_stripe_cream; //maine
	14: spriteset_blank;
	15: spriteset_blank;
	16: spriteset_blank;
	17: spriteset_blank;
	18: spriteset_blank;
	19: spriteset_blank;
	20: spriteset_pax_suha43_stripe_green;
	21: spriteset_pax_suha43_stripe_green;
	22: spriteset_pax_suha43_stripe_green;
	23: spriteset_pax_suha43_stripe_green;
	24: spriteset_blank;
	25: spriteset_blank;
	26: spriteset_blank;
	27: spriteset_blank;
	28: spriteset_blank;
	29: spriteset_blank;
	30: spriteset_pax_suha43_stripe_yellow;
}
/*
	3: suha 43 brown
	4: suhafu 43 brown
	5: suha 44 brown
	6: suhafu 44 brown
	7: suro 51 brown/blue
	8: marone 40 brown/blue
	9: marone 41 brown/blue
	10: suro 51 brown/green
	11: marone 40 brown/green
	12: marone 41 brown/green
	13: maine 40 brown/white
	14: suhani 35 brown
	15: mashi 35 brown
	16: suha 43 blue
	17: suhafu 43 blue
	18: suha 44 blue
	19: suhafu 44 blue
	20: suro 51 blue/green
	21: suro 54 blue/green
	22: marone 40 blue/green
	23: marone 41 blue/green
	24: suro 51 blue
	25: suro 54 blue
	26: marone 40 blue
	27: marone 41 blue
	28: suhani 35 blue
	29: mashi 35 blue
	30: suya 42 blue/yellow
*/

switch(FEAT_TRAINS, SELF, switch_pax_suha43_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_LOCAL)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_LTDEXP)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_SLEEPER)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHA43), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	4: return string(STR_CONCAT_4, string(STR_REFIT_PAX_SUHAFU43), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_SUFFIX_CONDUCTOR),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	5: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHA44), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	6: return string(STR_CONCAT_4, string(STR_REFIT_PAX_SUHAFU44), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_SUFFIX_CONDUCTOR),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	7: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SURO51), 
									string(STR_SUFFIX_PAX_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_BLUE)
									 )
	                                );
	8: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MARONE40), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_BLUE)
									 )
	                                );
	9: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MARONE41), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_BLUE)
									 )
	                                );
	10: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SURO51), 
									string(STR_SUFFIX_PAX_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	11: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MARONE40), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	12: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MARONE41), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	13: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MAINE40), 
									string(STR_SUFFIX_SLEEPER_1CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_CREAM)
									 )
	                                );
	14: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHANI35), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	15: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MASHI35), 
									string(STR_SUFFIX_DINER), 
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	16: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHA43), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	17: return string(STR_CONCAT_4, string(STR_REFIT_PAX_SUHAFU43), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_SUFFIX_CONDUCTOR),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	18: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHA44), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	19: return string(STR_CONCAT_4, string(STR_REFIT_PAX_SUHAFU44), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_SUFFIX_CONDUCTOR),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	20: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SURO51), 
									string(STR_SUFFIX_PAX_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	21: return string(STR_CONCAT_4, string(STR_REFIT_PAX_SURO54), 
									string(STR_SUFFIX_PAX_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_GREEN)
									 ), string(STR_SUFFIX_AIRCON)
	                                );
	22: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MARONE40), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	23: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MARONE41), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	24: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SURO51), 
									string(STR_SUFFIX_PAX_2CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	25: return string(STR_CONCAT_4, string(STR_REFIT_PAX_SURO54), 
									string(STR_SUFFIX_PAX_2CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 ), string(STR_SUFFIX_AIRCON)
	                                );
	26: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MARONE40), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	27: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MARONE41), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	28: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHANI35), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	29: return string(STR_CONCAT_3, string(STR_REFIT_PAX_MASHI35), 
									string(STR_SUFFIX_DINER), 
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	30: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUYA42), 
									string(STR_SUFFIX_INSPECTION),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_YELLOW)
									 )
	                                );
	   return CB_RESULT_NO_TEXT;
	}



switch(FEAT_TRAINS, SELF, stack_pax_suha43, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 3 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_pax_suha43_base_livery;
	1: 	switch_pax_suha43_stripe_livery;
	2:  switch_taillights_8;
}



item (FEAT_TRAINS, pax_suha43, 1318) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PAX_SUHA43);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1950,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 80; 
		refit_cost: 0;
		default_cargo_type: PASS;
		cargo_age_period: 400;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 75;
		running_cost_factor: 9;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_EXP),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_JNR)
								)
							);

		cargo_capacity: return 80;
		default: stack_pax_suha43;
		purchase: switch_pax_suha43_purchase;
		cargo_subtype_text: switch_pax_suha43_subtype_text;
		
	}
}
spriteset(spriteset_pax_oha35_brown, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_ohafu33_brown, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_oro36_brown, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_oha35_blue, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_ohafu33_blue, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_oro36_blue, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_pax_oha35_oigawa, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_pax_ohafu33_oigawa, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 224)
}

//stripes

spriteset(spriteset_pax_oha35_stripe_red, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_pax_oha35_stripe_blue, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_pax_oha35_stripe_lightblue, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_pax_oha35_stripe_green, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 352)
}

/*
spriteset(spriteset_pax_oha35_roof_curved, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 320)
}
*/

spriteset(spriteset_pax_oha35_roof, "gfx/paxmail/oha35.png") {
	template_2cc_std(1, 416)
}

//purch


spriteset(spriteset_pax_oha35_jgr_brown_purchase, "gfx/paxmail/oha35.png") {
	template_purchase(1, 448)
}

spriteset(spriteset_pax_oha35_jnr_brown_purchase, "gfx/paxmail/oha35.png") {
	template_purchase(89, 448)
}

spriteset(spriteset_pax_oha35_jnr_blue_purchase, "gfx/paxmail/oha35.png") {
	template_purchase(89, 480)
}

switch(FEAT_TRAINS, SELF, switch_pax_oha35_purchase, current_year) {
    0..1949: spriteset_pax_oha35_jgr_brown_purchase;
	1949..1964: spriteset_pax_oha35_jnr_brown_purchase;
	spriteset_pax_oha35_jnr_blue_purchase;	
}


//yeardep base livery

random_switch (FEAT_TRAINS, SELF, random_pax_oha35_old) {
	3: spriteset_pax_oha35_brown;
	1: spriteset_pax_oha35_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_oha35_new) {
	1: spriteset_pax_oha35_brown;
	3: spriteset_pax_oha35_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_oha35_yeardep, current_year) {
	0..1964: spriteset_pax_oha35_brown;
	1964..1970: random_pax_oha35_old;
	1970..1979: random_pax_oha35_new;
	spriteset_pax_oha35_blue;	
}

random_switch (FEAT_TRAINS, SELF, random_pax_ohafu33_old) {
	3: spriteset_pax_ohafu33_brown;
	1: spriteset_pax_ohafu33_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_ohafu33_new) {
	1: spriteset_pax_ohafu33_brown;
	3: spriteset_pax_ohafu33_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_ohafu33_yeardep, current_year) {
	0..1964: spriteset_pax_ohafu33_brown;
	1964..1970: random_pax_ohafu33_old;
	1970..1979: random_pax_ohafu33_new;
	spriteset_pax_ohafu33_blue;	
}

random_switch (FEAT_TRAINS, SELF, random_pax_oro36_old) {
	3: spriteset_pax_oro36_brown;
	1: spriteset_pax_oro36_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_oro36_new) {
	1: spriteset_pax_oro36_brown;
	3: spriteset_pax_oro36_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_oro36_yeardep, current_year) {
	0..1964: spriteset_pax_oro36_brown;
	1964..1970: random_pax_oro36_old;
	1970..1979: random_pax_oro36_new;
	spriteset_pax_oro36_blue;	
}




//local auto formation jnr

random_switch (FEAT_TRAINS, SELF, random_pax_oha35_local_auto_middle) {
	4: switch_pax_oha35_yeardep;
	1: switch_pax_ohafu33_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_pax_oha35_local_auto_end, position_in_consist_from_end) {
	0: switch_pax_ohafu33_yeardep;
	random_pax_oha35_local_auto_middle;
	}

switch(FEAT_TRAINS, SELF, switch_pax_oha35_local_auto_beginning, position_in_vehid_chain) {
	0: switch_pax_ohafu33_yeardep;
	switch_pax_oha35_local_auto_end;
	}


//express auto formation jnr

random_switch (FEAT_TRAINS, SELF, random_pax_oha35_express_auto_middle) {
	4: switch_pax_oha35_yeardep;
	1: switch_pax_ohafu33_yeardep;
}

	random_switch (FEAT_TRAINS, SELF, random_pax_oha35_express_auto_beginning) {
	1: switch_pax_oha35_yeardep;
	1: switch_pax_oro36_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_pax_oha35_express_auto_end, position_in_consist_from_end) {
	0: switch_pax_ohafu33_yeardep;
	random_pax_oha35_express_auto_middle;
	}

switch(FEAT_TRAINS, SELF, switch_pax_oha35_express_auto_beginning, position_in_vehid_chain) {
	0..3: random_pax_oha35_express_auto_beginning;
	switch_pax_oha35_express_auto_end;
	}

//local auto formation oigawa

random_switch (FEAT_TRAINS, SELF, random_pax_oha35_oigawa_auto_middle) {
	4: spriteset_pax_oha35_oigawa;
	1: spriteset_pax_ohafu33_oigawa;
}

switch(FEAT_TRAINS, SELF, switch_pax_oha35_oigawa_auto_end, position_in_consist_from_end) {
	0: spriteset_pax_ohafu33_oigawa;
	random_pax_oha35_oigawa_auto_middle;
	}

switch(FEAT_TRAINS, SELF, switch_pax_oha35_oigawa_auto_beginning, position_in_vehid_chain) {
	0: spriteset_pax_ohafu33_oigawa;
	switch_pax_oha35_oigawa_auto_end;
	}



switch(FEAT_TRAINS, SELF, switch_pax_oha35_local_auto_stripe, current_year) {
	0..1940: spriteset_pax_oha35_stripe_red;
	spriteset_blank;
}

switch(FEAT_TRAINS, SELF, switch_pax_oro36_auto_stripe_yeardep, current_year) {
	0..1949: spriteset_pax_oha35_stripe_blue;
    1949..1961: spriteset_pax_oha35_stripe_lightblue;
	1961..1987: spriteset_pax_oha35_stripe_green;
	spriteset_blank;
}

	random_switch (FEAT_TRAINS, SELF, random_pax_oha35_express_auto_stripe_beginning) {
	1: switch_pax_oha35_local_auto_stripe;
	1: switch_pax_oro36_auto_stripe_yeardep;
    dependent: random_pax_oha35_express_auto_beginning;
}

switch(FEAT_TRAINS, SELF, switch_pax_oha35_express_auto_stripe_end, position_in_consist_from_end) {
	0: switch_pax_oha35_local_auto_stripe;
	switch_pax_oha35_local_auto_stripe;
	}

switch(FEAT_TRAINS, SELF, switch_pax_oha35_express_auto_stripe, position_in_vehid_chain) {
	0..3: random_pax_oha35_express_auto_stripe_beginning;
	switch_pax_oha35_express_auto_stripe_end;
	}



random_switch (FEAT_TRAINS, SELF, random_oha35_roof_old) {
	1: spriteset_pax_oha35_roof;
	2: spriteset_blank;
}

random_switch (FEAT_TRAINS, SELF, random_oha35_roof_new) {
	2: spriteset_pax_oha35_roof;
	1: spriteset_blank;
}

switch(FEAT_TRAINS, SELF, switch_pax_oha35_roof, build_year) {
	0..1940: spriteset_blank; //old style
	1940..1945: random_oha35_roof_old;
	1945..1950: random_oha35_roof_new; //mixed
	spriteset_pax_oha35_roof; //all round
	}


switch(FEAT_TRAINS, SELF, switch_pax_oha35_base_livery, cargo_subtype) {
	0: switch_pax_oha35_local_auto_beginning;
	1: switch_pax_oha35_express_auto_beginning;
	2: switch_pax_oha35_oigawa_auto_beginning;
}


switch(FEAT_TRAINS, SELF, switch_pax_oha35_stripe_livery, cargo_subtype) {
	0: switch_pax_oha35_local_auto_stripe;
	1: switch_pax_oha35_express_auto_stripe;
	2: spriteset_blank;
}


switch(FEAT_TRAINS, SELF, switch_pax_oha35_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_LOCAL)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_LTDEXP)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_OIGAWA)
                                    )
                                 );
    //todo individual refits
	   return CB_RESULT_NO_TEXT;
	}





switch(FEAT_TRAINS, SELF, stack_pax_oha35, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_pax_oha35_base_livery;
	1: 	switch_pax_oha35_stripe_livery;
    2:  switch_pax_oha35_roof;
	3:  switch_taillights_8;
}

item (FEAT_TRAINS, pax_oha35, 1316) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PAX_OHA35);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1939,1,1);
		speed: 100 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 85; 
		refit_cost: 0;
		default_cargo_type: PASS;
		cargo_age_period: 400;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 70;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_LOC),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR)
								)
							);

		cargo_capacity: return 80;
		default: stack_pax_oha35;
		purchase: switch_pax_oha35_purchase;
		cargo_subtype_text: switch_pax_oha35_subtype_text;
		
	}
}
spriteset(spriteset_pax_suhani35_green, "gfx/paxmail/tokaido.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_suha44_green, "gfx/paxmail/tokaido.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_suhafu44_green, "gfx/paxmail/tokaido.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_suro54_green, "gfx/paxmail/tokaido.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_mashi35_green, "gfx/paxmail/tokaido.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_oshi17_green, "gfx/paxmail/tokaido.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_pax_naro10_green, "gfx/paxmail/tokaido.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_pax_mai38_green, "gfx/paxmail/tokaido.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_pax_maite39_green, "gfx/paxmail/tokaido.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_pax_maite58_green, "gfx/paxmail/tokaido.png") {
	template_2cc_std(1, 288)
}


//cc
spriteset(spriteset_pax_suhani35_cc, "gfx/paxmail/tokaido.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_pax_suha44_cc, "gfx/paxmail/tokaido.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_pax_suhafu44_cc, "gfx/paxmail/tokaido.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_pax_suro54_cc, "gfx/paxmail/tokaido.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_pax_mashi35_cc, "gfx/paxmail/tokaido.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_pax_oshi17_cc, "gfx/paxmail/tokaido.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_pax_naro10_cc, "gfx/paxmail/tokaido.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_pax_mai38_cc, "gfx/paxmail/tokaido.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_pax_maite39_cc, "gfx/paxmail/tokaido.png") {
	template_2cc_std(180, 256)
}

spriteset(spriteset_pax_maite58_cc, "gfx/paxmail/tokaido.png") {
	template_2cc_std(180, 288)
}


spriteset(spriteset_pax_tokaido_jnr_purchase, "gfx/paxmail/tokaido.png") {
	template_purchase(1, 448)
}



// Tsubame auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_tokaido_tsubame_2nd) {
	1: spriteset_pax_naro10_green;
	1: spriteset_pax_suro54_green;
}

random_switch (FEAT_TRAINS, SELF, random_pax_tokaido_tsubame_diner) {
	1: spriteset_pax_oshi17_green;
	1: spriteset_pax_mashi35_green;
}

random_switch (FEAT_TRAINS, SELF, random_pax_tokaido_tsubame_obs) {
	1: spriteset_pax_maite39_green;
	1: spriteset_pax_maite58_green;
}


switch(FEAT_TRAINS, SELF, switch_pax_tokaido_tsubame_auto_end, position_in_consist_from_end) {
	0: random_pax_tokaido_tsubame_obs;
	1: spriteset_pax_mai38_green;
	2..4: spriteset_pax_naro10_green;
	5: random_pax_tokaido_tsubame_diner;
	6..7: spriteset_pax_suro54_green;
	spriteset_pax_suha44_green;
	}

switch(FEAT_TRAINS, SELF, switch_pax_tokaido_tsubame_auto_beginning, position_in_vehid_chain) {
	0: spriteset_pax_suhani35_green;
	switch_pax_tokaido_tsubame_auto_end;
	}
	
	
// Hato auto formation


switch(FEAT_TRAINS, SELF, switch_pax_tokaido_hato_auto_end, position_in_consist_from_end) {
	0: random_pax_tokaido_tsubame_obs;
	1: spriteset_pax_mai38_green;
	2..3: spriteset_pax_suro54_green;
	4: random_pax_tokaido_tsubame_diner;
	5: spriteset_pax_suhafu44_green;
	spriteset_pax_suha44_green;
	}

switch(FEAT_TRAINS, SELF, switch_pax_tokaido_hato_auto_beginning, position_in_vehid_chain) {
	0: spriteset_pax_suhani35_green;
	switch_pax_tokaido_hato_auto_end;
	}
	


// cc auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_tokaido_cc_2nd) {
	1: spriteset_pax_naro10_cc;
	1: spriteset_pax_suro54_cc;
}

random_switch (FEAT_TRAINS, SELF, random_pax_tokaido_cc_diner) {
	1: spriteset_pax_oshi17_cc;
	1: spriteset_pax_mashi35_cc;
}

random_switch (FEAT_TRAINS, SELF, random_pax_tokaido_cc_obs) {
	1: spriteset_pax_maite39_cc;
	1: spriteset_pax_maite58_cc;
}


switch(FEAT_TRAINS, SELF, switch_pax_tokaido_cc_auto_end, position_in_consist_from_end) {
	0: random_pax_tokaido_cc_obs;
	1: spriteset_pax_mai38_cc;
	2..4: random_pax_tokaido_cc_2nd;
	5: random_pax_tokaido_cc_diner;
	6..7: random_pax_tokaido_cc_2nd;
	spriteset_pax_suha44_cc;
	}

switch(FEAT_TRAINS, SELF, switch_pax_tokaido_cc_auto_beginning, position_in_vehid_chain) {
	0: spriteset_pax_suhani35_cc;
	switch_pax_tokaido_cc_auto_end;
	}


switch(FEAT_TRAINS, SELF, switch_pax_tokaido_livery, cargo_subtype) {
	0: switch_pax_tokaido_tsubame_auto_beginning;
	1: switch_pax_tokaido_hato_auto_beginning;
	2: switch_pax_tokaido_cc_auto_beginning;

}



switch(FEAT_TRAINS, SELF, switch_pax_tokaido_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_TSUBAME)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_HATO)
                                    )
                                 );
	2: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}






item (FEAT_TRAINS, pax_suha44, 1319) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PAX_SUHA44);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1954,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 70; 
		refit_cost: 0;
		default_cargo_type: PASS;
		cargo_age_period: 600;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 75;
		running_cost_factor: 9;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_SPRITE_STACK);
		variant_group: 1318;
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_TOKAIDO),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_JNR)
								)
							);

		cargo_capacity: return 70;
		default: switch_pax_tokaido_livery;
		purchase: spriteset_pax_tokaido_jnr_purchase;
		cargo_subtype_text: switch_pax_tokaido_subtype_text;
		
	}
}























spriteset(spriteset_joyful_12_series_set_rear, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_joyful_12_series_set_front, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_joyful_12_series_set, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_joyful_12_series_set_cc_rear, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_joyful_12_series_set_cc_front, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_joyful_12_series_set_cc, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_joyful_12_series_euro_rear, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_joyful_12_series_euro_front, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 352)
}

spriteset(spriteset_joyful_12_series_euro_pano, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 384)
}

spriteset(spriteset_joyful_12_series_euro, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 416)
}


/*

spriteset(spriteset_joyful_12_series_blue_rear, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_joyful_12_series_blue_front, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_joyful_12_series_blue, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_joyful_12_series_cc_rear, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_joyful_12_series_cc_front, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_joyful_12_series_cc, "gfx/paxmail/joyful-12series.png") {
	template_2cc_std(1, 256)
}

*/

spriteset(spriteset_joyful_12_series_set_purchase, "gfx/paxmail/joyful-12series.png") {
	template_purchase(1, 448)
}




switch(FEAT_TRAINS, SELF, switch_joyful_12_series_set_end, position_in_vehid_chain_from_end) {
	0: spriteset_joyful_12_series_set_rear;
	spriteset_joyful_12_series_set;
	}
	

switch(FEAT_TRAINS, SELF, switch_joyful_12_series_set_beginning, position_in_vehid_chain) {
	0: spriteset_joyful_12_series_set_front;
	switch_joyful_12_series_set_end;
	}


switch(FEAT_TRAINS, SELF, switch_joyful_12_series_euro_end, position_in_vehid_chain_from_end) {
	0: spriteset_joyful_12_series_euro_rear;
	spriteset_joyful_12_series_euro_pano;
	}
	

switch(FEAT_TRAINS, SELF, switch_joyful_12_series_euro_beginning, position_in_vehid_chain) {
	0: spriteset_joyful_12_series_euro_front;
	4: spriteset_joyful_12_series_euro;
	switch_joyful_12_series_euro_end;
	}


switch(FEAT_TRAINS, SELF, switch_joyful_12_series_set_cc_end, position_in_vehid_chain_from_end) {
	0: spriteset_joyful_12_series_set_cc_rear;
	spriteset_joyful_12_series_set_cc;
	}
	

switch(FEAT_TRAINS, SELF, switch_joyful_12_series_set_cc_beginning, position_in_vehid_chain) {
	0: spriteset_joyful_12_series_set_cc_front;
	switch_joyful_12_series_set_cc_end;
	}




switch(FEAT_TRAINS, SELF, switch_joyful_12_series_livery, cargo_subtype) {
	0: switch_joyful_12_series_set_beginning;
	1: switch_joyful_12_series_euro_beginning;
	2: switch_joyful_12_series_set_cc_beginning;
}



switch(FEAT_TRAINS, SELF, switch_joyful_12_series_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BROWN), 
                                    string(STR_COLOUR_RED)
                                    ), string(STR_SUFFIX_SALONEXP)
                                 );
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JRC),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_WHITE), 
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_EUROLINER)
                                 );
	2: return string(STR_CONCAT_2, string(STR_REFIT_AUTOFORM), string(STR_CONCAT_1F, 
                                     							string(STR_SUFFIX_CC)
                                    							)
															);
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, joyful_12_series, 1321) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_JOYFUL_12);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1983,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 70; 
		cargo_age_period: 600;
		refit_cost: 0;
		default_cargo_type: PASS;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 26;
		cost_factor: 77;
		running_cost_factor: 9;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_2CC);
		variant_group: 1320;
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_JOY),
								string(STR_CONCAT_5C, 
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JRE),
									string(STR_SUFFIX_JRC),
									string(STR_SUFFIX_JRW),
									string(STR_SUFFIX_JRK)
								)
							);

		cargo_capacity: return 70;
		default: switch_joyful_12_series_livery;
		purchase: spriteset_joyful_12_series_set_purchase;
		cargo_subtype_text: switch_joyful_12_series_subtype_text;
	}
}

spriteset(spriteset_pax_12_series_rear, "gfx/paxmail/12series.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_12_series_front, "gfx/paxmail/12series.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_12_series, "gfx/paxmail/12series.png") {
	template_2cc_std(1, 64)
}

alternative_sprites(spriteset_pax_12_series_rear, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/12series.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_pax_12_series_front, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/12series.png") {
	template_2cc_std(1, 32)
}

alternative_sprites(spriteset_pax_12_series, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/12series.png") {
	template_2cc_std(1, 64)
}


spriteset(spriteset_pax_12_series_blue_rear, "gfx/paxmail/12series.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_12_series_blue_front, "gfx/paxmail/12series.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_12_series_blue, "gfx/paxmail/12series.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_pax_12_series_cc_rear, "gfx/paxmail/12series.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_pax_12_series_cc_front, "gfx/paxmail/12series.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_pax_12_series_cc, "gfx/paxmail/12series.png") {
	template_2cc_std(1, 256)
}



spriteset(spriteset_pax_12_series_jnr_purchase, "gfx/paxmail/12series.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_pax_12_series_jr_purchase, "gfx/paxmail/12series.png") {
	template_purchase(89, 288)
}

switch(FEAT_TRAINS, SELF, switch_pax_12_series_purchase, current_year) {
	0..1987: spriteset_pax_12_series_jnr_purchase;
	spriteset_pax_12_series_jr_purchase;	
}

switch(FEAT_TRAINS, SELF, switch_pax_12_series_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_12_series_rear;
	spriteset_pax_12_series;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_12_series_beginning, position_in_vehid_chain) {
	0: spriteset_pax_12_series_front;
	switch_pax_12_series_end;
	}


switch(FEAT_TRAINS, SELF, switch_pax_12_series_blue_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_12_series_blue_rear;
	spriteset_pax_12_series_blue;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_12_series_blue_beginning, position_in_vehid_chain) {
	0: spriteset_pax_12_series_blue_front;
	switch_pax_12_series_blue_end;
	}


switch(FEAT_TRAINS, SELF, switch_pax_12_series_cc_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_12_series_cc_rear;
	spriteset_pax_12_series_cc;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_12_series_cc_beginning, position_in_vehid_chain) {
	0: spriteset_pax_12_series_cc_front;
	switch_pax_12_series_cc_end;
	}



switch(FEAT_TRAINS, SELF, switch_pax_12_series_livery, cargo_subtype) {
	0: switch_pax_12_series_beginning;
	1: switch_pax_12_series_blue_beginning;
	2: switch_pax_12_series_cc_beginning;
}



switch(FEAT_TRAINS, SELF, switch_pax_12_series_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_REFIT_AUTOFORM), string(STR_CONCAT_2F, 
                                     							string(STR_COLOUR_BLUE), 
                                     							string(STR_COLOUR_WHITE)
                                    							)
															);
	1: return string(STR_CONCAT_2, string(STR_REFIT_AUTOFORM), string(STR_CONCAT_1F, 
                                     							string(STR_COLOUR_BLUE)
                                    							)
															);
	2: return string(STR_CONCAT_2, string(STR_REFIT_AUTOFORM), string(STR_CONCAT_1F, 
                                     							string(STR_SUFFIX_CC)
                                    							)
															);
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, pax_12_series, 1320) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PASSENGER_12);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1969,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 85; 
		refit_cost: 0;
		default_cargo_type: PASS;
		loading_speed: 50;
		cargo_age_period: 240;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 26;
		cost_factor: 76;
		running_cost_factor: 9;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_EXP),
								string(STR_CONCAT_6C, 
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JRE),
									string(STR_SUFFIX_JRC),
									string(STR_SUFFIX_JRW),
									string(STR_SUFFIX_JRS),
									string(STR_SUFFIX_JRK)
								)
							);

		cargo_capacity: return 85;
		default: switch_pax_12_series_livery;
		purchase: switch_pax_12_series_purchase;
		cargo_subtype_text: switch_pax_12_series_subtype_text;
	}
}
spriteset(spriteset_pax_24_ohanefu25, "gfx/paxmail/24series.png") {
	template_2cc_anim(1, 1)
}

spriteset(spriteset_pax_24_ohanefu25_rear, "gfx/paxmail/24series.png") {
	template_2cc_anim(180, 1)
}

spriteset(spriteset_pax_24_ohanefu24, "gfx/paxmail/24series.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_pax_24_ohanefu24_rear, "gfx/paxmail/24series.png") {
	template_2cc_anim(180, 32)
}

spriteset(spriteset_pax_24_ohane25, "gfx/paxmail/24series.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_pax_24_ohane24, "gfx/paxmail/24series.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_pax_24_orone25, "gfx/paxmail/24series.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_pax_24_orone24, "gfx/paxmail/24series.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_pax_24_oshi24, "gfx/paxmail/24series.png") {
	template_2cc_anim(1, 192)
}

spriteset(spriteset_pax_24_kani24, "gfx/paxmail/24series.png") {
	template_2cc_anim(1, 224)
}

spriteset(spriteset_pax_24_kani24_rear, "gfx/paxmail/24series.png") {
	template_2cc_anim(180, 224)
}



alternative_sprites(spriteset_pax_24_ohanefu25, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_pax_24_ohanefu25_rear, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_2cc_std(180, 1)
}

alternative_sprites(spriteset_pax_24_ohanefu24, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_2cc_std(1, 32)
}

alternative_sprites(spriteset_pax_24_ohanefu24_rear, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_2cc_std(180, 32)
}

alternative_sprites(spriteset_pax_24_ohane25, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_2cc_std(1, 64)
}

alternative_sprites(spriteset_pax_24_ohane24, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_2cc_std(1, 96)
}

alternative_sprites(spriteset_pax_24_orone25, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_2cc_std(1, 128)
}

alternative_sprites(spriteset_pax_24_orone24, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_2cc_std(1, 160)
}

alternative_sprites(spriteset_pax_24_oshi24, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_2cc_std(1, 192)
}

alternative_sprites(spriteset_pax_24_kani24, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_2cc_std(1, 224)
}

alternative_sprites(spriteset_pax_24_kani24_rear, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_2cc_std(180, 224)
}



//purchase
spriteset(spriteset_pax_24_series_jnr_purchase, "gfx/paxmail/24series.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_pax_24_series_jr_purchase, "gfx/paxmail/24series.png") {
	template_purchase(89, 256)
}


alternative_sprites(spriteset_pax_24_series_jnr_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_purchase(1, 256)
}

alternative_sprites(spriteset_pax_24_series_jr_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/24series.png") {
	template_purchase(89, 256)
}


switch(FEAT_TRAINS, SELF, switch_pax_24_series_yeardep_purchase, current_year) {
	0..1987: spriteset_pax_24_series_jnr_purchase;
	spriteset_pax_24_series_jr_purchase;
}



//auto formation
random_switch (FEAT_TRAINS, SELF, random_pax_24_series_auto_end) {
	1: spriteset_pax_24_ohanefu25_rear;
	1: spriteset_pax_24_ohanefu24_rear;
}

random_switch (FEAT_TRAINS, SELF, random_pax_24_series_auto_middle) {
	1: spriteset_pax_24_ohane25;
	1: spriteset_pax_24_ohane24;
	1: spriteset_pax_24_orone25;
	1: spriteset_pax_24_orone24;
}

switch(FEAT_TRAINS, SELF, switch_pax_24_series_auto_end, position_in_vehid_chain_from_end) {
	0: random_pax_24_series_auto_end;
	random_pax_24_series_auto_middle;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_24_series_auto_beginning, position_in_vehid_chain) {
	0: spriteset_pax_24_kani24;
	4: spriteset_pax_24_oshi24;
	switch_pax_24_series_auto_end;
	}


//end wagon switches
switch(FEAT_TRAINS, SELF, switch_pax_24_ohanefu25_end, position_in_consist_from_end) {
	0: spriteset_pax_24_ohanefu25_rear;
	spriteset_pax_24_ohanefu25;
	}
	
switch(FEAT_TRAINS, SELF, switch_pax_24_ohanefu24_end, position_in_consist_from_end) {
	0: spriteset_pax_24_ohanefu24_rear;
	spriteset_pax_24_ohanefu24;
	}
	
switch(FEAT_TRAINS, SELF, switch_pax_24_kani24_end, position_in_consist_from_end) {
	0: spriteset_pax_24_kani24_rear;
	spriteset_pax_24_kani24;
	}
	

//livery refit
switch(FEAT_TRAINS, SELF, switch_pax_24_series_livery, cargo_subtype) {
	1: switch_pax_24_ohanefu25_end;
	2: switch_pax_24_ohanefu24_end;
	3: spriteset_pax_24_ohane25;
	4: spriteset_pax_24_ohane24;
	5: spriteset_pax_24_orone25;
	6: spriteset_pax_24_orone24;
	7: spriteset_pax_24_oshi24;
	8: switch_pax_24_kani24_end;
	switch_pax_24_series_auto_beginning;
}



switch(FEAT_TRAINS, SELF, switch_pax_24_series_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_GINGA)
                                    )
                                 );
	1: return string(STR_CONCAT_4, string(STR_REFIT_PAX_OHNF25), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_SUFFIX_CONDUCTOR),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_WHITE)
									 )
	                                );
	2: return string(STR_CONCAT_4, string(STR_REFIT_PAX_OHNF24), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_SUFFIX_CONDUCTOR),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_WHITE)
									 )
	                                );
	3: return string(STR_CONCAT_3, string(STR_REFIT_PAX_OHN25), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_WHITE)
									 )
	                                );
	4: return string(STR_CONCAT_3, string(STR_REFIT_PAX_OHN24), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_WHITE)
									 )
	                                );
	5: return string(STR_CONCAT_3, string(STR_REFIT_PAX_ORN25), 
									string(STR_SUFFIX_SLEEPER_1CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_WHITE)
									 )
	                                );
	6: return string(STR_CONCAT_3, string(STR_REFIT_PAX_ORN24), 
									string(STR_SUFFIX_SLEEPER_1CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_WHITE)
									 )
	                                );
	7: return string(STR_CONCAT_3, string(STR_REFIT_PAX_OS24), 
									string(STR_SUFFIX_DINER),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_WHITE)
									 )
	                                );
	8: return string(STR_CONCAT_3, string(STR_REFIT_PAX_KN24), 
									string(STR_SUFFIX_GENERATOR),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_WHITE)
									 )
	                                );
	   return CB_RESULT_NO_TEXT;
	}





item (FEAT_TRAINS, pax_24_series, 1540) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PASSENGER_24);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1973,1,1);
		speed: 120 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 70; 
		cargo_age_period: 600;
		refit_cost: 0;
		default_cargo_type: PASS;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		cost_factor: 82;
		running_cost_factor: 10;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_SLP),
								string(STR_CONCAT_5C, 
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JRE),
									string(STR_SUFFIX_JRW),
									string(STR_SUFFIX_JRH),
									string(STR_SUFFIX_JRK)
								)
							);

		cargo_capacity: return 70;
		default: switch_pax_24_series_livery;
		purchase: switch_pax_24_series_yeardep_purchase;
		cargo_subtype_text: switch_pax_24_series_subtype_text;
	}
}
spriteset(spriteset_pax_50_series_red_end, "gfx/paxmail/50series.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_50_series_red, "gfx/paxmail/50series.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_50_series_blue_end, "gfx/paxmail/50series.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_50_series_blue, "gfx/paxmail/50series.png") {
	template_2cc_std(1, 96)
}

alternative_sprites(spriteset_pax_50_series_red_end, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/50series.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_pax_50_series_red, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/50series.png") {
	template_2cc_std(1, 32)
}

alternative_sprites(spriteset_pax_50_series_blue_end, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/50series.png") {
	template_2cc_std(1, 64)
}

alternative_sprites(spriteset_pax_50_series_blue, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/50series.png") {
	template_2cc_std(1, 96)
}


spriteset(spriteset_pax_50_series_brown_end, "gfx/paxmail/50series.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_50_series_brown, "gfx/paxmail/50series.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_pax_50_series_cc_end, "gfx/paxmail/50series.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_pax_50_series_cc, "gfx/paxmail/50series.png") {
	template_2cc_std(1, 224)
}


spriteset(spriteset_pax_50_series_jnr_purchase, "gfx/paxmail/50series.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_pax_50_series_jr_purchase, "gfx/paxmail/50series.png") {
	template_purchase(89, 256)
}

switch(FEAT_TRAINS, SELF, switch_pax_50_series_purchase, current_year) {
	0..1987: spriteset_pax_50_series_jnr_purchase;
	spriteset_pax_50_series_jr_purchase;	
}


switch(FEAT_TRAINS, SELF, switch_pax_50_series_red_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_50_series_red_end;
	spriteset_pax_50_series_red;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_50_series_red_beginning, position_in_vehid_chain) {
	0: spriteset_pax_50_series_red_end;
	switch_pax_50_series_red_end;
	}
	
	
switch(FEAT_TRAINS, SELF, switch_pax_50_series_blue_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_50_series_blue_end;
	spriteset_pax_50_series_blue;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_50_series_blue_beginning, position_in_vehid_chain) {
	0: spriteset_pax_50_series_blue_end;
	switch_pax_50_series_blue_end;
	}

switch(FEAT_TRAINS, SELF, switch_pax_50_series_brown_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_50_series_brown_end;
	spriteset_pax_50_series_brown;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_50_series_brown_beginning, position_in_vehid_chain) {
	0: spriteset_pax_50_series_brown_end;
	switch_pax_50_series_brown_end;
	}
	
	
switch(FEAT_TRAINS, SELF, switch_pax_50_series_cc_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_50_series_cc_end;
	spriteset_pax_50_series_cc;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_50_series_cc_beginning, position_in_vehid_chain) {
	0: spriteset_pax_50_series_cc_end;
	switch_pax_50_series_cc_end;
	}



switch(FEAT_TRAINS, SELF, switch_pax_50_series_livery, cargo_subtype) {
	0: switch_pax_50_series_red_beginning;
	1: switch_pax_50_series_blue_beginning;
	2: switch_pax_50_series_brown_beginning;
	3: switch_pax_50_series_cc_beginning;
}



switch(FEAT_TRAINS, SELF, switch_pax_50_series_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_REFIT_AUTOFORM), string(STR_CONCAT_1F, 
                                     							string(STR_COLOUR_RED)
                                    							)
															);
	1: return string(STR_CONCAT_2, string(STR_REFIT_AUTOFORM), string(STR_CONCAT_2F, 
                                     							string(STR_COLOUR_BLUE), 
                                     							string(STR_COLOUR_WHITE)
                                    							)
															);
	2: return string(STR_CONCAT_2, string(STR_REFIT_AUTOFORM), string(STR_CONCAT_2F, 
                                     							string(STR_COLOUR_BROWN), 
                                     							string(STR_COLOUR_RED)
                                    							)
															);
	3: return string(STR_CONCAT_2, string(STR_REFIT_AUTOFORM), string(STR_CONCAT_1F, 
                                     							string(STR_SUFFIX_CC)
                                    							)
															);
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, stack_pax_50_series, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_pax_50_series_livery;
	1:  switch_taillights_8;
}





item (FEAT_TRAINS, pax_50_series, 1340) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PASSENGER_50);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1977,1,1);
		speed: 95 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 100; 
		refit_cost: 0;
		default_cargo_type: PASS;
		loading_speed: 50;
		cargo_age_period: 160;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 24;
		cost_factor: 72;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_LOC),
								string(STR_CONCAT_6C, 
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JRE),
									string(STR_SUFFIX_JRW),
									string(STR_SUFFIX_JRS),
									string(STR_SUFFIX_JRK),
									string(STR_SUFFIX_PRIVATE),
								)
							);

		cargo_capacity: return 100;
		default: stack_pax_50_series;
		purchase: switch_pax_50_series_purchase;
		cargo_subtype_text: switch_pax_50_series_subtype_text;
		
	}
}
spriteset(spriteset_pax_50_5000_4ac_end, "gfx/paxmail/50_5000_series.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_50_5000_4ac_end_rear, "gfx/paxmail/50_5000_series.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_pax_50_5000_2ac_end, "gfx/paxmail/50_5000_series.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_50_5000_2ac_end_rear, "gfx/paxmail/50_5000_series.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_pax_50_5000_4ac, "gfx/paxmail/50_5000_series.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_50_5000_2ac, "gfx/paxmail/50_5000_series.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_50_5000_noac, "gfx/paxmail/50_5000_series.png") {
	template_2cc_std(1, 128)
}

/*
spriteset(spriteset_pax_50_5000_jnr_purchase, "gfx/paxmail/50_5000_series.png") {
	template_purchase(1, 256)
}
*/

spriteset(spriteset_pax_50_5000_jr_purchase, "gfx/paxmail/50_5000_series.png") {
	template_purchase(89, 256)
}



alternative_sprites(spriteset_pax_50_5000_4ac_end, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/50_5000_series.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_pax_50_5000_4ac_end_rear, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/50_5000_series.png") {
	template_2cc_std(180, 1)
}

alternative_sprites(spriteset_pax_50_5000_2ac_end, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/50_5000_series.png") {
	template_2cc_std(1, 32)
}

alternative_sprites(spriteset_pax_50_5000_2ac_end_rear, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/50_5000_series.png") {
	template_2cc_std(180, 32)
}

alternative_sprites(spriteset_pax_50_5000_4ac, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/50_5000_series.png") {
	template_2cc_std(1, 64)
}

alternative_sprites(spriteset_pax_50_5000_2ac, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/50_5000_series.png") {
	template_2cc_std(1, 96)
}

alternative_sprites(spriteset_pax_50_5000_noac, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/50_5000_series.png") {
	template_2cc_std(1, 128)
}

/*
alternative_sprites(spriteset_pax_50_5000_jnr_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/50_5000_series.png") {
	template_purchase(1, 256)
}
*/

alternative_sprites(spriteset_pax_50_5000_jr_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,  "gfx/paxmail/32bpp/50_5000_series.png") {
	template_purchase(89, 256)
}




random_switch (FEAT_TRAINS, SELF, random_pax_50_5000_end) {
	1: spriteset_pax_50_5000_4ac_end_rear;
	1: spriteset_pax_50_5000_2ac_end_rear;
}


random_switch (FEAT_TRAINS, SELF, random_pax_50_5000_middle) {
	1: spriteset_pax_50_5000_4ac_end;
	1: spriteset_pax_50_5000_2ac_end;
	4: spriteset_pax_50_5000_4ac;
	4: spriteset_pax_50_5000_2ac;
	4: spriteset_pax_50_5000_noac;
}

random_switch (FEAT_TRAINS, SELF, random_pax_50_5000_front) {
	1: spriteset_pax_50_5000_4ac_end;
	1: spriteset_pax_50_5000_2ac_end;
}



switch(FEAT_TRAINS, SELF, switch_pax_50_5000_series_end, position_in_vehid_chain_from_end) {
	0: random_pax_50_5000_end;
	random_pax_50_5000_middle;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_50_5000_series_beginning, position_in_vehid_chain) {
	0: random_pax_50_5000_front;
	switch_pax_50_5000_series_end;
	}



switch(FEAT_TRAINS, SELF, switch_pax_50_5000_series_noac_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_50_5000_2ac_end_rear;
	spriteset_pax_50_5000_noac;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_50_5000_series_noac_beginning, position_in_vehid_chain) {
	0: spriteset_pax_50_5000_2ac_end;
	switch_pax_50_5000_series_noac_end;
	}


switch(FEAT_TRAINS, SELF, switch_pax_50_5000_series_ac_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_50_5000_4ac_end_rear;
	spriteset_pax_50_5000_4ac;
	}
	

switch(FEAT_TRAINS, SELF, switch_pax_50_5000_series_ac_beginning, position_in_vehid_chain) {
	0: spriteset_pax_50_5000_4ac_end;
	switch_pax_50_5000_series_ac_end;
	}



switch(FEAT_TRAINS, SELF, switch_pax_50_5000_series_livery, cargo_subtype) {
	0: switch_pax_50_5000_series_beginning;
	1: switch_pax_50_5000_series_noac_beginning;
	2: switch_pax_50_5000_series_ac_beginning;
}

switch(FEAT_TRAINS, SELF, switch_pax_50_5000_series_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_REFIT_AUTOFORM), string(STR_CONCAT_2F, 
                                     							string(STR_COLOUR_BLUE), 
                                     							string(STR_COLOUR_WHITE)
                                    							), string(STR_SUFFIX_RANDOM)
															);
	1: return string(STR_CONCAT_3, string(STR_REFIT_AUTOFORM), string(STR_CONCAT_2F, 
                                     							string(STR_COLOUR_BLUE), 
                                     							string(STR_COLOUR_WHITE)
                                    							), string(STR_SUFFIX_ORIGINAL)
															);
	2: return string(STR_CONCAT_3, string(STR_REFIT_AUTOFORM), string(STR_CONCAT_2F, 
                                     							string(STR_COLOUR_BLUE), 
                                     							string(STR_COLOUR_WHITE)
                                    							), string(STR_SUFFIX_AIRCON)
															);
	   return CB_RESULT_NO_TEXT;
	}
	


item (FEAT_TRAINS, pax_50_5000_series, 1341) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PAX_50_5000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1987,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 90; 
		refit_cost: 0;
		default_cargo_type: PASS;
		loading_speed: 50;
		cargo_age_period: 200;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 24;
		cost_factor: 74;
		running_cost_factor: 9;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
		variant_group: 1340;
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_EXP),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JRE),
									string(STR_SUFFIX_JRH)
								)
							);

		cargo_capacity: return 90;
		default: switch_pax_50_5000_series_livery;
		purchase: spriteset_pax_50_5000_jr_purchase;
		cargo_subtype_text: switch_pax_50_5000_series_subtype_text;
		
	}
}

spriteset(spriteset_pax_26series_1, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_26series_2, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_26series_3, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_26series_4, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_26series_5, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_26series_6, "gfx/paxmail/26series-cassiopeia.png") { //repeats
	template_2cc_std(1, 160)
}

spriteset(spriteset_pax_26series_lounge, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_pax_26series_gen, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(1, 224)
}

//flipped
spriteset(spriteset_pax_26series_flip_1, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(1, 1)
}

spriteset(spriteset_pax_26series_flip_2, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_pax_26series_flip_3, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(1, 64)
}

spriteset(spriteset_pax_26series_flip_4, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(1, 96)
}

spriteset(spriteset_pax_26series_flip_5, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(1, 128)
}

spriteset(spriteset_pax_26series_flip_6, "gfx/paxmail/26series-cassiopeia.png") { //repeats
	template_2cc_flip(1, 160)
}

spriteset(spriteset_pax_26series_flip_lounge, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(1, 192)
}

spriteset(spriteset_pax_26series_flip_gen, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(1, 224)
}

//cc

spriteset(spriteset_pax_26series_cc_1, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_pax_26series_cc_2, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_pax_26series_cc_3, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_pax_26series_cc_4, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_pax_26series_cc_5, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_pax_26series_cc_6, "gfx/paxmail/26series-cassiopeia.png") { //repeats
	template_2cc_std(180, 160)
}

spriteset(spriteset_pax_26series_cc_lounge, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_pax_26series_cc_gen, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_std(180, 224)
}

//flipped
spriteset(spriteset_pax_26series_cc_flip_1, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(180, 1)
}

spriteset(spriteset_pax_26series_cc_flip_2, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(180, 32)
}

spriteset(spriteset_pax_26series_cc_flip_3, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(180, 64)
}

spriteset(spriteset_pax_26series_cc_flip_4, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(180, 96)
}

spriteset(spriteset_pax_26series_cc_flip_5, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(180, 128)
}

spriteset(spriteset_pax_26series_cc_flip_6, "gfx/paxmail/26series-cassiopeia.png") { //repeats
	template_2cc_flip(180, 160)
}

spriteset(spriteset_pax_26series_cc_flip_lounge, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(180, 192)
}

spriteset(spriteset_pax_26series_cc_flip_gen, "gfx/paxmail/26series-cassiopeia.png") {
	template_2cc_flip(180, 224)
}


//purch

spriteset(spriteset_pax_26series_purchase, "gfx/paxmail/26series-cassiopeia.png") {
	template_purchase(1, 288)
}

//autoform forward

switch(FEAT_TRAINS, SELF, switch_pax_26series_forward_autoform, position_in_vehid_chain) {
	0: spriteset_pax_26series_1;
	1: spriteset_pax_26series_2;
	2: spriteset_pax_26series_3;
	3: spriteset_pax_26series_4;
	4: spriteset_pax_26series_5;
	spriteset_pax_26series_6;
	}

	
switch(FEAT_TRAINS, SELF, switch_pax_26series_lounge_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_26series_lounge;
	switch_pax_26series_forward_autoform;
	}
	
switch(FEAT_TRAINS, SELF, switch_pax_26series_gen_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_26series_gen;
	switch_pax_26series_forward_autoform;
	}
	
//autoform rev

switch(FEAT_TRAINS, SELF, switch_pax_26series_lounge_front, position_in_vehid_chain) {
	0: spriteset_pax_26series_flip_lounge;
	spriteset_pax_26series_flip_6;
	}
	
switch(FEAT_TRAINS, SELF, switch_pax_26series_lounge_backward_autoform, position_in_vehid_chain_from_end) {
	0: spriteset_pax_26series_flip_1;
	1: spriteset_pax_26series_flip_2;
	2: spriteset_pax_26series_flip_3;
	3: spriteset_pax_26series_flip_4;
	4: spriteset_pax_26series_flip_5;
	switch_pax_26series_lounge_front;
	}

switch(FEAT_TRAINS, SELF, switch_pax_26series_gen_front, position_in_vehid_chain) {
	0: spriteset_pax_26series_flip_gen;
	spriteset_pax_26series_flip_6;
	}


switch(FEAT_TRAINS, SELF, switch_pax_26series_gen_backward_autoform, position_in_vehid_chain_from_end) {
	0: spriteset_pax_26series_flip_1;
	1: spriteset_pax_26series_flip_2;
	2: spriteset_pax_26series_flip_3;
	3: spriteset_pax_26series_flip_4;
	4: spriteset_pax_26series_flip_5;
	switch_pax_26series_gen_front;
	}
	
//autoform forward CC

switch(FEAT_TRAINS, SELF, switch_pax_26series_cc_forward_autoform, position_in_vehid_chain) {
	0: spriteset_pax_26series_cc_1;
	1: spriteset_pax_26series_cc_2;
	2: spriteset_pax_26series_cc_3;
	3: spriteset_pax_26series_cc_4;
	4: spriteset_pax_26series_cc_5;
	spriteset_pax_26series_cc_6;
	}

	
switch(FEAT_TRAINS, SELF, switch_pax_26series_cc_lounge_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_26series_cc_lounge;
	switch_pax_26series_cc_forward_autoform;
	}
	
switch(FEAT_TRAINS, SELF, switch_pax_26series_cc_gen_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_26series_cc_gen;
	switch_pax_26series_cc_forward_autoform;
	}
	
//autoform rev CC

switch(FEAT_TRAINS, SELF, switch_pax_26series_cc_lounge_front, position_in_vehid_chain) {
	0: spriteset_pax_26series_cc_flip_lounge;
	spriteset_pax_26series_cc_flip_6;
	}
	
switch(FEAT_TRAINS, SELF, switch_pax_26series_cc_lounge_backward_autoform, position_in_vehid_chain_from_end) {
	0: spriteset_pax_26series_cc_flip_1;
	1: spriteset_pax_26series_cc_flip_2;
	2: spriteset_pax_26series_cc_flip_3;
	3: spriteset_pax_26series_cc_flip_4;
	4: spriteset_pax_26series_cc_flip_5;
	switch_pax_26series_cc_lounge_front;
	}

switch(FEAT_TRAINS, SELF, switch_pax_26series_cc_gen_front, position_in_vehid_chain) {
	0: spriteset_pax_26series_cc_flip_gen;
	spriteset_pax_26series_cc_flip_6;
	}


switch(FEAT_TRAINS, SELF, switch_pax_26series_cc_gen_backward_autoform, position_in_vehid_chain_from_end) {
	0: spriteset_pax_26series_cc_flip_1;
	1: spriteset_pax_26series_cc_flip_2;
	2: spriteset_pax_26series_cc_flip_3;
	3: spriteset_pax_26series_cc_flip_4;
	4: spriteset_pax_26series_cc_flip_5;
	switch_pax_26series_cc_gen_front;
	}
	


//refits

switch(FEAT_TRAINS, SELF, switch_pax_26series_livery, cargo_subtype) {
	0: switch_pax_26series_lounge_end;
	1: switch_pax_26series_gen_end;
	2: switch_pax_26series_lounge_backward_autoform;
	3: switch_pax_26series_gen_backward_autoform;
	4: switch_pax_26series_cc_lounge_end;
	5: switch_pax_26series_cc_gen_end;
	6: switch_pax_26series_cc_lounge_backward_autoform;
	7: switch_pax_26series_cc_gen_backward_autoform;
}


switch(FEAT_TRAINS, SELF, switch_pax_26series_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_3, string(STR_REFIT_AUTOFORM), string(STR_SUFFIX_LOUNGE),
                                     						   string(STR_CONCAT_4F, 
																string(STR_COLOUR_SILVER),
																string(STR_COLOUR_PURPLE),
																string(STR_COLOUR_RED),
																string(STR_COLOUR_YELLOW)
                                    							)
															);
	1: return string(STR_CONCAT_3, string(STR_REFIT_AUTOFORM), string(STR_SUFFIX_GENERATOR),
                                     						   string(STR_CONCAT_4F, 
																string(STR_COLOUR_SILVER),
																string(STR_COLOUR_PURPLE),
																string(STR_COLOUR_RED),
																string(STR_COLOUR_YELLOW)
                                    							)
															);
	2: return string(STR_CONCAT_4, string(STR_REFIT_AUTOFORM), string(STR_SUFFIX_LOUNGE),
                                     						   string(STR_CONCAT_4F, 
																string(STR_COLOUR_SILVER),
																string(STR_COLOUR_PURPLE),
																string(STR_COLOUR_RED),
																string(STR_COLOUR_YELLOW)
                                    							), string(STR_SUFFIX_FLIPPED)
															);
	3: return string(STR_CONCAT_4, string(STR_REFIT_AUTOFORM), string(STR_SUFFIX_GENERATOR),
                                     						   string(STR_CONCAT_4F, 
																string(STR_COLOUR_SILVER),
																string(STR_COLOUR_PURPLE),
																string(STR_COLOUR_RED),
																string(STR_COLOUR_YELLOW)
                                    							), string(STR_SUFFIX_FLIPPED)
															);
	4: return string(STR_CONCAT_3, string(STR_REFIT_AUTOFORM), string(STR_SUFFIX_LOUNGE),
                                     						   string(STR_CONCAT_1F, 
																string(STR_SUFFIX_CC)
                                    							)
															);
	5: return string(STR_CONCAT_3, string(STR_REFIT_AUTOFORM), string(STR_SUFFIX_GENERATOR),
                                     						   string(STR_CONCAT_1F, 
																string(STR_SUFFIX_CC)
                                    							)
															);
	6: return string(STR_CONCAT_4, string(STR_REFIT_AUTOFORM), string(STR_SUFFIX_LOUNGE),
                                     						   string(STR_CONCAT_1F, 
																string(STR_SUFFIX_CC)
                                    							), string(STR_SUFFIX_FLIPPED)
															);
	7: return string(STR_CONCAT_4, string(STR_REFIT_AUTOFORM), string(STR_SUFFIX_GENERATOR),
                                     						   string(STR_CONCAT_1F, 
																string(STR_SUFFIX_CC)
                                    							), string(STR_SUFFIX_FLIPPED)
															);
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, pax_26series, 1346) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PAX_26);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1999,1,1);
		speed: 120 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 70; 
		refit_cost: 0;
		cargo_age_period: 800;
		default_cargo_type: PASS;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 29;
		cost_factor: 83;
		running_cost_factor: 11;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_LUX),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_JRE)
								)
							);

		default: switch_pax_26series_livery;
		purchase: spriteset_pax_26series_purchase;
		cargo_subtype_text: switch_pax_26series_subtype_text;

	}
}
spriteset(spriteset_pax_77series_1, "gfx/paxmail/77series-7stars.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_77series_2, "gfx/paxmail/77series-7stars.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_77series_3, "gfx/paxmail/77series-7stars.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_77series_4, "gfx/paxmail/77series-7stars.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_77series_7, "gfx/paxmail/77series-7stars.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_77series_cc_1, "gfx/paxmail/77series-7stars.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_pax_77series_cc_2, "gfx/paxmail/77series-7stars.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_pax_77series_cc_3, "gfx/paxmail/77series-7stars.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_pax_77series_cc_4, "gfx/paxmail/77series-7stars.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_pax_77series_cc_7, "gfx/paxmail/77series-7stars.png") {
	template_2cc_std(180, 128)
}

//flipped

spriteset(spriteset_pax_77series_flip_1, "gfx/paxmail/77series-7stars.png") {
	template_2cc_flip(1, 1)
}

spriteset(spriteset_pax_77series_flip_2, "gfx/paxmail/77series-7stars.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_pax_77series_flip_3, "gfx/paxmail/77series-7stars.png") {
	template_2cc_flip(1, 64)
}

spriteset(spriteset_pax_77series_flip_4, "gfx/paxmail/77series-7stars.png") {
	template_2cc_flip(1, 96)
}

spriteset(spriteset_pax_77series_flip_7, "gfx/paxmail/77series-7stars.png") {
	template_2cc_flip(1, 128)
}

spriteset(spriteset_pax_77series_cc_flip_1, "gfx/paxmail/77series-7stars.png") {
	template_2cc_flip(180, 1)
}

spriteset(spriteset_pax_77series_cc_flip_2, "gfx/paxmail/77series-7stars.png") {
	template_2cc_flip(180, 32)
}

spriteset(spriteset_pax_77series_cc_flip_3, "gfx/paxmail/77series-7stars.png") {
	template_2cc_flip(180, 64)
}

spriteset(spriteset_pax_77series_cc_flip_4, "gfx/paxmail/77series-7stars.png") {
	template_2cc_flip(180, 96)
}

spriteset(spriteset_pax_77series_cc_flip_7, "gfx/paxmail/77series-7stars.png") {
	template_2cc_flip(180, 128)
}




//32bpp

alternative_sprites(spriteset_pax_77series_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_pax_77series_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_2cc_std(1, 32)
}

alternative_sprites(spriteset_pax_77series_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_2cc_std(1, 64)
}

alternative_sprites(spriteset_pax_77series_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_2cc_std(1, 96)
}

alternative_sprites(spriteset_pax_77series_7, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_2cc_std(1, 128)
}


//32bpp flipped

alternative_sprites(spriteset_pax_77series_flip_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_2cc_flip(1, 1)
}

alternative_sprites(spriteset_pax_77series_flip_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_2cc_flip(1, 32)
}

alternative_sprites(spriteset_pax_77series_flip_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_2cc_flip(1, 64)
}

alternative_sprites(spriteset_pax_77series_flip_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_2cc_flip(1, 96)
}

alternative_sprites(spriteset_pax_77series_flip_7, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_2cc_flip(1, 128)
}


//purch

spriteset(spriteset_pax_77series_purchase, "gfx/paxmail/77series-7stars.png") {
	template_purchase(1, 288)
}

alternative_sprites(spriteset_pax_77series_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/7stars.png") {
	template_purchase(1, 288)
}


switch(FEAT_TRAINS, SELF, switch_pax_77series_middle, position_in_vehid_chain % 2) {
	0: spriteset_pax_77series_3;
	spriteset_pax_77series_4;
	}

switch(FEAT_TRAINS, SELF, switch_pax_77series_start, position_in_vehid_chain) {
	0: spriteset_pax_77series_1;
	1: spriteset_pax_77series_2;
	2: spriteset_pax_77series_3;
	3: spriteset_pax_77series_4;
	4: spriteset_pax_77series_3;
	5: spriteset_pax_77series_4;
	switch_pax_77series_middle;
	}
	
	
switch(FEAT_TRAINS, SELF, switch_pax_77series_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_77series_7;
	switch_pax_77series_start;
	}
	

//reversed formation

switch(FEAT_TRAINS, SELF, switch_pax_77series_flip_middle, position_in_vehid_chain % 2) {
	0: spriteset_pax_77series_flip_4;
	spriteset_pax_77series_flip_3;
	}

switch(FEAT_TRAINS, SELF, switch_pax_77series_flip_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_77series_flip_1;
	1: spriteset_pax_77series_flip_2;
	2: spriteset_pax_77series_flip_3;
	3: spriteset_pax_77series_flip_4;
	4: spriteset_pax_77series_flip_3;
	5: spriteset_pax_77series_flip_4;
	switch_pax_77series_flip_middle;
	}
	
switch(FEAT_TRAINS, SELF, switch_pax_77series_flip_start, position_in_vehid_chain) {
	0: spriteset_pax_77series_flip_7;
	switch_pax_77series_flip_end;
	}




	//cc refit


switch(FEAT_TRAINS, SELF, switch_pax_77series_cc_middle, position_in_vehid_chain % 2) {
	0: spriteset_pax_77series_cc_3;
	spriteset_pax_77series_cc_4;
	}

switch(FEAT_TRAINS, SELF, switch_pax_77series_cc_start, position_in_vehid_chain) {
	0: spriteset_pax_77series_cc_1;
	1: spriteset_pax_77series_cc_2;
	2: spriteset_pax_77series_cc_3;
	3: spriteset_pax_77series_cc_4;
	4: spriteset_pax_77series_cc_3;
	5: spriteset_pax_77series_cc_4;
	switch_pax_77series_cc_middle;
	}
	
	
switch(FEAT_TRAINS, SELF, switch_pax_77series_cc_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_77series_cc_7;
	switch_pax_77series_cc_start;
	}

//cc flip

switch(FEAT_TRAINS, SELF, switch_pax_77series_cc_flip_middle, position_in_vehid_chain % 2) {
	0: spriteset_pax_77series_cc_flip_4;
	spriteset_pax_77series_cc_flip_3;
	}

switch(FEAT_TRAINS, SELF, switch_pax_77series_cc_flip_end, position_in_vehid_chain_from_end) {
	0: spriteset_pax_77series_cc_flip_1;
	1: spriteset_pax_77series_cc_flip_2;
	2: spriteset_pax_77series_cc_flip_3;
	3: spriteset_pax_77series_cc_flip_4;
	4: spriteset_pax_77series_cc_flip_3;
	5: spriteset_pax_77series_cc_flip_4;
	switch_pax_77series_cc_flip_middle;
	}
	
switch(FEAT_TRAINS, SELF, switch_pax_77series_cc_flip_start, position_in_vehid_chain) {
	0: spriteset_pax_77series_cc_flip_7;
	switch_pax_77series_cc_flip_end;
	}

//liery refit

switch(FEAT_TRAINS, SELF, switch_pax_77series_livery, cargo_subtype) {
	0: switch_pax_77series_end;
	1: switch_pax_77series_flip_start;
	2: switch_pax_77series_cc_end;
	3: switch_pax_77series_cc_flip_start;
}



switch(FEAT_TRAINS, SELF, switch_pax_77series_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_REFIT_AUTOFORM), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_DKRED), 
                                    string(STR_COLOUR_GOLD)
                                    )
                                 );
	1: return string(STR_CONCAT_3, string(STR_REFIT_AUTOFORM), 
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_DKRED), 
                                    string(STR_COLOUR_GOLD)
                                    ), string(STR_SUFFIX_FLIPPED)
                                 );
	2: return string(STR_CONCAT_2, string(STR_REFIT_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CC)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_REFIT_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_CC)
                                    ), string(STR_SUFFIX_FLIPPED)
                                 );
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, pax_77series, 1347) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_PAX_77);
		climates_available: ALL_CLIMATES;
		introduction_date: date(2013,1,1);
		speed: 100 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 70; 
		refit_cost: 0;
		cargo_age_period: 800;
		default_cargo_type: PASS;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 29;
		cost_factor: 83;
		running_cost_factor: 11;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_LUX),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_JRK)
								)
							);

		default: switch_pax_77series_livery;
		cargo_subtype_text: switch_pax_77series_subtype_text;
		purchase: spriteset_pax_77series_purchase;

	}
}
spriteset(spriteset_pax_orone10_brown, "gfx/paxmail/10series.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_pax_ohane17_brown, "gfx/paxmail/10series.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_pax_naha10_brown, "gfx/paxmail/10series.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_pax_nahafu10_brown, "gfx/paxmail/10series.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_pax_naro10_brown, "gfx/paxmail/10series.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_pax_nahane10_brown, "gfx/paxmail/10series.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_pax_oshi17_brown, "gfx/paxmail/10series.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_pax_narohane10_brown, "gfx/paxmail/10series.png") {
	template_2cc_std(1, 224)
}




spriteset(spriteset_pax_orone10_blue, "gfx/paxmail/10series.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_pax_ohane17_blue, "gfx/paxmail/10series.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_pax_naha10_blue, "gfx/paxmail/10series.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_pax_nahafu10_blue, "gfx/paxmail/10series.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_pax_naro10_blue, "gfx/paxmail/10series.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_pax_nahane10_blue, "gfx/paxmail/10series.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_pax_oshi17_blue, "gfx/paxmail/10series.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_pax_narohane10_blue, "gfx/paxmail/10series.png") {
	template_2cc_std(180, 224)
}



spriteset(spriteset_pax_10_stripe_blue, "gfx/paxmail/10series.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_pax_10_stripe_green, "gfx/paxmail/10series.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_pax_10_stripe_white, "gfx/paxmail/10series.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_pax_10_halfstripe_blue, "gfx/paxmail/10series.png") {
	template_2cc_std(180, 256)
}

spriteset(spriteset_pax_10_halfstripe_green, "gfx/paxmail/10series.png") {
	template_2cc_std(180, 288)
}


spriteset(spriteset_pax_10_aircon, "gfx/paxmail/10series.png") {
	template_2cc_std(180, 320)
}






spriteset(spriteset_pax_10series_jnr_brown_purchase, "gfx/paxmail/10series.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_pax_10series_jnr_blue_purchase, "gfx/paxmail/10series.png") {
	template_purchase(180, 352)
}

/*
spriteset(spriteset_pax_10series_jr_purchase, "gfx/paxmail/10series.png") {
	template_purchase(268, 352)
}
*/

switch(FEAT_TRAINS, SELF, switch_pax_10series_purchase, current_year) {
	0..1964: spriteset_pax_10series_jnr_brown_purchase;
	spriteset_pax_10series_jnr_blue_purchase;	
}


//yeardep base livery

random_switch (FEAT_TRAINS, SELF, random_pax_naro10_old) {
	3: spriteset_pax_naro10_brown;
	1: spriteset_pax_naro10_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_naro10_new) {
	1: spriteset_pax_naro10_brown;
	3: spriteset_pax_naro10_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_naro10_yeardep, current_year) {
	0..1964: spriteset_pax_naro10_brown;
	1964..1970: random_pax_naro10_old;
	1970..1979: random_pax_naro10_new;
	spriteset_pax_naro10_blue;	
}


random_switch (FEAT_TRAINS, SELF, random_pax_orone10_old) {
	3: spriteset_pax_orone10_brown;
	1: spriteset_pax_orone10_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_orone10_new) {
	1: spriteset_pax_orone10_brown;
	3: spriteset_pax_orone10_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_orone10_yeardep, current_year) {
	0..1964: spriteset_pax_orone10_brown;
	1964..1970: random_pax_orone10_old;
	1970..1979: random_pax_orone10_new;
	spriteset_pax_orone10_blue;	
}
	

	
random_switch (FEAT_TRAINS, SELF, random_pax_ohane17_old) {
	3: spriteset_pax_ohane17_brown;
	1: spriteset_pax_ohane17_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_ohane17_new) {
	1: spriteset_pax_ohane17_brown;
	3: spriteset_pax_ohane17_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_ohane17_yeardep, current_year) {
	0..1964: spriteset_pax_ohane17_brown;
	1964..1970: random_pax_ohane17_old;
	1970..1979: random_pax_ohane17_new;
	spriteset_pax_ohane17_blue;	
}
	
	
random_switch (FEAT_TRAINS, SELF, random_pax_narohane10_old) {
	3: spriteset_pax_narohane10_brown;
	1: spriteset_pax_narohane10_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_narohane10_new) {
	1: spriteset_pax_narohane10_brown;
	3: spriteset_pax_narohane10_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_narohane10_yeardep, current_year) {
	0..1964: spriteset_pax_narohane10_brown;
	1964..1970: random_pax_narohane10_old;
	1970..1979: random_pax_narohane10_new;
	spriteset_pax_narohane10_blue;	
}
	
	
random_switch (FEAT_TRAINS, SELF, random_pax_naha10_old) {
	3: spriteset_pax_naha10_brown;
	1: spriteset_pax_naha10_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_naha10_new) {
	1: spriteset_pax_naha10_brown;
	3: spriteset_pax_naha10_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_naha10_yeardep, current_year) {
	0..1959: spriteset_pax_naha10_brown;
	1959..1964: random_pax_naha10_old;
	1964..1979: random_pax_naha10_new;
	spriteset_pax_naha10_blue;	
}
	
	
random_switch (FEAT_TRAINS, SELF, random_pax_nahafu10_old) {
	3: spriteset_pax_nahafu10_brown;
	1: spriteset_pax_nahafu10_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_nahafu10_new) {
	1: spriteset_pax_nahafu10_brown;
	3: spriteset_pax_nahafu10_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_nahafu10_yeardep, current_year) {
	0..1959: spriteset_pax_nahafu10_brown;
	1959..1964: random_pax_nahafu10_old;
	1964..1979: random_pax_nahafu10_new;
	spriteset_pax_nahafu10_blue;	
}
	
	
	random_switch (FEAT_TRAINS, SELF, random_pax_nahane10_old) {
	3: spriteset_pax_nahane10_brown;
	1: spriteset_pax_nahane10_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_nahane10_new) {
	1: spriteset_pax_nahane10_brown;
	3: spriteset_pax_nahane10_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_nahane10_yeardep, current_year) {
	0..1959: spriteset_pax_nahane10_brown;
	1959..1964: random_pax_nahane10_old;
	1964..1979: random_pax_nahane10_new;
	spriteset_pax_nahane10_blue;	
}


random_switch (FEAT_TRAINS, SELF, random_pax_oshi17_old) {
	3: spriteset_pax_oshi17_brown;
	1: spriteset_pax_oshi17_blue;
}

random_switch (FEAT_TRAINS, SELF, random_pax_oshi17_new) {
	1: spriteset_pax_oshi17_brown;
	3: spriteset_pax_oshi17_blue;
}


switch(FEAT_TRAINS, SELF, switch_pax_oshi17_yeardep, current_year) {
	0..1959: spriteset_pax_oshi17_brown;
	1959..1964: random_pax_oshi17_old;
	1964..1979: random_pax_oshi17_new;
	spriteset_pax_oshi17_blue;	
}
	

switch(FEAT_TRAINS, SELF, switch_pax_10series_stripe_yeardep, current_year) {
	0..1961: spriteset_pax_10_stripe_blue;
	1961..1987: spriteset_pax_10_stripe_green;
	spriteset_blank;
}
	
switch(FEAT_TRAINS, SELF, switch_pax_10series_halfstripe_yeardep, current_year) {
	0..1961: spriteset_pax_10_halfstripe_blue;
	1961..1987: spriteset_pax_10_halfstripe_green;
	spriteset_blank;
}	
	
	
//aircon switch

random_switch (FEAT_TRAINS, SELF, random_pax_10_roof_old) {
	1: spriteset_pax_10_aircon;
	2: spriteset_blank;
}

random_switch (FEAT_TRAINS, SELF, random_pax_10_roof_new) {
	2: spriteset_pax_10_aircon;
	1: spriteset_blank;
}

switch(FEAT_TRAINS, SELF, switch_pax_10_aircon, current_year) {
	0..1959: spriteset_blank; //no aircon
	1960..1965: random_pax_10_roof_old;
	1966..1969: random_pax_10_roof_new; //mixed
	spriteset_pax_10_aircon; //all aircon
	}




	
//auto formations
//local auto formation


switch(FEAT_TRAINS, SELF, switch_pax_10series_local_auto_end, position_in_consist_from_end) {
	0: switch_pax_nahafu10_yeardep;
	switch_pax_naha10_yeardep;
	}

switch(FEAT_TRAINS, SELF, switch_pax_10series_local_auto_beginning, position_in_vehid_chain) {
	0: switch_pax_naro10_yeardep;
	switch_pax_10series_local_auto_end;
	}


// express auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_10series_express_auto_beginning) {
	1: switch_pax_naro10_yeardep;
	1: switch_pax_orone10_yeardep;
	1: switch_pax_ohane17_yeardep;
}

random_switch (FEAT_TRAINS, SELF, random_pax_10series_express_auto_end) {
	1: switch_pax_naha10_yeardep;
	1: switch_pax_nahane10_yeardep;
}


switch(FEAT_TRAINS, SELF, switch_pax_10series_express_auto_end, position_in_consist_from_end) {
	0: switch_pax_nahafu10_yeardep;
	random_pax_10series_express_auto_end;
	}

switch(FEAT_TRAINS, SELF, switch_pax_10series_express_auto_beginning, position_in_vehid_chain) {
	0..3: random_pax_10series_express_auto_beginning;
	4: switch_pax_oshi17_yeardep;
	switch_pax_10series_express_auto_end;
	}


switch(FEAT_TRAINS, SELF, switch_pax_10series_express_auto_stripe, position_in_vehid_chain) {
	0..3: switch_pax_10series_stripe_yeardep;
	}

random_switch (FEAT_TRAINS, SELF, random_pax_10series_express_auto_roof) {
	dependent: random_pax_10series_express_auto_beginning;
	1: switch_pax_10_aircon;
	1: spriteset_blank;
	1: switch_pax_10_aircon;
}


switch(FEAT_TRAINS, SELF, switch_pax_10series_express_auto_roof, position_in_vehid_chain) {
	0..3: random_pax_10series_express_auto_roof;
	4: spriteset_blank;
	switch_pax_10_aircon;
	}

// sleeper auto formation

random_switch (FEAT_TRAINS, SELF, random_pax_10series_sleeper_auto_beginning) {
	2: switch_pax_orone10_yeardep;
	1: switch_pax_ohane17_yeardep;
}

random_switch (FEAT_TRAINS, SELF, random_pax_10series_sleeper_auto_end) {
	1: switch_pax_naha10_yeardep;
	1: switch_pax_nahane10_yeardep;
}


switch(FEAT_TRAINS, SELF, switch_pax_10series_sleeper_auto_end, position_in_consist_from_end) {
	0: switch_pax_nahafu10_yeardep;
	1..3: random_pax_10series_sleeper_auto_end;
	random_pax_10series_sleeper_auto_beginning;
	}

switch(FEAT_TRAINS, SELF, switch_pax_10series_sleeper_auto_beginning, position_in_vehid_chain) {
	0..4: random_pax_10series_sleeper_auto_beginning;
	5: switch_pax_oshi17_yeardep;
	6..7: switch_pax_nahane10_yeardep;
	8: switch_pax_narohane10_yeardep;
	switch_pax_10series_sleeper_auto_end;
	}


random_switch (FEAT_TRAINS, SELF, random_pax_10series_sleeper_auto_stripe) {
	1: switch_pax_10series_stripe_yeardep;
	1: switch_pax_10series_stripe_yeardep;
	2: spriteset_blank;
}

switch(FEAT_TRAINS, SELF, switch_pax_10series_sleeper_auto_stripe_end, position_in_consist_from_end) {
	0: spriteset_blank;
	switch_pax_10series_stripe_yeardep;
	}

switch(FEAT_TRAINS, SELF, switch_pax_10series_sleeper_auto_stripe, position_in_vehid_chain) {
	5..7: spriteset_blank;
	8: switch_pax_10series_halfstripe_yeardep;
	switch_pax_10series_sleeper_auto_stripe_end;
	}

random_switch (FEAT_TRAINS, SELF, random_pax_10series_sleeper_auto_roof) {
	dependent: random_pax_10series_sleeper_auto_beginning;
	2: spriteset_blank;
	1: switch_pax_10_aircon;
}


switch(FEAT_TRAINS, SELF, switch_pax_10series_sleeper_auto_roof_end, position_in_consist_from_end) {
	0..3: switch_pax_10_aircon;
	random_pax_10series_sleeper_auto_roof;
	}

switch(FEAT_TRAINS, SELF, switch_pax_10series_sleeper_auto_roof, position_in_vehid_chain) {
	0..4: random_pax_10series_sleeper_auto_roof;
	5: spriteset_blank;
	6..7: switch_pax_10_aircon;
	8: spriteset_blank;
	switch_pax_10series_sleeper_auto_roof_end;
	}




switch(FEAT_TRAINS, SELF, switch_pax_10series_base_livery, cargo_subtype) {
	0: switch_pax_10series_local_auto_beginning;
	1: switch_pax_10series_express_auto_beginning;
	2: switch_pax_10series_sleeper_auto_beginning;
	3: spriteset_pax_naro10_brown;
	4: spriteset_pax_orone10_brown;
	5: spriteset_pax_ohane17_brown;
	6: spriteset_pax_narohane10_brown;
	7: spriteset_pax_naro10_brown;
	8: spriteset_pax_orone10_brown;
	9: spriteset_pax_ohane17_brown;
	10: spriteset_pax_narohane10_brown;
	11: spriteset_pax_naha10_brown;
	12: spriteset_pax_nahafu10_brown;
	13: spriteset_pax_nahane10_brown;
	14: spriteset_pax_oshi17_brown;
	15: spriteset_pax_naro10_blue;
	16: spriteset_pax_orone10_blue;
	17: spriteset_pax_ohane17_blue;
	18: spriteset_pax_narohane10_blue;
	19: spriteset_pax_naro10_blue;
	20: spriteset_pax_orone10_blue;
	21: spriteset_pax_ohane17_blue;
	22: spriteset_pax_narohane10_blue;
	23: spriteset_pax_naha10_blue;
	24: spriteset_pax_nahafu10_blue;
	25: spriteset_pax_nahane10_blue;
	26: spriteset_pax_oshi17_blue;
	27: spriteset_pax_orone10_blue;
}

switch(FEAT_TRAINS, SELF, switch_pax_10series_stripe_livery, cargo_subtype) {
	0: spriteset_blank;
	1: switch_pax_10series_express_auto_stripe;
	2: switch_pax_10series_sleeper_auto_stripe;
	3: spriteset_pax_10_stripe_blue;
	4: spriteset_pax_10_stripe_blue;
	5: spriteset_pax_10_stripe_blue;
	6: spriteset_pax_10_halfstripe_blue;
	7: spriteset_pax_10_stripe_green;
	8: spriteset_pax_10_stripe_green;
	9: spriteset_pax_10_stripe_green;
	10: spriteset_pax_10_halfstripe_green;
	11: spriteset_blank;
	12: spriteset_blank;
	13: spriteset_blank;
	14: spriteset_blank;
	15: spriteset_pax_10_stripe_green;
	16: spriteset_pax_10_stripe_green;
	17: spriteset_pax_10_stripe_green;
	18: spriteset_pax_10_halfstripe_green;
	19: spriteset_blank;
	20: spriteset_blank;
	21: spriteset_blank;
	22: spriteset_blank;
	23: spriteset_blank;
	24: spriteset_blank;
	25: spriteset_blank;
	26: spriteset_blank;
	27: spriteset_pax_10_stripe_white;
}

switch(FEAT_TRAINS, SELF, switch_pax_10series_roof, cargo_subtype) {
	0: switch_pax_10_aircon; //TODO AC
	1: switch_pax_10series_express_auto_roof;
	2: switch_pax_10series_sleeper_auto_roof;
	3: switch_pax_10_aircon;
	4: spriteset_blank;
	5: switch_pax_10_aircon;
	6: spriteset_blank;
	7: switch_pax_10_aircon;
	8: spriteset_blank;
	9: switch_pax_10_aircon;
	10: spriteset_blank;
	11: switch_pax_10_aircon;
	12: switch_pax_10_aircon;
	13: switch_pax_10_aircon;
	14: spriteset_blank;
	15: switch_pax_10_aircon;
	16: spriteset_blank;
	17: switch_pax_10_aircon;
	18: spriteset_blank;
	19: switch_pax_10_aircon;
	20: spriteset_blank;
	21: switch_pax_10_aircon;
	22: spriteset_blank;
	23: switch_pax_10_aircon;
	24: switch_pax_10_aircon;
	25: switch_pax_10_aircon;
	26: spriteset_blank;
	27: spriteset_blank;
}


switch(FEAT_TRAINS, SELF, switch_pax_10series_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_LOCAL)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_LTDEXP)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_AUTOFORM), 
                                   string(STR_CONCAT_1F, 
                                    string(STR_SUFFIX_SLEEPER)
                                    )
                                 );
	3: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NR10), 
									string(STR_SUFFIX_PAX_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_BLUE)
									 )
	                                );
	4: return string(STR_CONCAT_3, string(STR_REFIT_PAX_ORN10), 
									string(STR_SUFFIX_SLEEPER_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_BLUE)
									 )
	                                );
	5: return string(STR_CONCAT_3, string(STR_REFIT_PAX_OHN17), 
									string(STR_SUFFIX_SLEEPER_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_BLUE)
									 )
	                                );
	6: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NRHN10), 
									string(STR_SUFFIX_SLEEPER_23CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_BLUE)
									 )
	                                );
	7: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NR10), 
									string(STR_SUFFIX_PAX_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	8: return string(STR_CONCAT_3, string(STR_REFIT_PAX_ORN10), 
									string(STR_SUFFIX_SLEEPER_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	9: return string(STR_CONCAT_3, string(STR_REFIT_PAX_OHN17), 
									string(STR_SUFFIX_SLEEPER_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	10: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NRHN10), 
									string(STR_SUFFIX_SLEEPER_23CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BROWN),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	11: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NH10), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	12: return string(STR_CONCAT_4, string(STR_REFIT_PAX_NHF10), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_SUFFIX_CONDUCTOR),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	13: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NHN10), 
									string(STR_SUFFIX_SLEEPER_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	14: return string(STR_CONCAT_3, string(STR_REFIT_PAX_OS17), 
									string(STR_SUFFIX_DINER), 
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	15: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NR10), 
									string(STR_SUFFIX_PAX_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	16: return string(STR_CONCAT_3, string(STR_REFIT_PAX_ORN10), 
									string(STR_SUFFIX_SLEEPER_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	17: return string(STR_CONCAT_3, string(STR_REFIT_PAX_OHN17), 
									string(STR_SUFFIX_SLEEPER_3CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	18: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NRHN10), 
									string(STR_SUFFIX_SLEEPER_23CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_GREEN)
									 )
	                                );
	19: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NR10), 
									string(STR_SUFFIX_PAX_2CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	20: return string(STR_CONCAT_3, string(STR_REFIT_PAX_ORN10), 
									string(STR_SUFFIX_SLEEPER_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	21: return string(STR_CONCAT_3, string(STR_REFIT_PAX_OHN17), 
									string(STR_SUFFIX_SLEEPER_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	22: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NRHN10), 
									string(STR_SUFFIX_SLEEPER_23CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	23: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NH10), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	24: return string(STR_CONCAT_4, string(STR_REFIT_PAX_NHF10), 
									string(STR_SUFFIX_PAX_3CLASS),
									string(STR_SUFFIX_CONDUCTOR),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	25: return string(STR_CONCAT_3, string(STR_REFIT_PAX_NHN10), 
									string(STR_SUFFIX_SLEEPER_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	26: return string(STR_CONCAT_3, string(STR_REFIT_PAX_OS17), 
									string(STR_SUFFIX_DINER), 
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	27: return string(STR_CONCAT_3, string(STR_REFIT_PAX_ORN10), 
									string(STR_SUFFIX_SLEEPER_2CLASS),
									string(STR_CONCAT_2F, 
                                     string(STR_COLOUR_BLUE),
									 string(STR_COLOUR_WHITE)
									 )
	                                );
	   return CB_RESULT_NO_TEXT;
	}



switch(FEAT_TRAINS, SELF, stack_pax_10series, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_pax_10series_base_livery;
	1: 	switch_pax_10series_stripe_livery;
    2:  switch_pax_10series_roof;
	3:  switch_taillights_8;
}



item (FEAT_TRAINS, pax_10series, 1322) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_SLEEPER_10);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1956,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 80; 
		refit_cost: 0;
		default_cargo_type: PASS;
		cargo_age_period: 500;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_PASSENGERS); 
		non_refittable_cargo_classes: 0; 
		weight: 28;
		cost_factor: 80;
		running_cost_factor: 9;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_PAX_SLP),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JR)
								)
							);

		cargo_capacity: return 80;
		default: stack_pax_10series;
		purchase: switch_pax_10series_purchase;
		cargo_subtype_text: switch_pax_10series_subtype_text;
		
	}
}

spriteset(spriteset_mani_30, "gfx/paxmail/mailvans.png") {
	template_2cc_std(1, 64)
}

alternative_sprites(spriteset_mani_30, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/mailvans.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_mani_30_purchase, "gfx/paxmail/mailvans.png") {
	template_purchase(1, 224)
}



item (FEAT_TRAINS, mail_mani_30, 1380) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_30);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1965,1,1);
		speed: 109.5 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 100; 
		refit_cost: 0;
		default_cargo_type: MAIL;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_ARMOURED); 
		non_refittable_cargo_classes: 0; 
		weight: 29;
		cost_factor: 52;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_VAL),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_JNR)
								)
							);

		default: spriteset_mani_30;
		purchase: spriteset_mani_30_purchase;
		
	}
}
spriteset(spriteset_mani34_old_brown, "gfx/paxmail/suyu42.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_mani34_new_brown, "gfx/paxmail/suyu42.png") {
	template_2cc_std(1, 192)
}


spriteset(spriteset_mani34_old_blue, "gfx/paxmail/suyu42.png") {
	template_2cc_std(180, 160)
}


spriteset(spriteset_mani34_new_blue, "gfx/paxmail/suyu42.png") {
	template_2cc_std(180, 192)
}



spriteset(spriteset_mani34_jgr_purchase, "gfx/paxmail/suyu42.png") {
	template_purchase(1, 480)
}

spriteset(spriteset_mani34_jnr_purchase, "gfx/paxmail/suyu42.png") {
	template_purchase(89, 480)
}

spriteset(spriteset_mani34_jnr_blue_purchase, "gfx/paxmail/suyu42.png") {
	template_purchase(180, 480)
}




random_switch (FEAT_TRAINS, SELF, random_mani34_old) {
	2: spriteset_mani34_old_brown;
	1: spriteset_mani34_new_brown;
}

random_switch (FEAT_TRAINS, SELF, random_mani34_new) {
	1: spriteset_mani34_old_brown;
	3: spriteset_mani34_new_brown;
	2: spriteset_mani34_old_blue;
	4: spriteset_mani34_new_blue;

}

random_switch (FEAT_TRAINS, SELF, random_mani34_blue) {
	3: spriteset_mani34_new_blue;
	1: spriteset_mani34_old_blue;
}
	

switch(FEAT_TRAINS, SELF, switch_mani34_yeardep_livery, current_year) {
	0..1955: spriteset_mani34_old_brown;
	1955..1964: random_mani34_old;
	1964..1979: random_mani34_new;
	random_mani34_blue;
}


switch(FEAT_TRAINS, SELF, switch_mani34_livery, cargo_subtype) {
	1: spriteset_mani34_old_brown;
	2: spriteset_mani34_new_brown;
    3: spriteset_mani34_old_blue;
	4: spriteset_mani34_new_blue;
	switch_mani34_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_mani34_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_OLDSHAPE)
                                 );
	2: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    ), string(STR_SUFFIX_NEWSHAPE)
                                 );
    3: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_OLDSHAPE)
                                 );
	4: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_NEWSHAPE)
                                 );
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_mani34_purchase_yeardep, current_year) {
    0..1949: spriteset_mani34_jgr_purchase;
	1949..1964: spriteset_mani34_jnr_purchase;
    spriteset_mani34_jnr_blue_purchase;
    }

switch(FEAT_TRAINS, SELF, stack_mail_mani34, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_mani34_livery;
	1:  switch_taillights_8;
}

item (FEAT_TRAINS, mail_mani34, 1357) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_MANI_34);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1946,1,1);
		speed: 100 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 100; 
		refit_cost: 0;
		default_cargo_type: VALU;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_ARMOURED); 
		non_refittable_cargo_classes: 0; 
		weight: 29;
		cost_factor: 45;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_VAL),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_JNR)
								)
							);

		default: stack_mail_mani34;
		purchase: switch_mani34_purchase_yeardep;
		cargo_subtype_text: switch_mani34_subtype_text;
	}
}
//Universal door sprites for all 8/8 box vans

spriteset(spriteset_boxvan8_doors_blank, "gfx/paxmail/mani44.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_boxvan8_doors_empty, "gfx/paxmail/mani44.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_boxvan8_doors_half, "gfx/paxmail/mani44.png") {
	template_2cc_std(1, 128)
}

spritegroup spritegroup_boxvan8_doors_load {
    loading: [spriteset_boxvan8_doors_empty, spriteset_boxvan8_doors_half, spriteset_boxvan8_doors_blank];
    loaded:  [spriteset_boxvan8_doors_blank];
}

//MANI 44

spriteset(spriteset_mani_44, "gfx/paxmail/mani44.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_mani_44_euroliner, "gfx/paxmail/mani44.png") {
	template_2cc_std(1, 32)
}



spriteset(spriteset_mani_44_jnr_purchase, "gfx/paxmail/mani44.png") {
	template_purchase(1, 160)
}

spriteset(spriteset_mani_44_jr_purchase, "gfx/paxmail/mani44.png") {
	template_purchase(89, 160)
}

switch(FEAT_TRAINS, SELF, switch_mani_44_purchase_yeardep, current_year) {
    0..1987: spriteset_mani_44_jnr_purchase;
    spriteset_mani_44_jr_purchase;
    }

switch(FEAT_TRAINS, SELF, switch_mani_44_livery, cargo_subtype) {
	1: spriteset_mani_44_euroliner;
	spriteset_mani_44;
}


switch(FEAT_TRAINS, SELF, switch_mani_44_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                    )
                                 );
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JRC),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_WHITE), 
                                    string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_EUROLINER)
                                 );
	   return CB_RESULT_NO_TEXT;
	}


//stacked sprites

switch(FEAT_TRAINS, SELF, switch_mani_44_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_mani_44_livery;
    1:  spritegroup_boxvan8_doors_load;
}


item (FEAT_TRAINS, mail_mani_44, 1390) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_44);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1970,1,1);
		speed: 109.5 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 100; 
		refit_cost: 0;
		default_cargo_type: MAIL;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_EXPRESS); 
		non_refittable_cargo_classes: 0; 
		weight: 24;
		cost_factor: 52;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_EXF),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JRC)
								)
							);

		default: switch_mani_44_loadstack;
		purchase: switch_mani_44_purchase_yeardep;
		cargo_subtype_text: switch_mani_44_subtype_text;
		
	}
}
spriteset(spriteset_mani_50, "gfx/paxmail/suyu15.png") {
	template_2cc_std(1, 32)
}


alternative_sprites(spriteset_mani_50, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/mailvans.png") {
	template_2cc_std(1, 32)
}


spriteset(spriteset_mani_50_purchase, "gfx/paxmail/suyu15.png") {
	template_purchase(1, 192)
}



item (FEAT_TRAINS, mail_mani_50, 1370) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_50);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1969,1,1);
		speed: 109.5 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 100; 
		refit_cost: 0;
		default_cargo_type: MAIL;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_MAIL); 
		non_refittable_cargo_classes: 0; 
		weight: 20;
		cost_factor: 52;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_EXP),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JR)
								)
							);

		default: spriteset_mani_50;
		purchase: spriteset_mani_50_purchase;
		
	}
}
spriteset(spriteset_oyu10_brown, "gfx/paxmail/oyu10.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_oyu10_blue, "gfx/paxmail/oyu10.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_oyu10_blue_ac, "gfx/paxmail/oyu10.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_oyu10_brown_purchase, "gfx/paxmail/oyu10.png") {
	template_purchase(1, 160)
}

spriteset(spriteset_oyu10_blue_purchase, "gfx/paxmail/oyu10.png") {
	template_purchase(1, 192)
}

random_switch(FEAT_TRAINS, SELF, random_oyu10_blue_ac) {
	1: spriteset_oyu10_blue;
	1: spriteset_oyu10_blue_ac;
	}

random_switch (FEAT_TRAINS, SELF, random_oyu10_old) {
	3: spriteset_oyu10_brown;
	1: spriteset_oyu10_blue;
}

random_switch (FEAT_TRAINS, SELF, random_oyu10_new) {
	1: spriteset_oyu10_brown;
	3: random_oyu10_blue_ac;
}
	

switch(FEAT_TRAINS, SELF, switch_oyu10_yeardep_livery, current_year) {
	0..1964: spriteset_oyu10_brown;
	1964..1970: random_oyu10_old;
	1970..1979: random_oyu10_new;
	random_oyu10_blue_ac;
}


switch(FEAT_TRAINS, SELF, switch_oyu10_livery, cargo_subtype) {
	1: spriteset_oyu10_brown;
	2: spriteset_oyu10_blue;
    3: spriteset_oyu10_blue_ac;
	switch_oyu10_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_oyu10_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                    )
                                 );
    3: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                    ), string(STR_SUFFIX_AIRCON)
                                 );
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_oyu10_purchase_yeardep, current_year) {
    0..1968: spriteset_oyu10_brown_purchase;
    spriteset_oyu10_blue_purchase;
    }



item (FEAT_TRAINS, mail_oyu10, 1668) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_OYU_10);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1956,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 100; 
		refit_cost: 0;
		default_cargo_type: MAIL;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_MAIL); 
		non_refittable_cargo_classes: 0; 
		weight: 20;
		cost_factor: 45;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_RPO),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_JNR)
								)
							);

		default: switch_oyu10_livery;
		purchase: switch_oyu10_purchase_yeardep;
		cargo_subtype_text: switch_oyu10_subtype_text;
		
	}
}
spriteset(spriteset_suyu_15, "gfx/paxmail/suyu15.png") {
	template_2cc_std(1, 1)
}


alternative_sprites(spriteset_suyu_15, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/paxmail/32bpp/mailvans.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_suyu_15_purchase, "gfx/paxmail/suyu15.png") {
	template_purchase(1, 160)
}



item (FEAT_TRAINS, mail_suyu_15, 1360) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_15);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1960,1,1);
		speed: 109.5 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 100; 
		refit_cost: 0;
		default_cargo_type: MAIL;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_MAIL); 
		non_refittable_cargo_classes: 0; 
		weight: 20;
		cost_factor: 52;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_RPO),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_JNR)
								)
							);

		default: spriteset_suyu_15;
		purchase: spriteset_suyu_15_purchase;
		
	}
}
spriteset(spriteset_mail_suhani35_brown, "gfx/paxmail/suyu42.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_mail_suyu42_brown, "gfx/paxmail/suyu42.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_mail_suyu43_brown, "gfx/paxmail/suyu42.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_mail_mani35_brown, "gfx/paxmail/suyu42.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_mail_mani36_brown, "gfx/paxmail/suyu42.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_mail_suhani35_blue, "gfx/paxmail/suyu42.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_mail_suyu42_blue, "gfx/paxmail/suyu42.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_mail_suyu43_blue, "gfx/paxmail/suyu42.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_mail_mani35_blue, "gfx/paxmail/suyu42.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_mail_mani36_blue, "gfx/paxmail/suyu42.png") {
	template_2cc_std(180, 128)
}


spriteset(spriteset_suyu42_brown_purchase, "gfx/paxmail/suyu42.png") {
	template_purchase(1, 448)
}

spriteset(spriteset_suyu42_blue_purchase, "gfx/paxmail/suyu42.png") {
	template_purchase(89, 448)
}





random_switch (FEAT_TRAINS, SELF, random_suyu42_old) {
	4: spriteset_mail_mani35_brown;
	1: spriteset_mail_mani36_brown;
    2: spriteset_mail_suyu42_brown;
    1: spriteset_mail_suyu43_brown;
}

random_switch (FEAT_TRAINS, SELF, random_suyu42_new) {
	4: spriteset_mail_mani35_brown;
	1: spriteset_mail_mani36_brown;
    2: spriteset_mail_suyu42_brown;
    1: spriteset_mail_suyu43_brown;
	1: spriteset_mail_mani35_blue;
	4: spriteset_mail_mani36_blue;
    1: spriteset_mail_suyu42_blue;
    2: spriteset_mail_suyu43_blue;

}

random_switch (FEAT_TRAINS, SELF, random_suyu42_blue) {
	1: spriteset_mail_mani35_blue;
	4: spriteset_mail_mani36_blue;
    2: spriteset_mail_suyu42_blue;
    2: spriteset_mail_suyu43_blue;
}
	

switch(FEAT_TRAINS, SELF, switch_suyu42_yeardep_livery, current_year) {
	0..1964: random_suyu42_old;
	1964..1979: random_suyu42_new;
	random_suyu42_blue;
}


switch(FEAT_TRAINS, SELF, switch_suyu42_livery, cargo_subtype) {
	1: spriteset_mail_suhani35_brown;
	2: spriteset_mail_suyu42_brown;
    3: spriteset_mail_suyu43_brown;
	4: spriteset_mail_mani35_brown;
    5: spriteset_mail_mani36_brown;
    6: spriteset_mail_suhani35_blue;
    7: spriteset_mail_suyu42_blue;
    8: spriteset_mail_suyu43_blue;
    9: spriteset_mail_mani35_blue;
    10: spriteset_mail_mani36_blue;
	switch_suyu42_yeardep_livery;
}


switch(FEAT_TRAINS, SELF, switch_suyu42_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHANI35), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	2: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_SUYU42), 
									string(STR_SUFFIX_MAIL),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
    3: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_SUYU43), 
									string(STR_SUFFIX_MAIL),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
	4: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_MANI35), 
									string(STR_SUFFIX_LUGGAGE),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
    5: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_MANI36), 
									string(STR_SUFFIX_LUGGAGE),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BROWN)
									 )
	                                );
    6: return string(STR_CONCAT_3, string(STR_REFIT_PAX_SUHANI35), 
									string(STR_SUFFIX_COMBINE_3CLASS),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
    7: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_SUYU42), 
									string(STR_SUFFIX_MAIL),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
    8: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_SUYU43), 
									string(STR_SUFFIX_MAIL),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
    9: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_MANI35), 
									string(STR_SUFFIX_LUGGAGE),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
    10: return string(STR_CONCAT_3, string(STR_REFIT_MAIL_MANI36), 
									string(STR_SUFFIX_LUGGAGE),
									string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
									 )
	                                );
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_suyu42_purchase_yeardep, current_year) {
    0..1964: spriteset_suyu42_brown_purchase;
    spriteset_suyu42_blue_purchase;
    }

switch(FEAT_TRAINS, SELF, stack_mail_suyu42, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_suyu42_livery;
	1:  switch_taillights_8;
}

item (FEAT_TRAINS, mail_suyu42, 1359) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_SUYU42);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1953,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 100; 
		refit_cost: 0;
		default_cargo_type: MAIL;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_MAIL); 
		non_refittable_cargo_classes: 0; 
		weight: 29;
		cost_factor: 45;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_RPO),
								string(STR_CONCAT_1C, 
									string(STR_SUFFIX_JNR)
								)
							);

		default: stack_mail_suyu42;
		purchase: switch_suyu42_purchase_yeardep;
		cargo_subtype_text: switch_suyu42_subtype_text;
	}
}
spriteset(spriteset_suyu_44, "gfx/paxmail/suyu44.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_suni_41, "gfx/paxmail/suyu44.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_suni_41_flip, "gfx/paxmail/suyu44.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_suyu_44_cc, "gfx/paxmail/suyu44.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_suni_41_cc, "gfx/paxmail/suyu44.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_suni_41_cc_flip, "gfx/paxmail/suyu44.png") {
	template_2cc_flip(1, 96)
}




spriteset(spriteset_suyu_44_post_purchase, "gfx/paxmail/suyu44.png") {
	template_purchase(89, 160)
}

spriteset(spriteset_suni_41_post_purchase, "gfx/paxmail/suyu44.png") {
	template_purchase(89, 192)
}



switch(FEAT_TRAINS, SELF, switch_suyu_44_livery, cargo_subtype) {
	1: spriteset_suyu_44_cc;
	spriteset_suyu_44;
}


switch(FEAT_TRAINS, SELF, switch_suyu_44_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE),
									string(STR_COLOUR_SILVER)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_suyu_44_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_suyu_44_livery;
    1:  spritegroup_boxvan8_doors_load;
	2:  switch_taillights_8;
}



item (FEAT_TRAINS, suyu_44, 1395) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_SUYU_44);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1968,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 100; 
		refit_cost: 0;
		default_cargo_type: MAIL;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_MAIL); 
		non_refittable_cargo_classes: 0; 
		weight: 21;
		cost_factor: 52;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_EXF),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JRF)
								)
							);

		default: switch_suyu_44_loadstack;
		purchase: spriteset_suyu_44_post_purchase;
		cargo_subtype_text: switch_suyu_44_subtype_text;
	}
}





switch(FEAT_TRAINS, SELF, switch_suni_41_livery, cargo_subtype) {
	1: spriteset_suni_41_cc;
	spriteset_suni_41;
}


switch(FEAT_TRAINS, SELF, switch_suni_41_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE),
									string(STR_COLOUR_SILVER)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_suni_41_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_suni_41_livery;
    1:  spritegroup_boxvan8_doors_load;
	2:  switch_taillights_8;
}



item (FEAT_TRAINS, suni_41, 1396) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_MAIL_SUNI_41);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1968,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 100; 
		refit_cost: 0;
		default_cargo_type: MAIL;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_MAIL); 
		non_refittable_cargo_classes: 0; 
		weight: 21;
		cost_factor: 52;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_SPRITE_STACK);
		variant_group: 1395;
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_MAIL_EXF),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JRF)
								)
							);

		default: switch_suni_41_loadstack;
		purchase: spriteset_suni_41_post_purchase;
		cargo_subtype_text: switch_suni_41_subtype_text;
		reverse_build_probability: return 50;
	}
}

spriteset(spriteset_ka_1_grey_empty, "gfx/freight/ka_1.png") {
	template_2cc_anim(1, 1)
}

spriteset(spriteset_ka_1_grey_half, "gfx/freight/ka_1.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_ka_1_grey_full, "gfx/freight/ka_1.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_ka_1_grey_closed, "gfx/freight/ka_1.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ka_1_brown_empty, "gfx/freight/ka_1.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_ka_1_brown_half, "gfx/freight/ka_1.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_ka_1_brown_full, "gfx/freight/ka_1.png") {
	template_2cc_anim(1, 192)
}

spriteset(spriteset_ka_1_brown_closed, "gfx/freight/ka_1.png") {
	template_2cc_std(1, 224)
}





spriteset(spriteset_ka_1_jgr_purchase, "gfx/freight/ka_1.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_ka_1_jnr_purchase, "gfx/freight/ka_1.png") {
	template_purchase(89, 288)
}



spritegroup spritegroup_ka_1_grey_load {
    loading: [spriteset_ka_1_grey_empty, spriteset_ka_1_grey_half, spriteset_ka_1_grey_full, spriteset_ka_1_grey_closed];
    loaded:  [spriteset_ka_1_grey_empty, spriteset_ka_1_grey_closed];
}


spritegroup spritegroup_ka_1_brown_load {
    loading: [spriteset_ka_1_brown_empty, spriteset_ka_1_brown_half, spriteset_ka_1_brown_full, spriteset_ka_1_brown_closed];
    loaded:  [spriteset_ka_1_brown_empty, spriteset_ka_1_brown_closed];
}




random_switch(FEAT_TRAINS, SELF, random_ka_1_livery) {
	1: spritegroup_ka_1_grey_load;
	1: spritegroup_ka_1_brown_load;
	}
	



item (FEAT_TRAINS, ka_1, 1282) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_KA_1);
	introduction_date: date(1870,1,1);
	default_cargo_type: LVST;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 22;
	refit_cost: 0;
	cargo_age_period: 1000;
	speed: 65 km/h;
	non_refittable_cargo_classes: 0;
	cost_factor: 14;
	running_cost_factor: 2;
	running_cost_base: RUNNING_COST_STEAM;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	length: 4;
	loading_speed: 20;
	weight: 9;
	}
graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_FRT_LVST),
								string(STR_CONCAT_3C, 
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_PRIVATE)
								)
							);

	speed: switch_speedboost_1;
	purchase_speed: return 60;
	cargo_capacity: return 20;
	default: random_ka_1_livery;
//	cargo_subtype_text: switch_ka_1_subtype_text;
	purchase: spriteset_ka_1_jgr_purchase;
//	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_wa_1_stripe_closed, "gfx/freight/wa_1.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_wa_1_stripe_empty, "gfx/freight/wa_1.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_wa_1_stripe_full, "gfx/freight/wa_1.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_wa_1_black_closed, "gfx/freight/wa_1.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_wa_1_black_empty, "gfx/freight/wa_1.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_wa_1_black_full, "gfx/freight/wa_1.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_wa_1_brown_closed, "gfx/freight/wa_1.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_wa_1_brown_empty, "gfx/freight/wa_1.png") {
	template_2cc_anim(1, 224)
}

spriteset(spriteset_wa_1_brown_full, "gfx/freight/wa_1.png") {
	template_2cc_anim(1, 256)
}


spriteset(spriteset_wa_1_jgr_purchase, "gfx/freight/wa_1.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_wa_1_jnr_purchase, "gfx/freight/wa_1.png") {
	template_purchase(89, 288)
}



spritegroup spritegroup_wa_1_stripe_load {
    loading: [spriteset_wa_1_stripe_empty, spriteset_wa_1_stripe_full, spriteset_wa_1_stripe_closed];
    loaded:  [spriteset_wa_1_stripe_closed];
}


spritegroup spritegroup_wa_1_black_load {
    loading: [spriteset_wa_1_black_empty, spriteset_wa_1_black_full, spriteset_wa_1_black_closed];
    loaded:  [spriteset_wa_1_black_closed];
}

spritegroup spritegroup_wa_1_brown_load {
    loading: [spriteset_wa_1_brown_empty, spriteset_wa_1_brown_full, spriteset_wa_1_brown_closed];
    loaded:  [spriteset_wa_1_brown_closed];
}



random_switch(FEAT_TRAINS, SELF, random_wa_1_black) {
	1: spritegroup_wa_1_black_load;
	1: spritegroup_wa_1_stripe_load;
	}
	
random_switch(FEAT_TRAINS, SELF, random_wa_1_brown) {
	1: spritegroup_wa_1_black_load;
	1: spritegroup_wa_1_brown_load;
	}

switch(FEAT_TRAINS, SELF, switch_wa_1_yeardep, build_year) {
	0..1928: random_wa_1_brown;
	random_wa_1_black;
	}



switch(FEAT_TRAINS, SELF, switch_wa_1_livery, cargo_subtype) {
	1: spritegroup_wa_1_black_load;
	2: spritegroup_wa_1_stripe_load;
	3: spritegroup_wa_1_brown_load;
	switch_wa_1_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_wa_1_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	2: return string(STR_CONCAT_2F, string(STR_COLOUR_BLACK), string(STR_COLOUR_YELLOW));
	3: return string(STR_CONCAT_1F, string(STR_COLOUR_BROWN));
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, wa_1, 1932) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_WA_1);
	introduction_date: date(1870,1,1);
	default_cargo_type: GOOD;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 20;
	refit_cost: 0;
	speed: 65 km/h;
	refittable_cargo_classes: bitmask(CC_COVERED, CC_MAIL, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED, CC_ARMOURED); 
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [PASS, COAL, WOOD, IORE, CORE, AORE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SGBT, SGCN, TOUR, VEHI, KAOL];
	cost_factor: 14;
	running_cost_factor: 2;
	running_cost_base: RUNNING_COST_STEAM;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	length: 4;
	loading_speed: 20;
	weight: 10;
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_BOX),
							string(STR_CONCAT_3C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 65;
	cargo_capacity: return 20;
	default: switch_wa_1_livery;
	cargo_subtype_text: switch_wa_1_subtype_text;
	purchase: spriteset_wa_1_jgr_purchase;
//	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_wamu_21000_1, "gfx/freight/wamu_21000.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_wamu_21000_2, "gfx/freight/wamu_21000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_wamu_21000_3, "gfx/freight/wamu_21000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_wamu_21000_4, "gfx/freight/wamu_21000.png") {
	template_2cc_std(1, 96)
}


spriteset(spriteset_wamu_21000_5, "gfx/freight/wamu_21000.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_wamu_21000_6, "gfx/freight/wamu_21000.png") {
	template_2cc_std(1, 160)
}



spriteset(spriteset_wafu_21000, "gfx/freight/wamu_21000.png") {
	template_2cc_std(1, 192)
}


spriteset(spriteset_wamu_21000_jgr_purchase, "gfx/freight/wamu_21000.png") {
	template_purchase(1, 224)
}

spriteset(spriteset_wafu_21000_jgr_purchase, "gfx/freight/wamu_21000.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_wamu_21000_jnr_purchase, "gfx/freight/wamu_21000.png") {
	template_purchase(89, 224)
}

spriteset(spriteset_wafu_21000_jnr_purchase, "gfx/freight/wamu_21000.png") {
	template_purchase(89, 256)
}



random_switch (FEAT_TRAINS, SELF, random_wamu_21000) {
 1: spriteset_wamu_21000_1;
 2: spriteset_wamu_21000_2;
 2: spriteset_wamu_21000_3;
 1: spriteset_wamu_21000_4;
 2: spriteset_wamu_21000_5;
 1: spriteset_wamu_21000_6;
}


item (FEAT_TRAINS, wamu_21000, 1435) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_WAMU_21000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1928,1,1);
		speed: 65 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 30; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_COVERED, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED, CC_ARMOURED); 
		cargo_allow_refit: [GRAI, MAIZ, BEAN];
		cargo_disallow_refit: [PASS, COAL, WOOD, IORE, CORE, AORE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SGBT, SGCN, TOUR, VEHI, KAOL];
		weight: 10;
		cost_factor: 18;
		running_cost_factor: 3;
		running_cost_base: RUNNING_COST_STEAM;
		length: 5;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_BOX),
							string(STR_CONCAT_3C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

		speed: switch_speedboost_1;
		purchase_speed: return 65;
		cargo_capacity: return 30;
		default: random_wamu_21000;
		purchase: spriteset_wamu_21000_jgr_purchase;
		
	}
}


switch(FEAT_TRAINS, SELF, stack_wafu_21000, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  spriteset_wafu_21000;
	1:  switch_taillights_5;
}

item (FEAT_TRAINS, wafu_21000, 1436) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_WAFU_21000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1928,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 15; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_COVERED, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED, CC_ARMOURED); 
		cargo_allow_refit: [GRAI, MAIZ, BEAN];
		cargo_disallow_refit: [PASS, COAL, WOOD, IORE, CORE, AORE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SGBT, SGCN, TOUR, VEHI, KAOL];
		weight: 10;
		cost_factor: 18;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 5;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
		bitmask_vehicle_info: bitmask(5);//speedboost 75
		variant_group: 1435;
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_BRAKE),
							string(STR_CONCAT_3C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

		speed: switch_speedboost_1;
		purchase_speed: return 75;
		cargo_capacity: return 15;
		default: stack_wafu_21000;
		purchase: spriteset_wafu_21000_jgr_purchase;
		reverse_build_probability: return 50;
	}
}
spriteset(spriteset_wamu_90000_exp_1, "gfx/freight/wamu_90000.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_wamu_90000_exp_2, "gfx/freight/wamu_90000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_wamu_90000_exp_3, "gfx/freight/wamu_90000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_wamu_90000_exp_4, "gfx/freight/wamu_90000.png") {
	template_2cc_std(1, 96)
}


spriteset(spriteset_wamu_90000_1, "gfx/freight/wamu_90000.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_wamu_90000_2, "gfx/freight/wamu_90000.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_wamu_90000_3, "gfx/freight/wamu_90000.png") {
	template_2cc_std(1, 192)
}



spriteset(spriteset_wamu_90000_exp_purchase, "gfx/freight/wamu_90000.png") {
	template_purchase(89, 224)
}

spriteset(spriteset_wamu_90000_jnr_purchase, "gfx/freight/wamu_90000.png") {
	template_purchase(89, 256)
}

switch(FEAT_TRAINS, SELF, switch_wamu_90000_purchase_yeardep, current_year) {
    0..1965: spriteset_wamu_90000_exp_purchase;
    spriteset_wamu_90000_jnr_purchase;
    }



random_switch (FEAT_TRAINS, SELF, random_wamu_90000_exp) {
 1: spriteset_wamu_90000_exp_1;
 1: spriteset_wamu_90000_exp_2;
 2: spriteset_wamu_90000_exp_3;
 3: spriteset_wamu_90000_exp_4;
}

random_switch (FEAT_TRAINS, SELF, random_wamu_90000) {
 1: spriteset_wamu_90000_1;
 2: spriteset_wamu_90000_2;
 3: spriteset_wamu_90000_3;
}

switch(FEAT_TRAINS, SELF, switch_wamu_90000_yeardep, current_year) {
    0..1965: random_wamu_90000_exp;
    random_wamu_90000;
    }


switch(FEAT_TRAINS, SELF, switch_wamu_90000_livery, cargo_subtype) {
	0: switch_wamu_90000_yeardep;
	1: random_wamu_90000_exp;
	2: random_wamu_90000;
}



switch(FEAT_TRAINS, SELF, switch_wamu_90000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK),
									string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_PARCELS)
                                 ); 
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	}




item (FEAT_TRAINS, wamu_90000, 1437) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_WAMU_90000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1953,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 30; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_EXPRESS);
		cargo_allow_refit: [BEER, POWR, PAPR, VPTS, PPAR];
		cargo_disallow_refit: [WOOL];
		weight: 10;
		cost_factor: 18;
		running_cost_factor: 3;
		running_cost_base: RUNNING_COST_STEAM;
		length: 5;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
		variant_group: 1435; //tentative, maybe group w express vans
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_EXP),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JNR)
							)
						);

		speed: switch_speedboost_1;
		purchase_speed: return 75;
		cargo_capacity: return 30;
		default: switch_wamu_90000_livery;
		cargo_subtype_text: switch_wamu_90000_subtype_text;
		purchase: switch_wamu_90000_purchase_yeardep;
		
	}
}

/*
switch(FEAT_TRAINS, SELF, stack_wafu_90000, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  spriteset_wafu_90000;
	1:  switch_taillights_5;
}
*/
spriteset(spriteset_wamu_80000_brown1, "gfx/freight/wamu_80000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_wamu_80000_blue1, "gfx/freight/wamu_80000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_wamu_80000_blue2, "gfx/freight/wamu_80000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_wamu_80000_white1, "gfx/freight/wamu_80000.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_wamu_80000_white2, "gfx/freight/wamu_80000.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_wamu_80000_green1, "gfx/freight/wamu_80000.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_wamu_80000_green2, "gfx/freight/wamu_80000.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_wamu_80000_black, "gfx/freight/wamu_80000.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_wamu_80000_brown2, "gfx/freight/wamu_80000.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_wamu_80000_brown3, "gfx/freight/wamu_80000.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_wamu_80000_brown4, "gfx/freight/wamu_80000.png") {
	template_2cc_std(1, 320)
}


spriteset(spriteset_wamu_80000_roof1, "gfx/freight/wamu_80000.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_wamu_80000_roof2, "gfx/freight/wamu_80000.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_wamu_80000_stripe1, "gfx/freight/wamu_80000.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_wamu_80000_stripe2, "gfx/freight/wamu_80000.png") {
	template_2cc_std(180, 96)
}

spriteset(spriteset_wamu_80000_blank, "gfx/freight/wamu_80000.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_wamu_80000_empty, "gfx/freight/wamu_80000.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_wamu_80000_half, "gfx/freight/wamu_80000.png") {
	template_2cc_std(180, 192)
}

//purchase

spriteset(spriteset_wamu_80000_jnr_purchase, "gfx/freight/wamu_80000.png") {
	template_purchase(1, 384)
}

spriteset(spriteset_wamu_80000_jrf_purchase, "gfx/freight/wamu_80000.png") {
	template_purchase(89, 384)
}

spriteset(spriteset_wamu_580000_jnr_purchase, "gfx/freight/wamu_80000.png") {
	template_purchase(180, 384)
}



//door overlay
spritegroup spritegroup_wamu_80000_load {
    loading: [spriteset_wamu_80000_empty, spriteset_wamu_80000_half, spriteset_wamu_80000_blank];
    loaded:  [spriteset_wamu_80000_blank];
}

//randoms

random_switch (FEAT_TRAINS, SELF, random_wamu_80000_all) {
	8: spriteset_wamu_80000_brown1;
	1: spriteset_wamu_80000_blue1;
	2: spriteset_wamu_80000_blue2;
	1: spriteset_wamu_80000_green1;
	1: spriteset_wamu_80000_green2;
	6: spriteset_wamu_80000_brown2;
	5: spriteset_wamu_80000_black;	
	6: spriteset_wamu_80000_brown3;	
	2: spriteset_wamu_80000_brown4;	
}

random_switch (FEAT_TRAINS, SELF, random_wamu_80000_brown) {
	5: spriteset_wamu_80000_brown1;
	4: spriteset_wamu_80000_brown2;
	4: spriteset_wamu_80000_brown3;
	2: spriteset_wamu_80000_brown4;
}

random_switch (FEAT_TRAINS, SELF, random_wamu_80000_old) {
	8: spriteset_wamu_80000_brown1;
	4: spriteset_wamu_80000_brown2;
	4: spriteset_wamu_80000_brown3;
	5: spriteset_wamu_80000_black;
	1: spriteset_wamu_80000_white1;
	1: spriteset_wamu_80000_white2;
}

random_switch (FEAT_TRAINS, SELF, random_wamu_80000_blue) {
	3: spriteset_wamu_80000_blue2;
	2: spriteset_wamu_80000_blue1;
}

random_switch (FEAT_TRAINS, SELF, random_wamu_80000_white) {
	2: spriteset_wamu_80000_white1;
	3: spriteset_wamu_80000_white2;
}

random_switch (FEAT_TRAINS, SELF, random_wamu_80000_green) {
	2: spriteset_wamu_80000_green1;
	3: spriteset_wamu_80000_green2;
}



random_switch (FEAT_TRAINS, SELF, random_wamu_80000_roof) {
//	independent: random_wamu_80000_all;
	13: spriteset_wamu_80000_blank;
	1: spriteset_wamu_80000_roof1;
	2: spriteset_wamu_80000_roof2;

}

random_switch (FEAT_TRAINS, SELF, random_wamu_80000_stripe) {
	independent: random_wamu_80000_roof;
//	independent: random_wamu_80000_all;
	1: spriteset_wamu_80000_stripe1;
	1: spriteset_wamu_80000_stripe2;
	14: spriteset_wamu_80000_blank;
}




switch(FEAT_TRAINS, SELF, switch_wamu_80000_yeardep, build_year) {
	0..1990: random_wamu_80000_old;
	random_wamu_80000_all;
}

switch(FEAT_TRAINS, SELF, switch_wamu_80000_livery_stripe, cargo_subtype) {
	1: random_wamu_80000_stripe;
	2: random_wamu_80000_stripe;
	3: spriteset_wamu_80000_blank;
	4: random_wamu_80000_stripe;
	5: spriteset_wamu_80000_blank;
	random_wamu_80000_stripe;
}


switch(FEAT_TRAINS, SELF, switch_wamu_80000_livery, cargo_subtype) {
	1: random_wamu_80000_brown;
	2: random_wamu_80000_blue;
	3: random_wamu_80000_green;
	4: spriteset_wamu_80000_black;
	5: random_wamu_80000_white;
	switch_wamu_80000_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_wamu_80000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDYEAR);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_BROWN));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_BLUE));
	3: return string(STR_CONCAT_1F, string(STR_COLOUR_GREEN));
	4: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	5: return string(STR_CONCAT_1F, string(STR_COLOUR_WHITE));
	   return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_wamu_80000_purchase, current_year) {
	0..1987: spriteset_wamu_80000_jnr_purchase;
	spriteset_wamu_80000_jrf_purchase;
	}
	
//stacked sprites

switch(FEAT_TRAINS, SELF, switch_wamu_80000_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 3 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_wamu_80000_livery;
	1:  random_wamu_80000_roof;
	2:  switch_wamu_80000_livery_stripe;
    3:  spritegroup_wamu_80000_load;
}


item (FEAT_TRAINS, wamu_80000, 1951) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1958,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_WAMU_80000);
	speed: 75 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 50; 
	refit_cost: 0;
	default_cargo_type: GOOD;
	refittable_cargo_classes: bitmask(CC_COVERED, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED); 
	loading_speed: 20;
	cargo_allow_refit: [GRAI, FICR, WOOD, WOOL, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, FRUT, FRVG, TATO, WDCH, TBCO];
	cargo_disallow_refit: [PASS, COAL, WOOD, IORE, CORE, AORE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SGBT, SGCN, TOUR, VEHI, KAOL];
	non_refittable_cargo_classes: 0;
	weight: 15;
	cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
	length: 6;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_BOX),
							string(STR_CONCAT_3C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 75;
	cargo_capacity: return 50;
	default: switch_wamu_80000_loadstack;
	purchase: switch_wamu_80000_purchase;
	cargo_subtype_text: switch_wamu_80000_subtype_text;
	}
}


//wamu 48000

spriteset(spriteset_wamu_480000_jrf_purchase, "gfx/freight/wamu_80000.png") {
	template_purchase(268, 384)
}

spriteset(spriteset_wamu_480000_empty, "gfx/freight/wamu_80000.png") {
	template_2cc_anim(180, 224)
}

spriteset(spriteset_wamu_480000_half, "gfx/freight/wamu_80000.png") {
	template_2cc_anim(180, 256)
}

spriteset(spriteset_wamu_480000_full, "gfx/freight/wamu_80000.png") {
	template_2cc_anim(180, 288)
}

spriteset(spriteset_wamu_480000_tarp, "gfx/freight/wamu_80000.png") {
	template_2cc_anim(180, 320)
}


spritegroup spritegroup_wamu_480000_load {
    loading: [spriteset_wamu_480000_empty, spriteset_wamu_480000_half, spriteset_wamu_480000_full];
    loaded:  [spriteset_wamu_480000_empty, spriteset_wamu_480000_half, spriteset_wamu_480000_full, spriteset_wamu_480000_tarp];
}


//stacked sprites

switch(FEAT_TRAINS, SELF, switch_wamu_480000_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  spriteset_wamu_80000_brown4;
    1:  spritegroup_wamu_480000_load;
}


item (FEAT_TRAINS, wamu_480000, 1462) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1998,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_WAMU_480000);
	speed: 75 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 50; 
	refit_cost: 0;
//	default_cargo_type: COAL;
//	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED); 
	loading_speed: 20;
	cargo_allow_refit: [GRAI, FICR, WOOD, WOOL, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, FRUT, FRVG, TATO, WDCH, TBCO];
	cargo_disallow_refit: [COAL, IORE, CORE, PORE, CMNT];
	non_refittable_cargo_classes: 0;
	weight: 15;
	cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
	length: 6;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	variant_group: 1951;
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CHIP),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JRF)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 75;
	cargo_capacity: return 50;
	default: switch_wamu_480000_loadstack;
	purchase: spriteset_wamu_480000_jrf_purchase;
	colour_mapping: switch_generic_recolour;
	}
}

switch(FEAT_TRAINS, SELF, switch_wamu_580000_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_wamu_80000_white;
	1:  random_wamu_80000_roof;
    2:  spritegroup_wamu_80000_load;
}


item (FEAT_TRAINS, wamu_580000, 1463) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1967,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_WAMU_580000);
	speed: 75 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 50; 
	refit_cost: 0;
	default_cargo_type: FOOD;
	refittable_cargo_classes: bitmask(CC_REFRIGERATED); 
	loading_speed: 20;
	cargo_age_period: 1200;
//	cargo_allow_refit: [GRAI, FICR, WOOD, WOOL, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, FRUT, FRVG, TATO, WDCH, TBCO];
//	cargo_disallow_refit: [COAL, IORE, CORE, PORE, CMNT];
	non_refittable_cargo_classes: 0;
	weight: 15;
	cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
	length: 6;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	variant_group: 1951;
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_REEF),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JNR)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 75;
	cargo_capacity: return 50;
	default: switch_wamu_580000_loadstack;
	purchase: spriteset_wamu_580000_jnr_purchase;
//	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_waki_1_1, "gfx/freight/waki_1.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_waki_1_2, "gfx/freight/waki_1.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_wamufu_1, "gfx/freight/waki_1.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_waki_1_exp_1, "gfx/freight/waki_1.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_waki_1_exp_2, "gfx/freight/waki_1.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_wamufu_1_exp, "gfx/freight/waki_1.png") {
	template_2cc_std(1, 160)
}


spriteset(spriteset_waki_1_purchase, "gfx/freight/waki_1.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_wamufu_1_purchase, "gfx/freight/waki_1.png") {
	template_purchase(1, 224)
}

spriteset(spriteset_waki_1_exp_purchase, "gfx/freight/waki_1.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_wamufu_1_exp_purchase, "gfx/freight/waki_1.png") {
	template_purchase(1, 288)
}


switch(FEAT_TRAINS, SELF, switch_waki_1_yeardep_purchase, current_year) {
    1937..1942: spriteset_waki_1_exp_purchase;
    spriteset_waki_1_purchase;
    }

switch(FEAT_TRAINS, SELF, switch_wamufu_1_yeardep_purchase, current_year) {
    1937..1942: spriteset_wamufu_1_exp_purchase;
    spriteset_wamufu_1_purchase;
    }



random_switch (FEAT_TRAINS, SELF, random_waki_1) {
 3: spriteset_waki_1_1;
 1: spriteset_waki_1_2;
}


random_switch (FEAT_TRAINS, SELF, random_waki_1_exp) {
 3: spriteset_waki_1_exp_1;
 1: spriteset_waki_1_exp_2;
}


switch(FEAT_TRAINS, SELF, switch_waki_1_yeardep, build_year) {
    1937..1942: random_waki_1_exp;
    random_waki_1;
    }


switch(FEAT_TRAINS, SELF, switch_waki_1_livery, cargo_subtype) {
	0: switch_waki_1_yeardep;
	1: random_waki_1_exp;
	2: random_waki_1;
}

switch(FEAT_TRAINS, SELF, switch_waki_1_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK),
									string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_PARCELS)
                                 ); 
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	}



item (FEAT_TRAINS, waki_1, 1445) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_WAKI_1);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1930,1,1);
		speed: 74.5 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 90; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED, CC_ARMOURED); 
		cargo_disallow_refit: [PASS, COAL, LVST, WOOD, IORE, CORE, AORE, BRCK, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, RFPR, VEHI];
		weight: 20;
		cost_factor: 40;
	running_cost_factor: 5;
	running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_BOX),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR)
							)
						);
	
		speed: switch_speedboost_1;
		purchase_speed: return 75;
		default: switch_waki_1_livery;
		purchase: switch_waki_1_yeardep_purchase;
		cargo_subtype_text: switch_waki_1_subtype_text;
		
	}
}



switch(FEAT_TRAINS, SELF, switch_wamufu_1_yeardep, build_year) {
    1937..1942: spriteset_wamufu_1_exp;
    spriteset_wamufu_1;
    }


switch(FEAT_TRAINS, SELF, switch_wamufu_1_livery, cargo_subtype) {
	0: switch_wamufu_1_yeardep;
	1: spriteset_wamufu_1_exp;
	2: spriteset_wamufu_1;
}

switch(FEAT_TRAINS, SELF, switch_wamufu_1_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_wamufu_1_livery;
	1:  switch_taillights_7;
}

switch(FEAT_TRAINS, SELF, switch_wamufu_1_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JGR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK),
									string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_PARCELS)
                                 ); 
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JGR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	}

item (FEAT_TRAINS, wamufu_1, 1438) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_WAMUFU_1);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1930,1,1);
		speed: 95 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 45; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED, CC_ARMOURED); 
		cargo_disallow_refit: [PASS, COAL, LVST, WOOD, IORE, CORE, AORE, BRCK, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, RFPR, VEHI];
		weight: 20;
		cost_factor: 40;
		running_cost_factor: 12;
		running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
		variant_group: 1445;
		bitmask_vehicle_info: bitmask(3);//95 boost?
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_BRAKE),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR)
							)
						);
	
		speed: switch_speedboost_1;
		purchase_speed: return 95;
		default: switch_wamufu_1_loadstack;
		cargo_subtype_text: switch_wamufu_1_subtype_text;
		purchase: switch_wamufu_1_yeardep_purchase;
		reverse_build_probability: return 50;
	}
}
spriteset(spriteset_waki_1000_1, "gfx/freight/waki_1000.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_waki_1000_2, "gfx/freight/waki_1000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_waki_1000_3, "gfx/freight/waki_1000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_wamufu_100, "gfx/freight/waki_1000.png") {
	template_2cc_std(1, 96)
}


spriteset(spriteset_waki_1000_exp_1, "gfx/freight/waki_1000.png") {
	template_2cc_std(1, 128)
}


spriteset(spriteset_waki_1000_exp_2, "gfx/freight/waki_1000.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_waki_1000_exp_3, "gfx/freight/waki_1000.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_wamufu_100_exp, "gfx/freight/waki_1000.png") {
	template_2cc_std(1, 224)
}



spriteset(spriteset_waki_1000_purchase, "gfx/freight/waki_1000.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_waki_1000_exp_purchase, "gfx/freight/waki_1000.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_wamufu_100_purchase, "gfx/freight/waki_1000.png") {
	template_purchase(89, 256)
}

spriteset(spriteset_wamufu_100_exp_purchase, "gfx/freight/waki_1000.png") {
	template_purchase(89, 288)
}

switch(FEAT_TRAINS, SELF, switch_waki_1000_yeardep_purchase, current_year) {
    0..1965: spriteset_waki_1000_exp_purchase;
    spriteset_waki_1000_purchase;
    }

switch(FEAT_TRAINS, SELF, switch_wamufu_100_yeardep_purchase, current_year) {
    0..1965: spriteset_wamufu_100_exp_purchase;
    spriteset_wamufu_100_purchase;
    }



random_switch (FEAT_TRAINS, SELF, random_waki_1000) {
 1: spriteset_waki_1000_1;
 1: spriteset_waki_1000_2;
 2: spriteset_waki_1000_3;
}

random_switch (FEAT_TRAINS, SELF, random_waki_1000_exp) {
 1: spriteset_waki_1000_exp_1;
 1: spriteset_waki_1000_exp_2;
 2: spriteset_waki_1000_exp_3;
}


switch(FEAT_TRAINS, SELF, switch_waki_1000_yeardep, build_year) {
    0..1965: random_waki_1000_exp;
    random_waki_1000;
    }


switch(FEAT_TRAINS, SELF, switch_waki_1000_livery, cargo_subtype) {
	0: switch_waki_1000_yeardep;
	1: random_waki_1000_exp;
	2: random_waki_1000;
}

switch(FEAT_TRAINS, SELF, switch_waki_1000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK),
									string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_PARCELS)
                                 ); 
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	}



item (FEAT_TRAINS, waki_1000, 1450) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_WAKI_1000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1949,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 90; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_EXPRESS, CC_ARMOURED); 
		non_refittable_cargo_classes: 0; 
		weight: 18;
		cost_factor: 40;
		running_cost_factor: 5;
		running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_EXP),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JNR)
							)
						);

		speed: switch_speedboost_1;
		purchase_speed: return 75;
		default: switch_waki_1000_livery;
		purchase: switch_waki_1000_yeardep_purchase;
		cargo_subtype_text: switch_waki_1000_subtype_text;
		
	}
}


switch(FEAT_TRAINS, SELF, switch_wamufu_100_yeardep, build_year) {
    0..1965: spriteset_wamufu_100_exp;
    spriteset_wamufu_100;
    }


switch(FEAT_TRAINS, SELF, switch_wamufu_100_livery, cargo_subtype) {
	0: switch_wamufu_100_yeardep;
	1: spriteset_wamufu_100_exp;
	2: spriteset_wamufu_100;
}

switch(FEAT_TRAINS, SELF, switch_wamufu_100_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_wamufu_100_livery;
	1:  switch_taillights_7;
}

switch(FEAT_TRAINS, SELF, switch_wamufu_100_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_3, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLACK),
									string(STR_COLOUR_ORANGE)
                                    ), string(STR_SUFFIX_PARCELS)
                                 ); 
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLACK)
                                    )
                                 );
	}

item (FEAT_TRAINS, wamufu_100, 1451) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_WAMUFU_100);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1949,1,1);
		speed: 85 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 45; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_EXPRESS, CC_ARMOURED); 
		non_refittable_cargo_classes: 0; 
		weight: 20;
		cost_factor: 40;
		running_cost_factor: 10;
		running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
		variant_group: 1450;
		bitmask_vehicle_info: bitmask(4);//85 boost
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_BRAKE),
							string(STR_CONCAT_1C, 	
								string(STR_SUFFIX_JNR)
							)
						);
	
		speed: switch_speedboost_1;
		purchase_speed: return 85;
		default: switch_wamufu_100_loadstack;
		cargo_subtype_text: switch_wamufu_100_subtype_text;
		purchase: switch_wamufu_100_yeardep_purchase;
		reverse_build_probability: return 50;
	}
}

spriteset(spriteset_waki_5000_greenstripe, "gfx/freight/waki_5000.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_waki_5000_brown1, "gfx/freight/waki_5000.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_waki_5000_bluestripe, "gfx/freight/waki_5000.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_waki_5000_brown2, "gfx/freight/waki_5000.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_waki_5000_black, "gfx/freight/waki_5000.png") {
	template_2cc_std(1, 224)
}


//purchase
spriteset(spriteset_waki_5000_jnr_purchase, "gfx/freight/waki_5000.png") {
	template_purchase(1, 384)
}

spriteset(spriteset_waki_5000_jrf_purchase, "gfx/freight/waki_5000.png") {
	template_purchase(89, 384)
}

switch(FEAT_TRAINS, SELF, switch_waki_5000_yeardep_purchase, current_year) {
	0..1987: spriteset_waki_5000_jnr_purchase;
	spriteset_waki_5000_jrf_purchase;
}


random_switch (FEAT_TRAINS, SELF, random_waki_5000) {
	1: spriteset_waki_10000_brown;
	1: spriteset_waki_5000_greenstripe;
	4: spriteset_waki_5000_brown1;
	5: spriteset_waki_5000_brown2;
	2: spriteset_waki_5000_black;
}

random_switch (FEAT_TRAINS, SELF, random_waki_5000_brown) {
	1: spriteset_waki_5000_brown1;
	2: spriteset_waki_5000_brown2;
}



switch(FEAT_TRAINS, SELF, switch_waki_5000_livery, cargo_subtype) {
	1: random_waki_5000_brown;
	2: spriteset_waki_5000_greenstripe;
	3: spriteset_waki_5000_black;
	4: spriteset_waki_5000_bluestripe;
	random_waki_5000;
}

switch(FEAT_TRAINS, SELF, switch_waki_5000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_BROWN));
	2: return string(STR_CONCAT_2F, string(STR_COLOUR_BROWN), string(STR_COLOUR_GREEN));
	3: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	4: return string(STR_CONCAT_2F, string(STR_COLOUR_LTBLUE), string(STR_COLOUR_BLUE));
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_waki_5000_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_waki_5000_livery;
    1:  spritegroup_boxvan8_doors_load;
}

item (FEAT_TRAINS, waki_5000, 1953) {
property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1964,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_WAKI_5000);
	speed: 85 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 50; 
	refit_cost: 0;
	default_cargo_type: GOOD;
	refittable_cargo_classes: bitmask(CC_COVERED, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED); 
	loading_speed: 20;
	cargo_allow_refit: [GRAI, FICR, WOOD, WOOL, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, FRUT, FRVG, TATO, WDCH, TBCO];
	cargo_disallow_refit: [PASS, COAL, WOOD, IORE, CORE, AORE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SGBT, SGCN, TOUR, KAOL];
	non_refittable_cargo_classes: 0;
	weight: 15;
	cost_factor: 40;
	running_cost_factor: 6;
	running_cost_base: RUNNING_COST_STEAM;
	length: 8;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_BOX),
							string(STR_CONCAT_3C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 85;
	cargo_capacity: return 80;
	default: switch_waki_5000_loadstack;
	purchase: switch_waki_5000_yeardep_purchase;
	cargo_subtype_text: switch_waki_5000_subtype_text;
	}
}
spriteset(spriteset_waki_8000, "gfx/freight/waki_8000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_wasafu_8000, "gfx/freight/waki_8000.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_wasafu_8000_blue, "gfx/freight/waki_8000.png") {
	template_2cc_flip(1, 64)
}

spriteset(spriteset_waki_8000_cc, "gfx/freight/waki_8000.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_wasafu_8000_cc, "gfx/freight/waki_8000.png") {
	template_2cc_flip(1, 128)
}



spriteset(spriteset_waki_8000_jnr_purchase, "gfx/freight/waki_8000.png") {
	template_purchase(1, 160)
}

spriteset(spriteset_wasafu_8000_jnr_purchase, "gfx/freight/waki_8000.png") {
	template_purchase(1, 192)
}




switch(FEAT_TRAINS, SELF, switch_waki_8000_livery, cargo_subtype) {
	1: spriteset_waki_8000_cc;
	spriteset_waki_8000;
}


switch(FEAT_TRAINS, SELF, switch_waki_8000_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE),
									string(STR_COLOUR_SILVER)
                                    )
                                 );
	1: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_waki_8000_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_waki_8000_livery;
    1:  spritegroup_boxvan8_doors_load;
	2:  switch_taillights_8;
}



item (FEAT_TRAINS, waki_8000, 1452) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_WAKI_8000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1968,1,1);
		speed: 95 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 100; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_EXPRESS); 
		non_refittable_cargo_classes: 0; 
		weight: 21;
		cost_factor: 52;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_FRT_EXP),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JRF)
								)
							);
		speed: switch_speedboost_1;
		purchase_speed: return 95;
		default: switch_waki_8000_loadstack;
		purchase: spriteset_waki_8000_jnr_purchase;
		cargo_subtype_text: switch_waki_8000_subtype_text;
	}
}



switch(FEAT_TRAINS, SELF, switch_wasafu_8000_livery, cargo_subtype) {
	1: spriteset_wasafu_8000_blue;
	2: spriteset_wasafu_8000_cc;
	spriteset_wasafu_8000;
}


switch(FEAT_TRAINS, SELF, switch_wasafu_8000_subtype_text, cargo_subtype) {
	0: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_BLUE),
									string(STR_COLOUR_SILVER)
                                    )
                                 );
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR),
                                   string(STR_CONCAT_1F, 
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
	2: return string(STR_REFIT_CC);
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_wasafu_8000_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_wasafu_8000_livery;
    1:  spritegroup_boxvan8_doors_load;
	2:  switch_taillights_8;
}



item (FEAT_TRAINS, wasafu_8000, 1453) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_WASAFU_8000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1968,1,1);
		speed: 95 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 60; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 50;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_EXPRESS); 
		non_refittable_cargo_classes: 0; 
		weight: 21;
		cost_factor: 52;
		running_cost_factor: 12;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_FLIP, TRAIN_FLAG_SPRITE_STACK);
		bitmask_vehicle_info: bitmask(3);//95 boost
		variant_group: 1452;
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_BRAKE),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JRF)
								)
							);
		speed: switch_speedboost_1;
		purchase_speed: return 95;
		default: switch_wasafu_8000_loadstack;
		purchase: spriteset_wasafu_8000_jnr_purchase;
		cargo_subtype_text: switch_wasafu_8000_subtype_text;
		reverse_build_probability: return 50;
	}
}


spriteset(spriteset_waki_10000_blue, "gfx/freight/waki_5000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_waki_10000_green, "gfx/freight/waki_5000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_waki_10000_brown, "gfx/freight/waki_5000.png") {
	template_2cc_std(1, 64)
}

//purchase
spriteset(spriteset_waki_10000_jnr_purchase, "gfx/freight/waki_5000.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_waki_10000_jrf_purchase, "gfx/freight/waki_5000.png") {
	template_purchase(89, 352)
}

switch(FEAT_TRAINS, SELF, switch_waki_10000_yeardep_purchase, current_year) {
	0..1987: spriteset_waki_10000_jnr_purchase;
	spriteset_waki_10000_jrf_purchase;
}

random_switch (FEAT_TRAINS, SELF, random_waki_10000) {
	1: spriteset_waki_10000_brown;
	1: spriteset_waki_10000_blue;
	2: spriteset_waki_10000_green;
}

switch(FEAT_TRAINS, SELF, switch_waki_10000_livery, cargo_subtype) {
	1: spriteset_waki_10000_blue;
	2: spriteset_waki_10000_green;
	3: spriteset_waki_10000_brown;
	random_waki_10000;
}

switch(FEAT_TRAINS, SELF, switch_waki_10000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_BLUE));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_GREEN));
	3: return string(STR_CONCAT_1F, string(STR_COLOUR_BROWN));
	   return CB_RESULT_NO_TEXT;
	}

switch(FEAT_TRAINS, SELF, switch_waki_10000_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_waki_10000_livery;
    1:  spritegroup_boxvan8_doors_load;
}

item (FEAT_TRAINS, waki_10000, 1288) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1967,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_WAKI_10000);
	speed: 85 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 60; 
	refit_cost: 0;
	default_cargo_type: GOOD;
	refittable_cargo_classes: bitmask(CC_COVERED, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED); 
	loading_speed: 20;
	cargo_allow_refit: [BEER];
	cargo_disallow_refit: [PASS, COAL, LVST, WOOD, IORE, CORE, AORE, BRCK, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, RFPR];
	non_refittable_cargo_classes: 0;
	weight: 15;
	cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
	length: 8;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_EXP),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);
	speed: switch_speedboost_1;
	purchase_speed: return 100;
	cargo_capacity: return 60;
	default: switch_waki_10000_loadstack;
	purchase: switch_waki_10000_yeardep_purchase;
	cargo_subtype_text: switch_waki_10000_subtype_text;
	}
}

spriteset(spriteset_re_1_grey_closed, "gfx/freight/re_1.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_re_1_grey_empty, "gfx/freight/re_1.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_re_1_grey_full, "gfx/freight/re_1.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_re_1_blue_closed, "gfx/freight/re_1.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_re_1_blue_empty, "gfx/freight/re_1.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_re_1_blue_full, "gfx/freight/re_1.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_re_1_yellow_closed, "gfx/freight/re_1.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_re_1_yellow_empty, "gfx/freight/re_1.png") {
	template_2cc_anim(1, 224)
}

spriteset(spriteset_re_1_yellow_full, "gfx/freight/re_1.png") {
	template_2cc_anim(1, 256)
}


spriteset(spriteset_re_1_jgr_purchase, "gfx/freight/re_1.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_re_1_jnr_purchase, "gfx/freight/re_1.png") {
	template_purchase(89, 288)
}



spritegroup spritegroup_re_1_grey_load {
    loading: [spriteset_re_1_grey_empty, spriteset_re_1_grey_full, spriteset_re_1_grey_closed];
    loaded:  [spriteset_re_1_grey_closed];
}


spritegroup spritegroup_re_1_blue_load {
    loading: [spriteset_re_1_blue_empty, spriteset_re_1_blue_full, spriteset_re_1_blue_closed];
    loaded:  [spriteset_re_1_blue_closed];
}

spritegroup spritegroup_re_1_yellow_load {
    loading: [spriteset_re_1_yellow_empty, spriteset_re_1_yellow_full, spriteset_re_1_yellow_closed];
    loaded:  [spriteset_re_1_yellow_closed];
}



random_switch(FEAT_TRAINS, SELF, random_re_1_stripe) {
	1: spritegroup_re_1_blue_load;
	1: spritegroup_re_1_yellow_load;
	}
	
random_switch(FEAT_TRAINS, SELF, random_re_1_all) {
	4: spritegroup_re_1_grey_load;
	1: spritegroup_re_1_yellow_load;
	1: spritegroup_re_1_blue_load;
	}



switch(FEAT_TRAINS, SELF, switch_re_1_livery, cargo_subtype) {
	1: spritegroup_re_1_grey_load;
	2: random_re_1_stripe;
	random_re_1_all;
}

switch(FEAT_TRAINS, SELF, switch_re_1_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_WHITE));
	2: return string(STR_CONCAT_2F, string(STR_COLOUR_WHITE), string(STR_COLOUR_YELLOW));
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, re_1, 1281) {

property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_RE_1);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1870,1,1);
		speed: 65 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 30; 
		refit_cost: 0;
		default_cargo_type: FOOD;
		cargo_age_period: 720;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_REFRIGERATED); 
		weight: 8;
		cost_factor: 14;
		running_cost_factor: 2;
		running_cost_base: RUNNING_COST_STEAM;
		length: 4;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_REEF),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 65;
	cargo_capacity: return 20;
	default: switch_re_1_livery;
	cargo_subtype_text: switch_re_1_subtype_text;
	purchase: spriteset_re_1_jgr_purchase;
//	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_re_2500_1, "gfx/freight/re_2500.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_re_2500_2, "gfx/freight/re_2500.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_re_2500_3, "gfx/freight/re_2500.png") {
	template_2cc_std(1, 64)
}



spriteset(spriteset_re_2500_purchase, "gfx/freight/re_2500.png") {
	template_purchase(1, 192)
}


random_switch (FEAT_TRAINS, SELF, random_re_2500) {
 1: spriteset_re_2500_1;
 1: spriteset_re_2500_2;
 1: spriteset_re_2500_3;
}






item (FEAT_TRAINS, re_2500, 1455) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_RE_2500);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1928,1,1);
		speed: 74.5 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 30; 
		refit_cost: 0;
		default_cargo_type: FOOD;
		cargo_age_period: 840;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_REFRIGERATED); 
		weight: 10;
		cost_factor: 18;
		running_cost_factor: 3;
		running_cost_base: RUNNING_COST_STEAM;
		length: 5;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_REEF),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR)
							)
						);

		speed: switch_speedboost_1;
		purchase_speed: return 75;
		cargo_capacity: return 30;
		default: random_re_2500;
		purchase: spriteset_re_2500_purchase;
		
	}
}
spriteset(spriteset_reki_1_1, "gfx/freight/reki_1.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_reki_1_2, "gfx/freight/reki_1.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_reki_1_3, "gfx/freight/reki_1.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_reki_1_4, "gfx/freight/reki_1.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_reki_1_5, "gfx/freight/reki_1.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_reki_1_jgr_purchase, "gfx/freight/reki_1.png") {
	template_purchase(1, 160)
}

spriteset(spriteset_reki_1_jnr_purchase, "gfx/freight/reki_1.png") {
	template_purchase(1, 192)
}

switch(FEAT_TRAINS, SELF, switch_reki_1_yeardep_purchase, current_year) {
	0..1949: spriteset_reki_1_jgr_purchase;
	spriteset_reki_1_jnr_purchase;
}

random_switch (FEAT_TRAINS, SELF, random_reki_1) {
    5: spriteset_reki_1_1;
    1: spriteset_reki_1_2;
    3: spriteset_reki_1_3;
    2: spriteset_reki_1_4;
    1: spriteset_reki_1_5;
}



item (FEAT_TRAINS, reki_1, 1456) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_REKI_1);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1946,1,1);
		speed: 85 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 50; 
		refit_cost: 0;
		default_cargo_type: FOOD;
		cargo_age_period: 1000;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_REFRIGERATED); 
		weight: 20;
		cost_factor: 30;
	running_cost_factor: 5;
	running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_REEF),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR)
							)
						);

		speed: switch_speedboost_1;
		purchase_speed: return 85;
		default: random_reki_1;
		purchase: switch_reki_1_yeardep_purchase;
		reverse_build_probability: return 50;
	}
}
spriteset(spriteset_remu_5000_1, "gfx/freight/remu_5000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_remu_5000_2, "gfx/freight/remu_5000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_remu_5000_3, "gfx/freight/remu_5000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_remu_5000_purchase, "gfx/freight/remu_5000.png") {
	template_purchase(1, 96)
}


random_switch (FEAT_TRAINS, SELF, random_remu_5000) {
 2: spriteset_remu_5000_1;
 5: spriteset_remu_5000_2;
 1: spriteset_remu_5000_3;
}

item (FEAT_TRAINS, remu_5000, 1286) {

property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_REMU_5000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1960,1,1);
		speed: 74.5 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 40; 
		refit_cost: 0;
		default_cargo_type: FOOD;
		cargo_age_period: 1200;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_REFRIGERATED); 
		weight: 10;
		cost_factor: 22;
		running_cost_factor: 4;
		running_cost_base: RUNNING_COST_STEAM;
		length: 6;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_REEF),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JNR)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 75;
	default: random_remu_5000;
	purchase: spriteset_remu_5000_purchase;
	}
}
spriteset(spriteset_resa_10000, "gfx/freight/resa_10000.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_remufu_10000, "gfx/freight/resa_10000.png") {
	template_2cc_std(1, 32)
}


spriteset(spriteset_resa_10000_purchase, "gfx/freight/resa_10000.png") {
	template_purchase(1, 64)
}

spriteset(spriteset_remufu_10000_purchase, "gfx/freight/resa_10000.png") {
	template_purchase(89, 64)
}



item (FEAT_TRAINS, resa_10000, 1460) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_RESA_10000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1966,1,1);
		speed: 85		km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 60; 
		refit_cost: 0;
		default_cargo_type: FOOD;
		cargo_age_period: 1200;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_REFRIGERATED); 
		non_refittable_cargo_classes: 0; 
		weight: 25;
		cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_REEF),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JNR)
							)
						);

		cargo_capacity: return 60;
		speed: switch_speedboost_1;
		purchase_speed: return 85;
		default: spriteset_resa_10000;
		purchase: spriteset_resa_10000_purchase;
		
	}
}


switch(FEAT_TRAINS, SELF, switch_remufu_10000_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  spriteset_remufu_10000;
 //   1:  spritegroup_boxvan8_doors_load;  //todo loading stages
	1:  switch_taillights_7;
}

item (FEAT_TRAINS, remufu_10000, 1461) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_REMUFU_10000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1966,1,1);
		speed: 100		km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 45; 
		refit_cost: 0;
		default_cargo_type: FOOD;
		cargo_age_period: 1200;
		loading_speed: 20;
		refittable_cargo_classes: bitmask(CC_REFRIGERATED); 
		non_refittable_cargo_classes: 0; 
		weight: 25;
		cost_factor: 50;
		running_cost_factor: 12;
		running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
		variant_group: 1460;
		bitmask_vehicle_info: bitmask(2);//speed boost 100
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_BRAKE),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JNR)
							)
						);

		cargo_capacity: return 45;
		speed: switch_speedboost_1;
		purchase_speed: return 100;
		default: switch_remufu_10000_loadstack;
		purchase: spriteset_remufu_10000_purchase;
		reverse_build_probability: return 50;
	}
}

spriteset(spriteset_hoki_650_stripe, "gfx/freight/hoki_650.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_hoki_650_black, "gfx/freight/hoki_650.png") {
	template_2cc_std(1, 128)
}


spriteset(spriteset_hoki_650_purchase, "gfx/freight/hoki_650.png") {
	template_purchase(1, 256)
}


random_switch(FEAT_TRAINS, SELF, random_hoki_650_stripe) {
	1: spriteset_hoki_650_stripe;
	1: spriteset_hoki_650_black;
	}


switch(FEAT_TRAINS, SELF, switch_hoki_650_livery, cargo_subtype) {
	1: spriteset_hoki_650_stripe;
	2: spriteset_hoki_650_black;
	random_hoki_650_stripe;
}

switch(FEAT_TRAINS, SELF, switch_hoki_650_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2F, string(STR_COLOUR_BLACK), string(STR_COLOUR_YELLOW));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	   return CB_RESULT_NO_TEXT;
	}




item (FEAT_TRAINS, hoki_650, 1444) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1961,1,1); //1971
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_HOKI_650);
	speed: 75 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 45; 
	refit_cost: 0;
//	default_cargo_type: COAL;
	loading_speed: 40;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED); 
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [SGBT, WDPR, FICR, WOOL, POWR, FURN, GLAS, MPTS, PAPR, TEXT, COAL, IORE, CORE, GRVL, LIME, RCYC, SCMT, SLAG, SULP, SGCN, TBCO];
	cargo_allow_refit: [GRAI, WHEA, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, BAKE, POTA, LYE_];
	weight: 15;
	cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
	length: 5;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_QLME),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 75;
	cargo_capacity: return 45;
	default: switch_hoki_650_livery;
	cargo_subtype_text: switch_hoki_650_subtype_text;
	purchase: spriteset_hoki_650_purchase;
	}
}
spriteset(spriteset_hoki_1000_a, "gfx/freight/hoki_1000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_hoki_1000_b, "gfx/freight/hoki_1000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_hoki_1000_c, "gfx/freight/hoki_1000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_hoki_1000_d, "gfx/freight/hoki_1000.png") {
	template_2cc_std(1, 96)
}


spriteset(spriteset_hoki_1000_purchase, "gfx/freight/hoki_1000.png") {
	template_purchase(1, 128)
}


random_switch(FEAT_TRAINS, SELF, switch_hoki_1000_livery) {
	3: spriteset_hoki_1000_a;
    1: spriteset_hoki_1000_b;
	1: spriteset_hoki_1000_c;
    1: spriteset_hoki_1000_d;
}



item (FEAT_TRAINS, hoki_1000, 1410) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_HOKI_1000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1990,1,1);
		speed: 100 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 72; 
		refit_cost: 0;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED); 
		non_refittable_cargo_classes: 0;
		cargo_disallow_refit: [SGBT, WDPR, FICR, WOOL, POWR, FURN, GLAS, MPTS, PAPR, TEXT, COAL, IORE, CORE, GRVL, LIME, RCYC, SCMT, SLAG, SULP, SGCN, TBCO];
		cargo_allow_refit: [GRAI, WHEA, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, BAKE, POTA, LYE_];
		weight: 15;
		cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_COV),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JRF)
							)
						);
		speed: switch_speedboost_1;
		purchase_speed: return 100;
		cargo_capacity: return 72;
		default: switch_hoki_1000_livery;
		purchase: spriteset_hoki_1000_purchase;
		refit_cost: CB_RESULT_AUTOREFIT;
	}
}
spriteset(spriteset_hoki_800_cc_empty, "gfx/freight/hoki_800.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_hoki_800_cc_quarter, "gfx/freight/hoki_800.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_hoki_800_cc_half, "gfx/freight/hoki_800.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_hoki_800_cc_full, "gfx/freight/hoki_800.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_hoki_800_black_empty, "gfx/freight/hoki_800.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_hoki_800_black_quarter, "gfx/freight/hoki_800.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_hoki_800_black_half, "gfx/freight/hoki_800.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_hoki_800_black_full, "gfx/freight/hoki_800.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_hoki_800_jnr_purchase, "gfx/freight/hoki_800.png") {
	template_purchase(1, 128)
}

spriteset(spriteset_hoki_800_jrf_purchase, "gfx/freight/hoki_800.png") {
	template_purchase(1, 128)
}


spritegroup spritegroup_hoki_800_cc_bulk {
    loading: [spriteset_hoki_800_cc_empty, spriteset_hoki_800_cc_quarter, spriteset_hoki_800_cc_half, spriteset_hoki_800_cc_full];
    loaded:  [spriteset_hoki_800_cc_empty, spriteset_hoki_800_cc_quarter, spriteset_hoki_800_cc_half, spriteset_hoki_800_cc_full];
}

spritegroup spritegroup_hoki_800_black_bulk {
    loading: [spriteset_hoki_800_black_empty, spriteset_hoki_800_black_quarter, spriteset_hoki_800_black_half, spriteset_hoki_800_black_full];
    loaded:  [spriteset_hoki_800_black_empty, spriteset_hoki_800_black_quarter, spriteset_hoki_800_black_half, spriteset_hoki_800_black_full];
}

random_switch(FEAT_TRAINS, SELF, random_hoki_800_livery) {
	1: spritegroup_hoki_800_cc_bulk;
	1: spritegroup_hoki_800_black_bulk;
}	





switch(FEAT_TRAINS, SELF, switch_hoki_800_purchase, current_year) {
	0..1987: spriteset_hoki_800_jnr_purchase;
	spriteset_hoki_800_jrf_purchase;
	}


item (FEAT_TRAINS, hoki_800, 1446) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_HOKI_800);
	climates_available: ALL_CLIMATES;
	introduction_date: date(1958,1,1);
	speed: 75 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 60; 
	refit_cost: 0;
	default_cargo_type: COAL;
	loading_speed: 35;
	refittable_cargo_classes: bitmask(CC_BULK); 
	non_refittable_cargo_classes: bitmask(CC_COVERED); 
//	cargo_allow_refit: [COAL, IORE, CORE, AORE, BRCK, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, SULP, FRUT]; 
	cargo_disallow_refit: [GRAI, WHEA, BEAN, MAIZ, SEED, WDPR, WOOL, FICR, BAKE, GLAS, WDPR, SGCN, TBCO];
	weight: 18;
	cost_factor: 30;
	running_cost_factor: 5;
	running_cost_base: RUNNING_COST_STEAM;
	length: 7;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_STON),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	cargo_capacity: return 60;
	speed: switch_speedboost_1;
	purchase_speed: return 75;
	default: random_hoki_800_livery;
	purchase: switch_hoki_800_purchase;
//	cargo_subtype_text: switch_hoki_800_subtype_text;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_hoki_2200_cream, "gfx/freight/hoki_covered.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_hoki_2200_white, "gfx/freight/hoki_covered.png") {
	template_2cc_std(1, 32)
}


spriteset(spriteset_hoki_2200_purchase, "gfx/freight/hoki_covered.png") {
	template_purchase(1, 96)
}


random_switch(FEAT_TRAINS, SELF, random_hoki_2200_cream) {
	1: spriteset_hoki_2200_cream;
	1: spriteset_hoki_2200_white;
	}


switch(FEAT_TRAINS, SELF, switch_hoki_2200_livery, cargo_subtype) {
	1: spriteset_hoki_2200_cream;
	2: spriteset_hoki_2200_white;
	random_hoki_2200_cream;
}

switch(FEAT_TRAINS, SELF, switch_hoki_2200_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_CREAM));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_WHITE));
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, hoki_2200, 1291) {

property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_HOKI_2200);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1966,1,1);
		speed: 85 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 50; 
		refit_cost: 0;
		loading_speed: 40;
//	refittable_cargo_classes: bitmask(CC_COVERED); 
	default_cargo_type: FOOD;
	non_refittable_cargo_classes: 0;
	cargo_allow_refit: [FOOD, GRAI, WHEA, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, BAKE, SUGR, SALT, SASH, POTA];
	cargo_disallow_refit: [WOOL, WOOD, SGCN, TBCO];
	weight: 17;
	cost_factor: 40;
	running_cost_factor: 6;
	running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_GRAI),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JNR)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 85;
	cargo_capacity: return 58;
	default: switch_hoki_2200_livery;
	cargo_subtype_text: switch_hoki_2200_subtype_text;
	purchase: spriteset_hoki_2200_purchase;
	}
}
spriteset(spriteset_hoki_2500_red_empty, "gfx/freight/hoki_2500.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_hoki_2500_red_quarter, "gfx/freight/hoki_2500.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_hoki_2500_red_half, "gfx/freight/hoki_2500.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_hoki_2500_red_full, "gfx/freight/hoki_2500.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_hoki_2500_red_cover, "gfx/freight/hoki_2500.png") {
	template_2cc_std(1, 128)
}


spriteset(spriteset_hoki_2500_jnr_purchase, "gfx/freight/hoki_2500.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_hoki_2500_jrf_purchase, "gfx/freight/hoki_2500.png") {
	template_purchase(89, 256)
}




spritegroup spritegroup_hoki_2500_red_bulk {
    loading: [spriteset_hoki_2500_red_empty, spriteset_hoki_2500_red_quarter, spriteset_hoki_2500_red_half, spriteset_hoki_2500_red_full];
    loaded:  [spriteset_hoki_2500_red_empty, spriteset_hoki_2500_red_quarter, spriteset_hoki_2500_red_half, spriteset_hoki_2500_red_full];
}

spritegroup spritegroup_hoki_2500_red_cover {
    loading: [spriteset_hoki_2500_red_empty, spriteset_hoki_2500_red_quarter, spriteset_hoki_2500_red_half, spriteset_hoki_2500_red_full];
    loaded:  [spriteset_hoki_2500_red_empty, spriteset_hoki_2500_red_cover];
}

random_switch(FEAT_TRAINS, SELF, random_hoki_2500_cover) {
	2: spritegroup_hoki_2500_red_cover;
	1: spritegroup_hoki_2500_red_bulk;
	}


switch(FEAT_TRAINS, SELF, switch_hoki_2500_lid_cargoclass, cargo_classes) {
	bitmask(CC_BULK): spritegroup_hoki_2500_red_bulk;
	spritegroup_hoki_2500_red_cover;
}

switch(FEAT_TRAINS, SELF, switch_hoki_2500_lid_cargotype, cargo_type_in_veh) {
	AORE: return random_hoki_2500_cover;
	CORE: return random_hoki_2500_cover;
	PORE: return random_hoki_2500_cover;
	SAND: return random_hoki_2500_cover;
	GRVL: return random_hoki_2500_cover;
	LIME: return random_hoki_2500_cover;
	CLAY: return random_hoki_2500_cover;
	SLAG: return random_hoki_2500_cover;
	switch_hoki_2500_lid_cargoclass;
}




switch(FEAT_TRAINS, SELF, switch_hoki_2500_livery, cargo_subtype) {
	1: spritegroup_hoki_2500_red_bulk;
	2: spritegroup_hoki_2500_red_cover;
	switch_hoki_2500_lid_cargoclass;
}

switch(FEAT_TRAINS, SELF, switch_hoki_2500_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_1F, string(STR_SUFFIX_FOPEN));
	2: return string(STR_CONCAT_1F, string(STR_SUFFIX_FCOVER));
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_hoki_2500_purchase, current_year) {
	0..1987: spriteset_hoki_2500_jnr_purchase;
	spriteset_hoki_2500_jrf_purchase;
	}


item (FEAT_TRAINS, hoki_2500, 1242) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	introduction_date: date(1970,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_HOKI_2500);
	track_type: TR_1067_NE;
	speed: 85 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	speed: 100 km/h;
	loading_speed: 40;
	cargo_capacity: 65;
	weight: 15;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED); 
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [GRAI, WHEA, BEAN, SGBT, WDPR, FICR, WOOL, POWR, BAKE, FURN, GLAS, MPTS, PAPR, TEXT, SGCN, TBCO, SUGR];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	cost_factor: 40;
	running_cost_factor: 6;
	running_cost_base: RUNNING_COST_STEAM;
	loading_speed: 40;
	length: 6;
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_LMST),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 85;
	cargo_capacity: return 55;
	default: switch_hoki_2500_livery;
	purchase: switch_hoki_2500_purchase;
	cargo_subtype_text: switch_hoki_2500_subtype_text;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_hoki_5700_a, "gfx/freight/hoki_5700.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_hoki_5700_b, "gfx/freight/hoki_5700.png") {
	template_2cc_std(1, 32)
}



spriteset(spriteset_hoki_5700_purchase, "gfx/freight/hoki_5700.png") {
	template_purchase(89, 64)
}


random_switch(FEAT_TRAINS, SELF, switch_hoki_5700_livery) {
	3: spriteset_hoki_5700_a;
    1: spriteset_hoki_5700_b;
}



item (FEAT_TRAINS, hoki_5700, 1448) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_HOKI_5700);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1965,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 50; 
		refit_cost: 0;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED); 
		non_refittable_cargo_classes: 0;
		cargo_disallow_refit: [SGBT, WDPR, FICR, WOOL, POWR, FURN, GLAS, MPTS, PAPR, TEXT, COAL, IORE, CORE, GRVL, LIME, RCYC, SCMT, SLAG, SULP, SGCN, TBCO];
		cargo_allow_refit: [GRAI, WHEA, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, BAKE, POTA, LYE_];
		weight: 13;
		cost_factor: 30;
	running_cost_factor: 5;
	running_cost_base: RUNNING_COST_STEAM;
		length: 6;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CMNT),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

		cargo_capacity: return 50;
		default: switch_hoki_5700_livery;
		purchase: spriteset_hoki_5700_purchase;
		refit_cost: CB_RESULT_AUTOREFIT;
		speed: switch_speedboost_1;
		purchase_speed: return 75;
	}
}


spriteset(spriteset_hoki_8300_cream, "gfx/freight/hoki_covered.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_hoki_8300_purchase, "gfx/freight/hoki_covered.png") {
	template_purchase(1, 224)
}


spriteset(spriteset_hoki_9300_black, "gfx/freight/hoki_covered.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_hoki_9300_logo, "gfx/freight/hoki_covered.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_hoki_9300_purchase, "gfx/freight/hoki_covered.png") {
	template_purchase(1, 256)
}






item (FEAT_TRAINS, hoki_8300, 1464) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	introduction_date: date(1974,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_HOKI_8300);
	track_type: TR_1067_NE;
	speed: 100 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	speed: 100 km/h;
	loading_speed: 40;
	cargo_capacity: 65;
	weight: 17;
	length: 7;
//	refittable_cargo_classes: bitmask(CC_COVERED); 
	default_cargo_type: FOOD;
	non_refittable_cargo_classes: 0;
	cargo_allow_refit: [FOOD, GRAI, WHEA, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, BAKE, SUGR, SALT, SASH, POTA];
	cargo_disallow_refit: [WOOL, WOOD, SGCN, TBCO];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_GRAI),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);
	speed: switch_speedboost_1;
	purchase_speed: return 100;
	cargo_capacity: return 65;
	default: spriteset_hoki_8300_cream;
	purchase: spriteset_hoki_8300_purchase;
	}
}


random_switch(FEAT_TRAINS, SELF, random_hoki_9300_black) {
	1: spriteset_hoki_9300_black;
	1: spriteset_hoki_9300_logo;
	}


switch(FEAT_TRAINS, SELF, switch_hoki_9300_livery, cargo_subtype) {
	1: spriteset_hoki_9300_black;
	2: spriteset_hoki_9300_logo;
	random_hoki_9300_black;
}

switch(FEAT_TRAINS, SELF, switch_hoki_9300_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	2: return string(STR_CONCAT_2F, string(STR_COLOUR_BLACK), string(STR_SUFFIX_REDLOGO));
	   return CB_RESULT_NO_TEXT;
	}


item (FEAT_TRAINS, hoki_9300, 1290) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	introduction_date: date(1974,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_HOKI_9300);
	track_type: TR_1067_NE;
	speed: 100 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	speed: 100 km/h;
	loading_speed: 40;
	cargo_capacity: 65;
	weight: 17;
	length: 7;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED); 
	default_cargo_type: FOOD;
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [SGBT, WDPR, FICR, WOOL, POWR, FURN, GLAS, MPTS, PAPR, TEXT, COAL, IORE, CORE, GRVL, LIME, RCYC, SCMT, SLAG, SULP, SGCN, TBCO];
	cargo_allow_refit: [GRAI, WHEA, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, BAKE, POTA, LYE_];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
	variant_group: 1464;
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_COKE),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);
	speed: switch_speedboost_1;
	purchase_speed: return 100;
	cargo_capacity: return 65;
	default: switch_hoki_9300_livery;
	cargo_subtype_text: switch_hoki_9300_subtype_text;
	purchase: spriteset_hoki_9300_purchase;
	}
}
spriteset(spriteset_hoki_8500_red_empty, "gfx/freight/hoki_8500.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_hoki_8500_red_quarter, "gfx/freight/hoki_8500.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_hoki_8500_red_half, "gfx/freight/hoki_8500.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_hoki_8500_red_full, "gfx/freight/hoki_8500.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_hoki_8500_black_empty, "gfx/freight/hoki_8500.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_hoki_8500_black_quarter, "gfx/freight/hoki_8500.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_hoki_8500_black_half, "gfx/freight/hoki_8500.png") {
	template_2cc_anim(1, 192)
}

spriteset(spriteset_hoki_8500_black_full, "gfx/freight/hoki_8500.png") {
	template_2cc_anim(1, 224)
}

spriteset(spriteset_hoki_8500_jnr_purchase, "gfx/freight/hoki_8500.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_hoki_8500_jrf_purchase, "gfx/freight/hoki_8500.png") {
	template_purchase(89, 256)
}


spritegroup spritegroup_hoki_8500_red_bulk {
    loading: [spriteset_hoki_8500_red_empty, spriteset_hoki_8500_red_quarter, spriteset_hoki_8500_red_half, spriteset_hoki_8500_red_full];
    loaded:  [spriteset_hoki_8500_red_empty, spriteset_hoki_8500_red_quarter, spriteset_hoki_8500_red_half, spriteset_hoki_8500_red_full];
}

spritegroup spritegroup_hoki_8500_black_bulk {
    loading: [spriteset_hoki_8500_black_empty, spriteset_hoki_8500_black_quarter, spriteset_hoki_8500_black_half, spriteset_hoki_8500_black_full];
    loaded:  [spriteset_hoki_8500_black_empty, spriteset_hoki_8500_black_quarter, spriteset_hoki_8500_black_half, spriteset_hoki_8500_black_full];
}

random_switch(FEAT_TRAINS, SELF, random_hoki_8500_livery) {
	1: spritegroup_hoki_8500_red_bulk;
	1: spritegroup_hoki_8500_black_bulk;
}	





switch(FEAT_TRAINS, SELF, switch_hoki_8500_purchase, current_year) {
	0..1987: spriteset_hoki_8500_jnr_purchase;
	spriteset_hoki_8500_jrf_purchase;
	}


item (FEAT_TRAINS, hoki_8500, 1285) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	introduction_date: date(1967,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_HOKI_8500);
	track_type: TR_1067_NE;
	speed: 85 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	speed: 100 km/h;
	loading_speed: 40;
	cargo_capacity: 65;
	weight: 15;
	refittable_cargo_classes: bitmask(CC_BULK); 
	non_refittable_cargo_classes: bitmask(CC_COVERED); 
	cargo_disallow_refit: [GRAI, WHEA, BEAN, MAIZ, SEED, WDPR, WOOL, FICR, BAKE, GLAS, WDPR, SGCN, TBCO];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	cost_factor: 40;
	running_cost_factor: 6;
	running_cost_base: RUNNING_COST_STEAM;
	loading_speed: 40;
	length: 6;
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_LMST),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 85;
	cargo_capacity: return 60;
	default: random_hoki_8500_livery;
	purchase: switch_hoki_8500_purchase;
//	cargo_subtype_text: switch_hoki_8500_subtype_text;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_hoki_10000_cc_empty, "gfx/freight/hoki_10000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_hoki_10000_cc_quarter, "gfx/freight/hoki_10000.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_hoki_10000_cc_half, "gfx/freight/hoki_10000.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_hoki_10000_cc_full, "gfx/freight/hoki_10000.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_hoki_10000_black_empty, "gfx/freight/hoki_10000.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_hoki_10000_black_quarter, "gfx/freight/hoki_10000.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_hoki_10000_black_half, "gfx/freight/hoki_10000.png") {
	template_2cc_anim(1, 192)
}

spriteset(spriteset_hoki_10000_black_full, "gfx/freight/hoki_10000.png") {
	template_2cc_anim(1, 224)
}

spriteset(spriteset_hoki_10000_jnr_purchase, "gfx/freight/hoki_10000.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_hoki_10000_jrf_purchase, "gfx/freight/hoki_10000.png") {
	template_purchase(89, 256)
}


spritegroup spritegroup_hoki_10000_cc_bulk {
    loading: [spriteset_hoki_10000_cc_empty, spriteset_hoki_10000_cc_quarter, spriteset_hoki_10000_cc_half, spriteset_hoki_10000_cc_full];
    loaded:  [spriteset_hoki_10000_cc_empty, spriteset_hoki_10000_cc_quarter, spriteset_hoki_10000_cc_half, spriteset_hoki_10000_cc_full];
}

spritegroup spritegroup_hoki_10000_black_bulk {
    loading: [spriteset_hoki_10000_black_empty, spriteset_hoki_10000_black_quarter, spriteset_hoki_10000_black_half, spriteset_hoki_10000_black_full];
    loaded:  [spriteset_hoki_10000_black_empty, spriteset_hoki_10000_black_quarter, spriteset_hoki_10000_black_half, spriteset_hoki_10000_black_full];
}

random_switch(FEAT_TRAINS, SELF, random_hoki_10000_livery) {
	1: spritegroup_hoki_10000_cc_bulk;
	1: spritegroup_hoki_10000_black_bulk;
}	





switch(FEAT_TRAINS, SELF, switch_hoki_10000_purchase, current_year) {
	0..1987: spriteset_hoki_10000_jnr_purchase;
	spriteset_hoki_10000_jrf_purchase;
	}


item (FEAT_TRAINS, hoki_10000, 1952) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	introduction_date: date(1974,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_HOKI_8300);
	track_type: TR_1067_NE;
	speed: 100 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	speed: 100 km/h;
	loading_speed: 40;
	cargo_capacity: 65;
	weight: 17;
	length: 7;
	refittable_cargo_classes: bitmask(CC_BULK); 
	non_refittable_cargo_classes: bitmask(CC_COVERED); 
	cargo_disallow_refit: [GRAI, WHEA, BEAN, MAIZ, SEED, WDPR, WOOL, FICR, BAKE, GLAS, WDPR, SGCN, TBCO];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
	loading_speed: 40;

	introduction_date: date(1980,1,1);
	name: string(STR_NAME_HOKI_10000);
	speed: 100 km/h;
	refittable_cargo_classes: bitmask(CC_BULK); 
	non_refittable_cargo_classes: bitmask(CC_COVERED); 
	cargo_disallow_refit: [GRAI, WHEA, BEAN, MAIZ, SEED, WDPR, WOOL, FICR, BAKE, GLAS, WDPR, SGCN, TBCO];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
	loading_speed: 40;
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_COAL),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);
	speed: switch_speedboost_1;
	purchase_speed: return 100;
	cargo_capacity: return 70;
	default: random_hoki_10000_livery;
	purchase: switch_hoki_10000_purchase;
//	cargo_subtype_text: switch_hoki_10000_subtype_text;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_se_1_stripe_empty, "gfx/freight/se_1.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_se_1_stripe_half, "gfx/freight/se_1.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_se_1_stripe_full, "gfx/freight/se_1.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_se_1_logo_empty, "gfx/freight/se_1.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_se_1_logo_half, "gfx/freight/se_1.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_se_1_logo_full, "gfx/freight/se_1.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_se_1_black_empty, "gfx/freight/se_1.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_se_1_black_half, "gfx/freight/se_1.png") {
	template_2cc_anim(1, 224)
}

spriteset(spriteset_se_1_black_full, "gfx/freight/se_1.png") {
	template_2cc_anim(1, 256)
}


spriteset(spriteset_se_1_jgr_purchase, "gfx/freight/se_1.png") {
	template_purchase(1, 288)
}

spriteset(spriteset_se_1_jnr_purchase, "gfx/freight/se_1.png") {
	template_purchase(89, 288)
}



spritegroup spritegroup_se_1_stripe_bulk {
    loading: [spriteset_se_1_stripe_empty, spriteset_se_1_stripe_half, spriteset_se_1_stripe_full];
    loaded:  [spriteset_se_1_stripe_empty, spriteset_se_1_stripe_half, spriteset_se_1_stripe_full];
}

spritegroup spritegroup_se_1_logo_bulk {
    loading: [spriteset_se_1_logo_empty, spriteset_se_1_logo_half, spriteset_se_1_logo_full];
    loaded:  [spriteset_se_1_logo_empty, spriteset_se_1_logo_half, spriteset_se_1_logo_full];
}

spritegroup spritegroup_se_1_black_bulk {
    loading: [spriteset_se_1_black_empty, spriteset_se_1_black_half, spriteset_se_1_black_full];
    loaded:  [spriteset_se_1_black_empty, spriteset_se_1_black_half, spriteset_se_1_black_full];
}


random_switch(FEAT_TRAINS, SELF, random_se_1_black) {
	1: spritegroup_se_1_logo_bulk;
	1: spritegroup_se_1_black_bulk;
	}
	
random_switch(FEAT_TRAINS, SELF, random_se_1_all) {
	1: spritegroup_se_1_logo_bulk;
	1: spritegroup_se_1_black_bulk;
	1: spritegroup_se_1_stripe_bulk;
	}



switch(FEAT_TRAINS, SELF, switch_se_1_livery, cargo_subtype) {
	1: spritegroup_se_1_stripe_bulk;
	2: random_se_1_black;
	random_se_1_all;
}

switch(FEAT_TRAINS, SELF, switch_se_1_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2F, string(STR_COLOUR_BLACK), string(STR_COLOUR_YELLOW));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, se_1, 1439) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1870,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_SE_1);
	speed: 60 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 20; 
	refit_cost: 0;
//	default_cargo_type: COAL;
	loading_speed: 40;
	refittable_cargo_classes: bitmask(CC_BULK); 
	non_refittable_cargo_classes: bitmask(CC_COVERED); 
//	cargo_allow_refit: [COAL, IORE, CORE, AORE, BRCK, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, SULP, FRUT]; 
	cargo_disallow_refit: [GRAI, WHEA, BEAN, MAIZ, SEED, WDPR, WOOL, FICR, BAKE, GLAS, WDPR, SGCN, TBCO];
	weight: 9;
	cost_factor: 14;
	running_cost_factor: 2;
	running_cost_base: RUNNING_COST_STEAM;
	length: 4;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_BULK),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 60;
	cargo_capacity: return 20;
	default: switch_se_1_livery;
	cargo_subtype_text: switch_se_1_subtype_text;
	purchase: spriteset_se_1_jgr_purchase;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_seki_1_stripe_empty, "gfx/freight/seki_1.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_seki_1_stripe_quarter, "gfx/freight/seki_1.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_seki_1_stripe_half, "gfx/freight/seki_1.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_seki_1_stripe_full, "gfx/freight/seki_1.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_seki_1_black_empty, "gfx/freight/seki_1.png") {
	template_2cc_std(1, 128)
}


spriteset(spriteset_seki_1_black_quarter, "gfx/freight/seki_1.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_seki_1_black_half, "gfx/freight/seki_1.png") {
	template_2cc_anim(1, 192)
}

spriteset(spriteset_seki_1_black_full, "gfx/freight/seki_1.png") {
	template_2cc_anim(1, 224)
}


spriteset(spriteset_seki_1_purchase, "gfx/freight/seki_1.png") {
	template_purchase(89, 256)
}



spritegroup spritegroup_seki_1_stripe_bulk {
    loading: [spriteset_seki_1_stripe_empty, spriteset_seki_1_stripe_quarter, spriteset_seki_1_stripe_half, spriteset_seki_1_stripe_full];
    loaded:  [spriteset_seki_1_stripe_empty, spriteset_seki_1_stripe_quarter, spriteset_seki_1_stripe_half, spriteset_seki_1_stripe_full];
}


spritegroup spritegroup_seki_1_black_bulk {
    loading: [spriteset_seki_1_black_empty, spriteset_seki_1_black_quarter, spriteset_seki_1_black_half, spriteset_seki_1_black_full];
    loaded:  [spriteset_seki_1_black_empty, spriteset_seki_1_black_quarter, spriteset_seki_1_black_half, spriteset_seki_1_black_full];
}


random_switch(FEAT_TRAINS, SELF, random_seki_1_stripe) {
	1: spritegroup_seki_1_stripe_bulk;
	1: spritegroup_seki_1_black_bulk;
	}


switch(FEAT_TRAINS, SELF, switch_seki_1_livery, cargo_subtype) {
	1: spritegroup_seki_1_stripe_bulk;
	2: spritegroup_seki_1_black_bulk;
	random_seki_1_stripe;
}

switch(FEAT_TRAINS, SELF, switch_seki_1_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2F, string(STR_COLOUR_BLACK), string(STR_COLOUR_YELLOW));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, seki_1, 1441) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1911,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_SEKI_1);
	speed: 65 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 35; 
	refit_cost: 0;
//	default_cargo_type: COAL;
	loading_speed: 40;
	refittable_cargo_classes: bitmask(CC_BULK); 
	non_refittable_cargo_classes: bitmask(CC_COVERED); 
//	cargo_allow_refit: [COAL, IORE, CORE, AORE, BRCK, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, SULP, FRUT]; 
	cargo_disallow_refit: [GRAI, WHEA, BEAN, MAIZ, SEED, WDPR, WOOL, FICR, BAKE, GLAS, WDPR, SGCN, TBCO];
	weight: 13;
	cost_factor: 18;
		running_cost_factor: 3;
		running_cost_base: RUNNING_COST_STEAM;
	length: 5;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_COAL),
							string(STR_CONCAT_3C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 65;
	cargo_capacity: return 35;
	default: switch_seki_1_livery;
	cargo_subtype_text: switch_seki_1_subtype_text;
	purchase: spriteset_seki_1_purchase;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_seki_1000_stripe, "gfx/freight/seki_1000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_seki_1000_black, "gfx/freight/seki_1000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_seki_1000_jnr_purchase, "gfx/freight/seki_1000.png") {
	template_purchase(1, 64)
}

spriteset(spriteset_seki_1000_jgr_purchase, "gfx/freight/seki_1000.png") {
	template_purchase(89,64)
}

switch(FEAT_TRAINS, SELF, switch_seki_1000_yeardep_purchase, current_year) {
	0..1949: spriteset_seki_1000_jgr_purchase;
	spriteset_seki_1000_jnr_purchase;
}



random_switch(FEAT_TRAINS, SELF, random_seki_1000_stripe) {
	1: spriteset_seki_1000_stripe;
	1: spriteset_seki_1000_black;
	}


switch(FEAT_TRAINS, SELF, switch_seki_1000_livery, cargo_subtype) {
	1: spriteset_seki_1000_stripe;
	2: spriteset_seki_1000_black;
	random_seki_1000_stripe;
}

switch(FEAT_TRAINS, SELF, switch_seki_1000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2F, string(STR_COLOUR_BLACK), string(STR_COLOUR_YELLOW));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, seki_1000, 1442) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1930,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_SEKI_1000);
	speed: 65 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 40; 
	refit_cost: 0;
//	default_cargo_type: COAL;
	loading_speed: 40;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED); 
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [SGBT, WDPR, FICR, WOOL, POWR, FURN, GLAS, MPTS, PAPR, TEXT, COAL, IORE, CORE, GRVL, LIME, RCYC, SCMT, SLAG, SULP, SGCN, TBCO];
	cargo_allow_refit: [GRAI, WHEA, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, BAKE, POTA, LYE_];
	weight: 15;
	cost_factor: 18;
		running_cost_factor: 3;
		running_cost_base: RUNNING_COST_STEAM;
	length: 5;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_QLME),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 65;
	cargo_capacity: return 40;
	default: switch_seki_1000_livery;
	cargo_subtype_text: switch_seki_1000_subtype_text;
	purchase: switch_seki_1000_yeardep_purchase;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_seki_3000_stripe_empty, "gfx/freight/seki_3000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_seki_3000_stripe_quarter, "gfx/freight/seki_3000.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_seki_3000_stripe_half, "gfx/freight/seki_3000.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_seki_3000_stripe_full, "gfx/freight/seki_3000.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_seki_3000_black_empty, "gfx/freight/seki_3000.png") {
	template_2cc_std(1, 128)
}


spriteset(spriteset_seki_3000_black_quarter, "gfx/freight/seki_3000.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_seki_3000_black_half, "gfx/freight/seki_3000.png") {
	template_2cc_anim(1, 192)
}

spriteset(spriteset_seki_3000_black_full, "gfx/freight/seki_3000.png") {
	template_2cc_anim(1, 224)
}


spriteset(spriteset_seki_3000_purchase, "gfx/freight/seki_3000.png") {
	template_purchase(1, 256)
}



spritegroup spritegroup_seki_3000_stripe_bulk {
    loading: [spriteset_seki_3000_stripe_empty, spriteset_seki_3000_stripe_quarter, spriteset_seki_3000_stripe_half, spriteset_seki_3000_stripe_full];
    loaded:  [spriteset_seki_3000_stripe_empty, spriteset_seki_3000_stripe_quarter, spriteset_seki_3000_stripe_half, spriteset_seki_3000_stripe_full];
}


spritegroup spritegroup_seki_3000_black_bulk {
    loading: [spriteset_seki_3000_black_empty, spriteset_seki_3000_black_quarter, spriteset_seki_3000_black_half, spriteset_seki_3000_black_full];
    loaded:  [spriteset_seki_3000_black_empty, spriteset_seki_3000_black_quarter, spriteset_seki_3000_black_half, spriteset_seki_3000_black_full];
}


random_switch(FEAT_TRAINS, SELF, random_seki_3000_stripe) {
	1: spritegroup_seki_3000_stripe_bulk;
	1: spritegroup_seki_3000_black_bulk;
	}


switch(FEAT_TRAINS, SELF, switch_seki_3000_livery, cargo_subtype) {
	1: spritegroup_seki_3000_stripe_bulk;
	2: spritegroup_seki_3000_black_bulk;
	random_seki_3000_stripe;
}

switch(FEAT_TRAINS, SELF, switch_seki_3000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2F, string(STR_COLOUR_BLACK), string(STR_COLOUR_YELLOW));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	   return CB_RESULT_NO_TEXT;
	}



item (FEAT_TRAINS, seki_3000, 1443) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1951,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_SEKI_3000);
	speed: 65 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 45; 
	refit_cost: 0;
//	default_cargo_type: COAL;
	loading_speed: 40;
	refittable_cargo_classes: bitmask(CC_BULK); 
	non_refittable_cargo_classes: bitmask(CC_COVERED); 
//	cargo_allow_refit: [COAL, IORE, CORE, AORE, BRCK, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, SULP, FRUT]; 
	cargo_disallow_refit: [GRAI, WHEA, BEAN, MAIZ, SEED, WDPR, WOOL, FICR, BAKE, GLAS, WDPR, SGCN, TBCO];
	weight: 14;
	cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
	length: 5;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_COAL),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 65;
	cargo_capacity: return 45;
	default: switch_seki_3000_livery;
	cargo_subtype_text: switch_seki_3000_subtype_text;
	purchase: spriteset_seki_3000_purchase;
	colour_mapping: switch_generic_recolour;
	}
}

spriteset(spriteset_koki_71_empty, "gfx/freight/koki_71_cars.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_koki_71_closed, "gfx/freight/koki_71_cars.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_koki_71_purchase, "gfx/freight/koki_71_cars.png") {
	template_purchase(1, 352)
}



spriteset(spriteset_koki_71_cars_a_half, "gfx/freight/koki_71_cars.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_koki_71_cars_a_full, "gfx/freight/koki_71_cars.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_koki_71_cars_b_half, "gfx/freight/koki_71_cars.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_koki_71_cars_b_full, "gfx/freight/koki_71_cars.png") {
	template_2cc_std(1, 128)
}


spriteset(spriteset_koki_71_cars_c_half, "gfx/freight/koki_71_cars.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_koki_71_cars_c_full, "gfx/freight/koki_71_cars.png") {
	template_2cc_std(1, 192)
}


spriteset(spriteset_koki_71_cars_d_half, "gfx/freight/koki_71_cars.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_koki_71_cars_d_full, "gfx/freight/koki_71_cars.png") {
	template_2cc_std(1, 256)
}




spriteset(spriteset_koki_71_conts_a_half, "gfx/freight/koki_71_conts.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_koki_71_conts_a_full, "gfx/freight/koki_71_conts.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_koki_71_conts_b_half, "gfx/freight/koki_71_conts.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_koki_71_conts_b_full, "gfx/freight/koki_71_conts.png") {
	template_2cc_std(1, 128)
}



spritegroup spritegroup_koki_71_cars_a {
    loading: [spriteset_koki_71_empty, spriteset_koki_71_cars_a_half, spriteset_koki_71_cars_a_full, spriteset_koki_71_closed];
    loaded: [spriteset_koki_71_empty, spriteset_koki_71_cars_a_half, spriteset_koki_71_cars_a_full, spriteset_koki_71_closed];
}

spritegroup spritegroup_koki_71_cars_b {
    loading: [spriteset_koki_71_empty, spriteset_koki_71_cars_b_half, spriteset_koki_71_cars_b_full, spriteset_koki_71_closed];
    loaded: [spriteset_koki_71_empty, spriteset_koki_71_cars_b_half, spriteset_koki_71_cars_b_full, spriteset_koki_71_closed];
}

spritegroup spritegroup_koki_71_cars_c {
    loading: [spriteset_koki_71_empty, spriteset_koki_71_cars_c_half, spriteset_koki_71_cars_c_full, spriteset_koki_71_closed];
    loaded: [spriteset_koki_71_empty, spriteset_koki_71_cars_c_half, spriteset_koki_71_cars_c_full, spriteset_koki_71_closed];
}

spritegroup spritegroup_koki_71_cars_d {
    loading: [spriteset_koki_71_empty, spriteset_koki_71_cars_d_half, spriteset_koki_71_cars_d_full, spriteset_koki_71_closed];
    loaded: [spriteset_koki_71_empty, spriteset_koki_71_cars_d_half, spriteset_koki_71_cars_d_full, spriteset_koki_71_closed];
}


spritegroup spritegroup_koki_71_conts_a {
    loading: [spriteset_koki_71_empty, spriteset_koki_71_conts_a_half, spriteset_koki_71_conts_a_full, spriteset_koki_71_closed];
    loaded: [spriteset_koki_71_empty, spriteset_koki_71_conts_a_half, spriteset_koki_71_conts_a_full, spriteset_koki_71_closed];
}

spritegroup spritegroup_koki_71_conts_b {
    loading: [spriteset_koki_71_empty, spriteset_koki_71_conts_b_half, spriteset_koki_71_conts_b_full, spriteset_koki_71_closed];
    loaded: [spriteset_koki_71_empty, spriteset_koki_71_conts_b_half, spriteset_koki_71_conts_b_full, spriteset_koki_71_closed];
}


random_switch(FEAT_TRAINS, SELF, switch_koki_71_cars_random) {
	1: spritegroup_koki_71_cars_a;
	1: spritegroup_koki_71_cars_b;
	1: spritegroup_koki_71_cars_c;
	1: spritegroup_koki_71_cars_d;
}

random_switch(FEAT_TRAINS, SELF, switch_koki_71_conts_random) {
	1: spritegroup_koki_71_conts_a;
	1: spritegroup_koki_71_conts_b;
}

switch(FEAT_TRAINS, SELF, switch_koki_71_cargo_type, cargo_type_in_veh) {
	VEHI: switch_koki_71_cars_random;
	switch_koki_71_conts_random;
	}
	
	switch(FEAT_TRAINS, SELF, switch_koki_71_cargo_capacity, cargo_type_in_veh) {
	VEHI: return 50;
	return 75;
	}



item (FEAT_TRAINS, koki_71, 1943) {

property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_KOKI_71);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1995,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 50; 
		refit_cost: 0;
		default_cargo_type: VEHI;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, VALU, GOLD, DIAM, PAPR, FOOD, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, CTCD, BUBL, PLST, BEER, COPR, FICR, BDMT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PLAS, RCYC, WDPR, WOOL, VEHI, EOIL, JAVA]; 
		cargo_disallow_refit: [PASS, COAL, LVST, WOOD, IORE, CORE, AORE, BRCK, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, RFPR];
		weight: 20;
		cost_factor: 50;
		running_cost_factor: 8;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CARR),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JRF)
							)
						);
	speed: switch_speedboost_1;
	cargo_age_period: switch_container_cargo_decay;
	default: switch_koki_71_cargo_type;
	purchase: spriteset_koki_71_purchase;
	cargo_capacity: switch_koki_71_cargo_capacity;
	}
}
spriteset(spriteset_ku_5000_jnr_purchase, "gfx/freight/ku_red_a.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_ku_5000_jrf_purchase, "gfx/freight/ku_rwb_a.png") {
	template_purchase(1, 256)
}


//RED

//a

spriteset(spriteset_ku_red_a_empty, "gfx/freight/ku_red_a.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ku_red_a_1a, "gfx/freight/ku_red_a.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ku_red_a_1b, "gfx/freight/ku_red_a.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ku_red_a_1c, "gfx/freight/ku_red_a.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ku_red_a_2a, "gfx/freight/ku_red_a.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ku_red_a_2b, "gfx/freight/ku_red_a.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ku_red_a_2c, "gfx/freight/ku_red_a.png") {
	template_2cc_std(1, 224)
}

//b

spriteset(spriteset_ku_red_b_empty, "gfx/freight/ku_red_b.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ku_red_b_1a, "gfx/freight/ku_red_b.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ku_red_b_1b, "gfx/freight/ku_red_b.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ku_red_b_1c, "gfx/freight/ku_red_b.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ku_red_b_2a, "gfx/freight/ku_red_b.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ku_red_b_2b, "gfx/freight/ku_red_b.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ku_red_b_2c, "gfx/freight/ku_red_b.png") {
	template_2cc_std(1, 224)
}


//flipped cars_a

//blue

spriteset(spriteset_flip_ku_red_a_empty, "gfx/freight/ku_red_a.png") {
	template_2cc_flip(1, 1)
}

spriteset(spriteset_flip_ku_red_a_1a, "gfx/freight/ku_red_a.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_flip_ku_red_a_1b, "gfx/freight/ku_red_a.png") {
	template_2cc_flip(1, 64)
}

spriteset(spriteset_flip_ku_red_a_1c, "gfx/freight/ku_red_a.png") {
	template_2cc_flip(1, 96)
}

spriteset(spriteset_flip_ku_red_a_2a, "gfx/freight/ku_red_a.png") {
	template_2cc_flip(1, 160)
}

spriteset(spriteset_flip_ku_red_a_2b, "gfx/freight/ku_red_a.png") {
	template_2cc_flip(1, 192)
}

spriteset(spriteset_flip_ku_red_a_2c, "gfx/freight/ku_red_a.png") {
	template_2cc_flip(1, 224)
}

//green

spriteset(spriteset_flip_ku_red_b_empty, "gfx/freight/ku_red_b.png") {
	template_2cc_flip(1, 1)
}

spriteset(spriteset_flip_ku_red_b_1a, "gfx/freight/ku_red_b.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_flip_ku_red_b_1b, "gfx/freight/ku_red_b.png") {
	template_2cc_flip(1, 64)
}

spriteset(spriteset_flip_ku_red_b_1c, "gfx/freight/ku_red_b.png") {
	template_2cc_flip(1, 96)
}

spriteset(spriteset_flip_ku_red_b_2a, "gfx/freight/ku_red_b.png") {
	template_2cc_flip(1, 160)
}

spriteset(spriteset_flip_ku_red_b_2b, "gfx/freight/ku_red_b.png") {
	template_2cc_flip(1, 192)
}

spriteset(spriteset_flip_ku_red_b_2c, "gfx/freight/ku_red_b.png") {
	template_2cc_flip(1, 224)
}


//cars spritegroups

spritegroup spritegroup_ku_red_a_1 {
    loading: [spriteset_ku_red_a_empty, spriteset_ku_red_a_1a, spriteset_ku_red_a_1b, spriteset_ku_red_a_1c];
    loaded: [spriteset_ku_red_a_empty, spriteset_ku_red_a_1a, spriteset_ku_red_a_1b, spriteset_ku_red_a_1c];
}

spritegroup spritegroup_ku_red_a_2 {
    loading: [spriteset_ku_red_a_empty, spriteset_ku_red_a_2a, spriteset_ku_red_a_2b, spriteset_ku_red_a_2c];
    loaded: [spriteset_ku_red_a_empty, spriteset_ku_red_a_2a, spriteset_ku_red_a_2b, spriteset_ku_red_a_2c];
}

spritegroup spritegroup_ku_red_a_3 {
    loading: [spriteset_ku_red_a_empty, spriteset_flip_ku_red_a_1a, spriteset_flip_ku_red_a_1b, spriteset_flip_ku_red_a_1c];
    loaded: [spriteset_ku_red_a_empty, spriteset_flip_ku_red_a_1a, spriteset_flip_ku_red_a_1b, spriteset_flip_ku_red_a_1c];
}

spritegroup spritegroup_ku_red_a_4 {
    loading: [spriteset_ku_red_a_empty, spriteset_flip_ku_red_a_2a, spriteset_flip_ku_red_a_2b, spriteset_flip_ku_red_a_2c];
    loaded: [spriteset_ku_red_a_empty, spriteset_flip_ku_red_a_2a, spriteset_flip_ku_red_a_2b, spriteset_flip_ku_red_a_2c];
}


spritegroup spritegroup_ku_red_b_1 {
    loading: [spriteset_ku_red_b_empty, spriteset_ku_red_b_1a, spriteset_ku_red_b_1b, spriteset_ku_red_b_1c];
    loaded: [spriteset_ku_red_b_empty, spriteset_ku_red_b_1a, spriteset_ku_red_b_1b, spriteset_ku_red_b_1c];
}

spritegroup spritegroup_ku_red_b_2 {
    loading: [spriteset_ku_red_b_empty, spriteset_ku_red_b_2a, spriteset_ku_red_b_2b, spriteset_ku_red_b_2c];
    loaded: [spriteset_ku_red_b_empty, spriteset_ku_red_b_2a, spriteset_ku_red_b_2b, spriteset_ku_red_b_2c];
}

spritegroup spritegroup_ku_red_b_3 {
    loading: [spriteset_ku_red_b_empty, spriteset_flip_ku_red_b_1a, spriteset_flip_ku_red_b_1b, spriteset_flip_ku_red_b_1c];
    loaded: [spriteset_ku_red_b_empty, spriteset_flip_ku_red_b_1a, spriteset_flip_ku_red_b_1b, spriteset_flip_ku_red_b_1c];
}

spritegroup spritegroup_ku_red_b_4 {
    loading: [spriteset_ku_red_b_empty, spriteset_flip_ku_red_b_2a, spriteset_flip_ku_red_b_2b, spriteset_flip_ku_red_b_2c];
    loaded: [spriteset_ku_red_b_empty, spriteset_flip_ku_red_b_2a, spriteset_flip_ku_red_b_2b, spriteset_flip_ku_red_b_2c];
}




//RWB Nissan

//a

spriteset(spriteset_ku_rwb_a_empty, "gfx/freight/ku_rwb_a.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ku_rwb_a_1a, "gfx/freight/ku_rwb_a.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ku_rwb_a_1b, "gfx/freight/ku_rwb_a.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ku_rwb_a_1c, "gfx/freight/ku_rwb_a.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ku_rwb_a_2a, "gfx/freight/ku_rwb_a.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ku_rwb_a_2b, "gfx/freight/ku_rwb_a.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ku_rwb_a_2c, "gfx/freight/ku_rwb_a.png") {
	template_2cc_std(1, 224)
}

//b

spriteset(spriteset_ku_rwb_b_empty, "gfx/freight/ku_rwb_b.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ku_rwb_b_1a, "gfx/freight/ku_rwb_b.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ku_rwb_b_1b, "gfx/freight/ku_rwb_b.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ku_rwb_b_1c, "gfx/freight/ku_rwb_b.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ku_rwb_b_2a, "gfx/freight/ku_rwb_b.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ku_rwb_b_2b, "gfx/freight/ku_rwb_b.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ku_rwb_b_2c, "gfx/freight/ku_rwb_b.png") {
	template_2cc_std(1, 224)
}


//flipped cars_a

//blue

spriteset(spriteset_flip_ku_rwb_a_empty, "gfx/freight/ku_rwb_a.png") {
	template_2cc_flip(1, 1)
}

spriteset(spriteset_flip_ku_rwb_a_1a, "gfx/freight/ku_rwb_a.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_flip_ku_rwb_a_1b, "gfx/freight/ku_rwb_a.png") {
	template_2cc_flip(1, 64)
}

spriteset(spriteset_flip_ku_rwb_a_1c, "gfx/freight/ku_rwb_a.png") {
	template_2cc_flip(1, 96)
}

spriteset(spriteset_flip_ku_rwb_a_2a, "gfx/freight/ku_rwb_a.png") {
	template_2cc_flip(1, 160)
}

spriteset(spriteset_flip_ku_rwb_a_2b, "gfx/freight/ku_rwb_a.png") {
	template_2cc_flip(1, 192)
}

spriteset(spriteset_flip_ku_rwb_a_2c, "gfx/freight/ku_rwb_a.png") {
	template_2cc_flip(1, 224)
}

//green

spriteset(spriteset_flip_ku_rwb_b_empty, "gfx/freight/ku_rwb_b.png") {
	template_2cc_flip(1, 1)
}

spriteset(spriteset_flip_ku_rwb_b_1a, "gfx/freight/ku_rwb_b.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_flip_ku_rwb_b_1b, "gfx/freight/ku_rwb_b.png") {
	template_2cc_flip(1, 64)
}

spriteset(spriteset_flip_ku_rwb_b_1c, "gfx/freight/ku_rwb_b.png") {
	template_2cc_flip(1, 96)
}

spriteset(spriteset_flip_ku_rwb_b_2a, "gfx/freight/ku_rwb_b.png") {
	template_2cc_flip(1, 160)
}

spriteset(spriteset_flip_ku_rwb_b_2b, "gfx/freight/ku_rwb_b.png") {
	template_2cc_flip(1, 192)
}

spriteset(spriteset_flip_ku_rwb_b_2c, "gfx/freight/ku_rwb_b.png") {
	template_2cc_flip(1, 224)
}


//cars spritegroups

spritegroup spritegroup_ku_rwb_a_1 {
    loading: [spriteset_ku_rwb_a_empty, spriteset_ku_rwb_a_1a, spriteset_ku_rwb_a_1b, spriteset_ku_rwb_a_1c];
    loaded: [spriteset_ku_rwb_a_empty, spriteset_ku_rwb_a_1a, spriteset_ku_rwb_a_1b, spriteset_ku_rwb_a_1c];
}

spritegroup spritegroup_ku_rwb_a_2 {
    loading: [spriteset_ku_rwb_a_empty, spriteset_ku_rwb_a_2a, spriteset_ku_rwb_a_2b, spriteset_ku_rwb_a_2c];
    loaded: [spriteset_ku_rwb_a_empty, spriteset_ku_rwb_a_2a, spriteset_ku_rwb_a_2b, spriteset_ku_rwb_a_2c];
}

spritegroup spritegroup_ku_rwb_a_3 {
    loading: [spriteset_ku_rwb_a_empty, spriteset_flip_ku_rwb_a_1a, spriteset_flip_ku_rwb_a_1b, spriteset_flip_ku_rwb_a_1c];
    loaded: [spriteset_ku_rwb_a_empty, spriteset_flip_ku_rwb_a_1a, spriteset_flip_ku_rwb_a_1b, spriteset_flip_ku_rwb_a_1c];
}

spritegroup spritegroup_ku_rwb_a_4 {
    loading: [spriteset_ku_rwb_a_empty, spriteset_flip_ku_rwb_a_2a, spriteset_flip_ku_rwb_a_2b, spriteset_flip_ku_rwb_a_2c];
    loaded: [spriteset_ku_rwb_a_empty, spriteset_flip_ku_rwb_a_2a, spriteset_flip_ku_rwb_a_2b, spriteset_flip_ku_rwb_a_2c];
}


spritegroup spritegroup_ku_rwb_b_1 {
    loading: [spriteset_ku_rwb_b_empty, spriteset_ku_rwb_b_1a, spriteset_ku_rwb_b_1b, spriteset_ku_rwb_b_1c];
    loaded: [spriteset_ku_rwb_b_empty, spriteset_ku_rwb_b_1a, spriteset_ku_rwb_b_1b, spriteset_ku_rwb_b_1c];
}

spritegroup spritegroup_ku_rwb_b_2 {
    loading: [spriteset_ku_rwb_b_empty, spriteset_ku_rwb_b_2a, spriteset_ku_rwb_b_2b, spriteset_ku_rwb_b_2c];
    loaded: [spriteset_ku_rwb_b_empty, spriteset_ku_rwb_b_2a, spriteset_ku_rwb_b_2b, spriteset_ku_rwb_b_2c];
}

spritegroup spritegroup_ku_rwb_b_3 {
    loading: [spriteset_ku_rwb_b_empty, spriteset_flip_ku_rwb_b_1a, spriteset_flip_ku_rwb_b_1b, spriteset_flip_ku_rwb_b_1c];
    loaded: [spriteset_ku_rwb_b_empty, spriteset_flip_ku_rwb_b_1a, spriteset_flip_ku_rwb_b_1b, spriteset_flip_ku_rwb_b_1c];
}

spritegroup spritegroup_ku_rwb_b_4 {
    loading: [spriteset_ku_rwb_b_empty, spriteset_flip_ku_rwb_b_2a, spriteset_flip_ku_rwb_b_2b, spriteset_flip_ku_rwb_b_2c];
    loaded: [spriteset_ku_rwb_b_empty, spriteset_flip_ku_rwb_b_2a, spriteset_flip_ku_rwb_b_2b, spriteset_flip_ku_rwb_b_2c];
}


//RED BLUE

//a

spriteset(spriteset_ku_rb_a_empty, "gfx/freight/ku_rb_a.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ku_rb_a_1a, "gfx/freight/ku_rb_a.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ku_rb_a_1b, "gfx/freight/ku_rb_a.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ku_rb_a_1c, "gfx/freight/ku_rb_a.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ku_rb_a_2a, "gfx/freight/ku_rb_a.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ku_rb_a_2b, "gfx/freight/ku_rb_a.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ku_rb_a_2c, "gfx/freight/ku_rb_a.png") {
	template_2cc_std(1, 224)
}

//b

spriteset(spriteset_ku_rb_b_empty, "gfx/freight/ku_rb_b.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ku_rb_b_1a, "gfx/freight/ku_rb_b.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ku_rb_b_1b, "gfx/freight/ku_rb_b.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ku_rb_b_1c, "gfx/freight/ku_rb_b.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ku_rb_b_2a, "gfx/freight/ku_rb_b.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ku_rb_b_2b, "gfx/freight/ku_rb_b.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ku_rb_b_2c, "gfx/freight/ku_rb_b.png") {
	template_2cc_std(1, 224)
}


//flipped cars_a

//blue

spriteset(spriteset_flip_ku_rb_a_empty, "gfx/freight/ku_rb_a.png") {
	template_2cc_flip(1, 1)
}

spriteset(spriteset_flip_ku_rb_a_1a, "gfx/freight/ku_rb_a.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_flip_ku_rb_a_1b, "gfx/freight/ku_rb_a.png") {
	template_2cc_flip(1, 64)
}

spriteset(spriteset_flip_ku_rb_a_1c, "gfx/freight/ku_rb_a.png") {
	template_2cc_flip(1, 96)
}

spriteset(spriteset_flip_ku_rb_a_2a, "gfx/freight/ku_rb_a.png") {
	template_2cc_flip(1, 160)
}

spriteset(spriteset_flip_ku_rb_a_2b, "gfx/freight/ku_rb_a.png") {
	template_2cc_flip(1, 192)
}

spriteset(spriteset_flip_ku_rb_a_2c, "gfx/freight/ku_rb_a.png") {
	template_2cc_flip(1, 224)
}

//green

spriteset(spriteset_flip_ku_rb_b_empty, "gfx/freight/ku_rb_b.png") {
	template_2cc_flip(1, 1)
}

spriteset(spriteset_flip_ku_rb_b_1a, "gfx/freight/ku_rb_b.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_flip_ku_rb_b_1b, "gfx/freight/ku_rb_b.png") {
	template_2cc_flip(1, 64)
}

spriteset(spriteset_flip_ku_rb_b_1c, "gfx/freight/ku_rb_b.png") {
	template_2cc_flip(1, 96)
}

spriteset(spriteset_flip_ku_rb_b_2a, "gfx/freight/ku_rb_b.png") {
	template_2cc_flip(1, 160)
}

spriteset(spriteset_flip_ku_rb_b_2b, "gfx/freight/ku_rb_b.png") {
	template_2cc_flip(1, 192)
}

spriteset(spriteset_flip_ku_rb_b_2c, "gfx/freight/ku_rb_b.png") {
	template_2cc_flip(1, 224)
}


//cars spritegroups

spritegroup spritegroup_ku_rb_a_1 {
    loading: [spriteset_ku_rb_a_empty, spriteset_ku_rb_a_1a, spriteset_ku_rb_a_1b, spriteset_ku_rb_a_1c];
    loaded: [spriteset_ku_rb_a_empty, spriteset_ku_rb_a_1a, spriteset_ku_rb_a_1b, spriteset_ku_rb_a_1c];
}

spritegroup spritegroup_ku_rb_a_2 {
    loading: [spriteset_ku_rb_a_empty, spriteset_ku_rb_a_2a, spriteset_ku_rb_a_2b, spriteset_ku_rb_a_2c];
    loaded: [spriteset_ku_rb_a_empty, spriteset_ku_rb_a_2a, spriteset_ku_rb_a_2b, spriteset_ku_rb_a_2c];
}

spritegroup spritegroup_ku_rb_a_3 {
    loading: [spriteset_ku_rb_a_empty, spriteset_flip_ku_rb_a_1a, spriteset_flip_ku_rb_a_1b, spriteset_flip_ku_rb_a_1c];
    loaded: [spriteset_ku_rb_a_empty, spriteset_flip_ku_rb_a_1a, spriteset_flip_ku_rb_a_1b, spriteset_flip_ku_rb_a_1c];
}

spritegroup spritegroup_ku_rb_a_4 {
    loading: [spriteset_ku_rb_a_empty, spriteset_flip_ku_rb_a_2a, spriteset_flip_ku_rb_a_2b, spriteset_flip_ku_rb_a_2c];
    loaded: [spriteset_ku_rb_a_empty, spriteset_flip_ku_rb_a_2a, spriteset_flip_ku_rb_a_2b, spriteset_flip_ku_rb_a_2c];
}


spritegroup spritegroup_ku_rb_b_1 {
    loading: [spriteset_ku_rb_b_empty, spriteset_ku_rb_b_1a, spriteset_ku_rb_b_1b, spriteset_ku_rb_b_1c];
    loaded: [spriteset_ku_rb_b_empty, spriteset_ku_rb_b_1a, spriteset_ku_rb_b_1b, spriteset_ku_rb_b_1c];
}

spritegroup spritegroup_ku_rb_b_2 {
    loading: [spriteset_ku_rb_b_empty, spriteset_ku_rb_b_2a, spriteset_ku_rb_b_2b, spriteset_ku_rb_b_2c];
    loaded: [spriteset_ku_rb_b_empty, spriteset_ku_rb_b_2a, spriteset_ku_rb_b_2b, spriteset_ku_rb_b_2c];
}

spritegroup spritegroup_ku_rb_b_3 {
    loading: [spriteset_ku_rb_b_empty, spriteset_flip_ku_rb_b_1a, spriteset_flip_ku_rb_b_1b, spriteset_flip_ku_rb_b_1c];
    loaded: [spriteset_ku_rb_b_empty, spriteset_flip_ku_rb_b_1a, spriteset_flip_ku_rb_b_1b, spriteset_flip_ku_rb_b_1c];
}

spritegroup spritegroup_ku_rb_b_4 {
    loading: [spriteset_ku_rb_b_empty, spriteset_flip_ku_rb_b_2a, spriteset_flip_ku_rb_b_2b, spriteset_flip_ku_rb_b_2c];
    loaded: [spriteset_ku_rb_b_empty, spriteset_flip_ku_rb_b_2a, spriteset_flip_ku_rb_b_2b, spriteset_flip_ku_rb_b_2c];
}

//CARS CC

//a

spriteset(spriteset_ku_cc_a_empty, "gfx/freight/ku_cc_a.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ku_cc_a_1a, "gfx/freight/ku_cc_a.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ku_cc_a_1b, "gfx/freight/ku_cc_a.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ku_cc_a_1c, "gfx/freight/ku_cc_a.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ku_cc_a_2a, "gfx/freight/ku_cc_a.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ku_cc_a_2b, "gfx/freight/ku_cc_a.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ku_cc_a_2c, "gfx/freight/ku_cc_a.png") {
	template_2cc_std(1, 224)
}

//b

spriteset(spriteset_ku_cc_b_empty, "gfx/freight/ku_cc_b.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ku_cc_b_1a, "gfx/freight/ku_cc_b.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ku_cc_b_1b, "gfx/freight/ku_cc_b.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ku_cc_b_1c, "gfx/freight/ku_cc_b.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ku_cc_b_2a, "gfx/freight/ku_cc_b.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_ku_cc_b_2b, "gfx/freight/ku_cc_b.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_ku_cc_b_2c, "gfx/freight/ku_cc_b.png") {
	template_2cc_std(1, 224)
}


//flipped cars_a

//blue

spriteset(spriteset_flip_ku_cc_a_empty, "gfx/freight/ku_cc_a.png") {
	template_2cc_flip(1, 1)
}

spriteset(spriteset_flip_ku_cc_a_1a, "gfx/freight/ku_cc_a.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_flip_ku_cc_a_1b, "gfx/freight/ku_cc_a.png") {
	template_2cc_flip(1, 64)
}

spriteset(spriteset_flip_ku_cc_a_1c, "gfx/freight/ku_cc_a.png") {
	template_2cc_flip(1, 96)
}

spriteset(spriteset_flip_ku_cc_a_2a, "gfx/freight/ku_cc_a.png") {
	template_2cc_flip(1, 160)
}

spriteset(spriteset_flip_ku_cc_a_2b, "gfx/freight/ku_cc_a.png") {
	template_2cc_flip(1, 192)
}

spriteset(spriteset_flip_ku_cc_a_2c, "gfx/freight/ku_cc_a.png") {
	template_2cc_flip(1, 224)
}

//green

spriteset(spriteset_flip_ku_cc_b_empty, "gfx/freight/ku_cc_b.png") {
	template_2cc_flip(1, 1)
}

spriteset(spriteset_flip_ku_cc_b_1a, "gfx/freight/ku_cc_b.png") {
	template_2cc_flip(1, 32)
}

spriteset(spriteset_flip_ku_cc_b_1b, "gfx/freight/ku_cc_b.png") {
	template_2cc_flip(1, 64)
}

spriteset(spriteset_flip_ku_cc_b_1c, "gfx/freight/ku_cc_b.png") {
	template_2cc_flip(1, 96)
}

spriteset(spriteset_flip_ku_cc_b_2a, "gfx/freight/ku_cc_b.png") {
	template_2cc_flip(1, 160)
}

spriteset(spriteset_flip_ku_cc_b_2b, "gfx/freight/ku_cc_b.png") {
	template_2cc_flip(1, 192)
}

spriteset(spriteset_flip_ku_cc_b_2c, "gfx/freight/ku_cc_b.png") {
	template_2cc_flip(1, 224)
}


//cars spritegroups

spritegroup spritegroup_ku_cc_a_1 {
    loading: [spriteset_ku_cc_a_empty, spriteset_ku_cc_a_1a, spriteset_ku_cc_a_1b, spriteset_ku_cc_a_1c];
    loaded: [spriteset_ku_cc_a_empty, spriteset_ku_cc_a_1a, spriteset_ku_cc_a_1b, spriteset_ku_cc_a_1c];
}

spritegroup spritegroup_ku_cc_a_2 {
    loading: [spriteset_ku_cc_a_empty, spriteset_ku_cc_a_2a, spriteset_ku_cc_a_2b, spriteset_ku_cc_a_2c];
    loaded: [spriteset_ku_cc_a_empty, spriteset_ku_cc_a_2a, spriteset_ku_cc_a_2b, spriteset_ku_cc_a_2c];
}

spritegroup spritegroup_ku_cc_a_3 {
    loading: [spriteset_ku_cc_a_empty, spriteset_flip_ku_cc_a_1a, spriteset_flip_ku_cc_a_1b, spriteset_flip_ku_cc_a_1c];
    loaded: [spriteset_ku_cc_a_empty, spriteset_flip_ku_cc_a_1a, spriteset_flip_ku_cc_a_1b, spriteset_flip_ku_cc_a_1c];
}

spritegroup spritegroup_ku_cc_a_4 {
    loading: [spriteset_ku_cc_a_empty, spriteset_flip_ku_cc_a_2a, spriteset_flip_ku_cc_a_2b, spriteset_flip_ku_cc_a_2c];
    loaded: [spriteset_ku_cc_a_empty, spriteset_flip_ku_cc_a_2a, spriteset_flip_ku_cc_a_2b, spriteset_flip_ku_cc_a_2c];
}


spritegroup spritegroup_ku_cc_b_1 {
    loading: [spriteset_ku_cc_b_empty, spriteset_ku_cc_b_1a, spriteset_ku_cc_b_1b, spriteset_ku_cc_b_1c];
    loaded: [spriteset_ku_cc_b_empty, spriteset_ku_cc_b_1a, spriteset_ku_cc_b_1b, spriteset_ku_cc_b_1c];
}

spritegroup spritegroup_ku_cc_b_2 {
    loading: [spriteset_ku_cc_b_empty, spriteset_ku_cc_b_2a, spriteset_ku_cc_b_2b, spriteset_ku_cc_b_2c];
    loaded: [spriteset_ku_cc_b_empty, spriteset_ku_cc_b_2a, spriteset_ku_cc_b_2b, spriteset_ku_cc_b_2c];
}

spritegroup spritegroup_ku_cc_b_3 {
    loading: [spriteset_ku_cc_b_empty, spriteset_flip_ku_cc_b_1a, spriteset_flip_ku_cc_b_1b, spriteset_flip_ku_cc_b_1c];
    loaded: [spriteset_ku_cc_b_empty, spriteset_flip_ku_cc_b_1a, spriteset_flip_ku_cc_b_1b, spriteset_flip_ku_cc_b_1c];
}

spritegroup spritegroup_ku_cc_b_4 {
    loading: [spriteset_ku_cc_b_empty, spriteset_flip_ku_cc_b_2a, spriteset_flip_ku_cc_b_2b, spriteset_flip_ku_cc_b_2c];
    loaded: [spriteset_ku_cc_b_empty, spriteset_flip_ku_cc_b_2a, spriteset_flip_ku_cc_b_2b, spriteset_flip_ku_cc_b_2c];
}


random_switch(FEAT_TRAINS, SELF, switch_ku_red_livery) {
	1: spritegroup_ku_red_a_1;
    1: spritegroup_ku_red_a_2;
	1: spritegroup_ku_red_a_3;
	1: spritegroup_ku_red_a_4;
	1: spritegroup_ku_red_b_1;
    1: spritegroup_ku_red_b_2;
	1: spritegroup_ku_red_b_3;
	1: spritegroup_ku_red_b_4;
}


random_switch(FEAT_TRAINS, SELF, switch_ku_cc_livery) {
	1: spritegroup_ku_cc_a_1;
    1: spritegroup_ku_cc_a_2;
	1: spritegroup_ku_cc_a_3;
	1: spritegroup_ku_cc_a_4;
	1: spritegroup_ku_cc_b_1;
    1: spritegroup_ku_cc_b_2;
	1: spritegroup_ku_cc_b_3;
	1: spritegroup_ku_cc_b_4;
}


random_switch(FEAT_TRAINS, SELF, switch_ku_rwb_livery) {
	1: spritegroup_ku_rwb_a_1;
    1: spritegroup_ku_rwb_a_2;
	1: spritegroup_ku_rwb_a_3;
	1: spritegroup_ku_rwb_a_4;
	1: spritegroup_ku_rwb_b_1;
    1: spritegroup_ku_rwb_b_2;
	1: spritegroup_ku_rwb_b_3;
	1: spritegroup_ku_rwb_b_4;
}


random_switch(FEAT_TRAINS, SELF, switch_ku_rb_livery) {
	1: spritegroup_ku_rb_a_1;
    1: spritegroup_ku_rb_a_2;
	1: spritegroup_ku_rb_a_3;
	1: spritegroup_ku_rb_a_4;
	1: spritegroup_ku_rb_b_1;
    1: spritegroup_ku_rb_b_2;
	1: spritegroup_ku_rb_b_3;
	1: spritegroup_ku_rb_b_4;
}

random_switch(FEAT_TRAINS, SELF, switch_ku_random_livery) {
	1: switch_ku_red_livery;
	1: switch_ku_rwb_livery;
	1: switch_ku_rb_livery;
}


switch(FEAT_TRAINS, SELF, switch_ku_5000_yeardep, current_year) {
	0..1990: switch_ku_red_livery;
	switch_ku_rwb_livery;
	}


switch(FEAT_TRAINS, SELF, switch_ku_5000_livery, cargo_subtype) {
	1: switch_ku_red_livery;
	2: switch_ku_rwb_livery;
	3: switch_ku_rb_livery;
	4: switch_ku_cc_livery;
	5: switch_ku_random_livery;
	switch_ku_5000_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_ku_5000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_JNR), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_RED)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF),
                                   string(STR_CONCAT_3F, 
                                    string(STR_COLOUR_RED), 
									string(STR_COLOUR_WHITE),
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
	3: return string(STR_CONCAT_2, string(STR_SUFFIX_JRF),
                                   string(STR_CONCAT_2F, 
                                    string(STR_COLOUR_RED), 
                                    string(STR_COLOUR_BLUE)
                                    )
                                 );
	4: return string(STR_REFIT_CC);
	5: return string(STR_REFIT_RANDOM);
	   return CB_RESULT_NO_TEXT;
	}


switch(FEAT_TRAINS, SELF, switch_ku_5000_purchase, current_year) {
	0..1990: spriteset_ku_5000_jnr_purchase;
	spriteset_ku_5000_jrf_purchase;
	}


item (FEAT_TRAINS, ku_5000, 1944) {

property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_KU_5000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1966,1,1);
		speed: 85 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 40; 
		refit_cost: 0;
		default_cargo_type: VEHI;
		loading_speed: 20;
		refittable_cargo_classes: 0; 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [VEHI, GOOD]; 
//		cargo_disallow_refit: [PASS, COAL, LVST, WOOD, IORE, CORE, AORE, BRCK, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, RFPR];
		weight: 12;
		cost_factor: 30;
		running_cost_factor: 5;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CAR),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 85;
	cargo_capacity: return 40;
	default: switch_ku_5000_livery;
	purchase: switch_ku_5000_purchase;
	cargo_subtype_text: switch_ku_5000_subtype_text;
	}
}



//conts 
//cont types a,b,c,d
//cont position 1,2,3,4

spriteset(spriteset_conts_jnr_green_a_4, "gfx/containers/jnr_green.png") { //old
	template_container_4(1, 1)
}

//b

spriteset(spriteset_conts_jnr_green_b_4, "gfx/containers/jnr_green.png") { //old 
	template_container_4(1, 32)
}

//c

spriteset(spriteset_conts_jnr_green_c_4, "gfx/containers/jnr_green.png") {
	template_container_4(1, 64)
}

alternative_sprites(spriteset_conts_jnr_green_c_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_4(1, 64)
}

//d

spriteset(spriteset_conts_jnr_green_d_4, "gfx/containers/jnr_green.png") {
	template_container_4(1, 96)
}

alternative_sprites(spriteset_conts_jnr_green_d_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_4(1, 96)
}

//e

spriteset(spriteset_conts_jnr_green_e_4, "gfx/containers/jnr_green.png") { //red
	template_container_4(1, 128)
}

alternative_sprites(spriteset_conts_jnr_green_e_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_4(1, 128)
}

//f

spriteset(spriteset_conts_jnr_green_f_4, "gfx/containers/jnr_green.png") { //white
	template_container_4(1, 160)
}

alternative_sprites(spriteset_conts_jnr_green_f_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_4(1, 160)
}

//g

spriteset(spriteset_conts_jnr_green_g_4, "gfx/containers/jnr_green.png") { //blue
	template_container_4(1, 192)
}

alternative_sprites(spriteset_conts_jnr_green_g_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_4(1, 192)
}

//h

spriteset(spriteset_conts_jnr_green_h_4, "gfx/containers/jnr_green.png") { //vent
	template_container_4(1, 224)
}

alternative_sprites(spriteset_conts_jnr_green_h_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_4(1, 224)
}

//i

spriteset(spriteset_conts_jnr_green_i_4, "gfx/containers/jnr_green.png") { //hopper
	template_container_4(1, 256)
}

alternative_sprites(spriteset_conts_jnr_green_i_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_4(1, 256)
}


//j

spriteset(spriteset_conts_jnr_green_j_4, "gfx/containers/jnr_green.png") { //tank a
	template_container_4(1, 288)
}

alternative_sprites(spriteset_conts_jnr_green_j_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_4(1, 288)
}

//k

spriteset(spriteset_conts_jnr_green_k_4, "gfx/containers/jnr_green.png") { //tank b
	template_container_4(1, 320)
}

alternative_sprites(spriteset_conts_jnr_green_k_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_4(1, 320)
}


//JNR/JRF blue  general conts
//cont types a,b,c,d
//cont position 1,2,3,4

spriteset(spriteset_conts_jrf_blue_a_4, "gfx/containers/jrf_blue.png") { //old plain blue
	template_container_4(1, 1)
}

//b

spriteset(spriteset_conts_jrf_blue_b_4, "gfx/containers/jrf_blue.png") { //old blue red logo
	template_container_4(1, 32)
}

//c

spriteset(spriteset_conts_jrf_blue_c_4, "gfx/containers/jrf_blue.png") { //old blue white logo
	template_container_4(1, 64)
}


//d

spriteset(spriteset_conts_jrf_blue_d_4, "gfx/containers/jrf_blue.png") { //old blue white stripe red logo
	template_container_4(1, 96)
}

//e

spriteset(spriteset_conts_jrf_blue_e_4, "gfx/containers/jrf_blue.png") { //jnr blue white stripe white logo
	template_container_4(1, 128)
}



//f

spriteset(spriteset_conts_jrf_blue_f_4, "gfx/containers/jrf_blue.png") { //jrf hokkaido vent white
	template_container_4(1, 160)
}


//g

spriteset(spriteset_conts_jrf_blue_g_4, "gfx/containers/jrf_blue.png") { //jrf _/ red logo
	template_container_4(1, 192)
}




//h

spriteset(spriteset_conts_jrf_blue_h_4, "gfx/containers/jrf_blue.png") { //jrf _/^
	template_container_4(1, 224)
}


//i

spriteset(spriteset_conts_jrf_blue_i_4, "gfx/containers/jrf_blue.png") { //jrf __/
	template_container_4(1, 256)
}



//j

spriteset(spriteset_conts_jrf_blue_j_4, "gfx/containers/jrf_blue.png") { //jrf swoosh
	template_container_4(1, 288)
}



//k

spriteset(spriteset_conts_jrf_blue_k_4, "gfx/containers/jrf_blue.png") { //jrf vent
	template_container_4(1, 320)
}


//JRF red  general conts
//cont types a,b,c,d
//cont position 1,2,3,4


spriteset(spriteset_conts_jrf_red_a_4, "gfx/containers/jrf_red.png") { //plain red
	template_container_4(1, 1)
}


//b

spriteset(spriteset_conts_jrf_red_b_4, "gfx/containers/jrf_red.png") { //red small logo
	template_container_4(1, 32)
}

//c

spriteset(spriteset_conts_jrf_red_c_4, "gfx/containers/jrf_red.png") { //red big logo
	template_container_4(1, 64)
}


//d

spriteset(spriteset_conts_jrf_red_d_4, "gfx/containers/jrf_red.png") { //red logo
	template_container_4(1, 96)
}

//e

spriteset(spriteset_conts_jrf_red_e_4, "gfx/containers/jrf_red.png") { //red black
	template_container_4(1, 128)
}



//f

spriteset(spriteset_conts_jrf_red_f_4, "gfx/containers/jrf_red.png") { //red ribbed
	template_container_4(1, 160)
}


//g

spriteset(spriteset_conts_jrf_red_g_4, "gfx/containers/jrf_red.png") { //jrf grey
	template_container_4(1, 192)
}




//h

spriteset(spriteset_conts_jrf_red_h_4, "gfx/containers/jrf_red.png") { //white jrf
	template_container_4(1, 224)
}


//i

spriteset(spriteset_conts_jrf_red_i_4, "gfx/containers/jrf_red.png") { //green jrf
	template_container_4(1, 256)
}

alternative_sprites(spriteset_conts_jrf_red_i_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jrf_red_32.png") {
	template_container_4(1, 256)
}


//j

spriteset(spriteset_conts_jrf_red_j_4, "gfx/containers/jrf_red.png") { //jrf eco
	template_container_4(1, 288)
}

alternative_sprites(spriteset_conts_jrf_red_j_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jrf_red_32.png") {
	template_container_4(1, 288)
}

//k

spriteset(spriteset_conts_jrf_red_k_4, "gfx/containers/jrf_red.png") { //jrf vent
	template_container_4(1, 320)
}




//jnr reefer conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_jnr_reefer_a_4, "gfx/containers/jnr_reefer.png") { //old white
	template_container_4(1, 1)
}

//b

spriteset(spriteset_conts_jnr_reefer_b_4, "gfx/containers/jnr_reefer.png") { //old red logo
	template_container_4(1, 32)
}

//c

spriteset(spriteset_conts_jnr_reefer_c_4, "gfx/containers/jnr_reefer.png") { //blue stripe
	template_container_4(1, 64)
}

//d

spriteset(spriteset_conts_jnr_reefer_d_4, "gfx/containers/jnr_reefer.png") { //blue bottom 
	template_container_4(1, 96)
}

//e

spriteset(spriteset_conts_jnr_reefer_e_4, "gfx/containers/jnr_reefer.png") { //blue bottom red logo
	template_container_4(1, 128)
}


//f

spriteset(spriteset_conts_jnr_reefer_f_4, "gfx/containers/jnr_reefer.png") { //white
	template_container_4(1, 160)
}

//g

spriteset(spriteset_conts_jnr_reefer_g_4, "gfx/containers/jnr_reefer.png") { //blue
	template_container_4(1, 192)
}

//h

spriteset(spriteset_conts_jnr_reefer_h_4, "gfx/containers/jnr_reefer.png") { //vent
	template_container_4(1, 224)
}

//i

spriteset(spriteset_conts_jnr_reefer_i_4, "gfx/containers/jnr_reefer.png") { //hopper
	template_container_4(1, 256)
}


//j

spriteset(spriteset_conts_jnr_reefer_j_4, "gfx/containers/jnr_reefer.png") { //tank a
	template_container_4(1, 288)
}

//k

spriteset(spriteset_conts_jnr_reefer_k_4, "gfx/containers/jnr_reefer.png") { //tank b
	template_container_4(1, 320)
}




//private general conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_general_a_4, "gfx/containers/private_containers.png") { //jfe dolphins
	template_container_4(1, 1)
}


//b

spriteset(spriteset_conts_private_general_b_4, "gfx/containers/private_containers.png") { //nippon soda blue
	template_container_4(1, 32)
}

//c

spriteset(spriteset_conts_private_general_c_4, "gfx/containers/private_containers.png") { //nippon soda red
	template_container_4(1, 64)
}


//d

spriteset(spriteset_conts_private_general_d_4, "gfx/containers/private_containers.png") { //grey red
	template_container_4(1, 96)
}

//e

spriteset(spriteset_conts_private_general_e_4, "gfx/containers/private_containers.png") { //grey cc boue
	template_container_4(1, 128)
}



//f

spriteset(spriteset_conts_private_general_f_4, "gfx/containers/private_containers.png") { //grey cc green
	template_container_4(1, 160)
}


//g

spriteset(spriteset_conts_private_general_g_4, "gfx/containers/private_containers.png") { //lt blue
	template_container_4(1, 192)
}




//h

spriteset(spriteset_conts_private_general_h_4, "gfx/containers/private_containers.png") { //pink
	template_container_4(1, 224)
}


//i

spriteset(spriteset_conts_private_general_i_4, "gfx/containers/private_containers.png") { //reed blue
	template_container_4(1, 256)
}



//j

spriteset(spriteset_conts_private_general_j_4, "gfx/containers/private_containers.png") { //pink green
	template_container_4(1, 288)
}



//k

spriteset(spriteset_conts_private_general_k_4, "gfx/containers/private_containers.png") { //cc green
	template_container_4(1, 320)
}




//private reefer conts, new type
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_reefer_a_4, "gfx/containers/private_reefers.png") { //yanmar
	template_container_4(1, 1)
}


//b

spriteset(spriteset_conts_private_reefer_b_4, "gfx/containers/private_reefers.png") { //other
	template_container_4(1, 32)
}

//c

spriteset(spriteset_conts_private_reefer_c_4, "gfx/containers/private_reefers.png") { //other
	template_container_4(1, 64)
}


//d

spriteset(spriteset_conts_private_reefer_d_4, "gfx/containers/private_reefers.png") { //jot cool
	template_container_4(1, 96)
}

//e

spriteset(spriteset_conts_private_reefer_e_4, "gfx/containers/private_reefers.png") { //jot cool
	template_container_4(1, 128)
}



//f

spriteset(spriteset_conts_private_reefer_f_4, "gfx/containers/private_reefers.png") { //jfc
	template_container_4(1, 160)
}


//g

spriteset(spriteset_conts_private_reefer_g_4, "gfx/containers/private_reefers.png") { //jot green
	template_container_4(1, 192)
}




//h

spriteset(spriteset_conts_private_reefer_h_4, "gfx/containers/private_reefers.png") { //jot red
	template_container_4(1, 224)
}


//i

spriteset(spriteset_conts_private_reefer_i_4, "gfx/containers/private_reefers.png") { //jot blue
	template_container_4(1, 256)
}



//j

spriteset(spriteset_conts_private_reefer_j_4, "gfx/containers/private_reefers.png") { //jot new
	template_container_4(1, 288)
}



//k

spriteset(spriteset_conts_private_reefer_k_4, "gfx/containers/private_reefers.png") { //orange
	template_container_4(1, 320)
}




//private tanker conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_tanker_a_4, "gfx/containers/private_tankers.png") { //grey frameless
	template_container_4(1, 1)
}


//b

spriteset(spriteset_conts_private_tanker_b_4, "gfx/containers/private_tankers.png") { //black frameless
	template_container_4(1, 32)
}

//c

spriteset(spriteset_conts_private_tanker_c_4, "gfx/containers/private_tankers.png") { //silver frameless
	template_container_4(1, 64)
}


//d

spriteset(spriteset_conts_private_tanker_d_4, "gfx/containers/private_tankers.png") { //blue frame
	template_container_4(1, 96)
}

//e

spriteset(spriteset_conts_private_tanker_e_4, "gfx/containers/private_tankers.png") { //yellow frame
	template_container_4(1, 128)
}



//f

spriteset(spriteset_conts_private_tanker_f_4, "gfx/containers/private_tankers.png") { //green frame
	template_container_4(1, 160)
}


//g

spriteset(spriteset_conts_private_tanker_g_4, "gfx/containers/private_tankers.png") { //cream 
	template_container_4(1, 192)
}




//h

spriteset(spriteset_conts_private_tanker_h_4, "gfx/containers/private_tankers.png") { //blue white
	template_container_4(1, 224)
}


//i

spriteset(spriteset_conts_private_tanker_i_4, "gfx/containers/private_tankers.png") { //green white
	template_container_4(1, 256)
}



//j

spriteset(spriteset_conts_private_tanker_j_4, "gfx/containers/private_tankers.png") { //cc green
	template_container_4(1, 288)
}



//k

spriteset(spriteset_conts_private_tanker_k_4, "gfx/containers/private_tankers.png") { //cc blue
	template_container_4(1, 320)
}




//private bulk conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_bulk_a_4, "gfx/containers/private_bulktainers.png") { //hopper grey
	template_container_4(1, 1)
}


//b

spriteset(spriteset_conts_private_bulk_b_4, "gfx/containers/private_bulktainers.png") { //hopper white
	template_container_4(1, 32)
}

//c

spriteset(spriteset_conts_private_bulk_c_4, "gfx/containers/private_bulktainers.png") { //hopper clay
	template_container_4(1, 64)
}


//d

spriteset(spriteset_conts_private_bulk_d_4, "gfx/containers/private_bulktainers.png") { //hopper mcl
	template_container_4(1, 96)
}

//e

spriteset(spriteset_conts_private_bulk_e_4, "gfx/containers/private_bulktainers.png") { //hopper blue
	template_container_4(1, 128)
}



//f

spriteset(spriteset_conts_private_bulk_f_4, "gfx/containers/private_bulktainers.png") { //white short
	template_container_4(1, 160)
}


//g

spriteset(spriteset_conts_private_bulk_g_4, "gfx/containers/private_bulktainers.png") { //white tall
	template_container_4(1, 192)
}




//h

spriteset(spriteset_conts_private_bulk_h_4, "gfx/containers/private_bulktainers.png") { //white short
	template_container_4(1, 224)
}


//i

spriteset(spriteset_conts_private_bulk_i_4, "gfx/containers/private_bulktainers.png") { //white tall
	template_container_4(1, 256)
}



//j

spriteset(spriteset_conts_private_bulk_j_4, "gfx/containers/private_bulktainers.png") { //green short
	template_container_4(1, 288)
}

alternative_sprites(spriteset_conts_private_bulk_j_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/private_bulktainers_32.png") {
	template_container_4(1, 288)
}

//k

spriteset(spriteset_conts_private_bulk_k_4, "gfx/containers/private_bulktainers.png") { //green tall
	template_container_4(1, 320)
}

alternative_sprites(spriteset_conts_private_bulk_k_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/private_bulktainers_32.png") {
	template_container_4(1, 320)
}



//private open conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_open_a_4, "gfx/containers/private_opentainers.png") { //hopper grey
	template_container_4(1, 1)
}


//b

spriteset(spriteset_conts_private_open_b_4, "gfx/containers/private_opentainers.png") { //hopper white
	template_container_4(1, 32)
}

//c

spriteset(spriteset_conts_private_open_c_4, "gfx/containers/private_opentainers.png") { //hopper clay
	template_container_4(1, 64)
}


//d

spriteset(spriteset_conts_private_open_d_4, "gfx/containers/private_opentainers.png") { //hopper mcl
	template_container_4(1, 96)
}

//e

spriteset(spriteset_conts_private_open_e_4, "gfx/containers/private_opentainers.png") { //hopper blue
	template_container_4(1, 128)
}



//f

spriteset(spriteset_conts_private_open_f_4, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_4(1, 160)
}


//g

spriteset(spriteset_conts_private_open_g_4, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_4(1, 192)
}




//h

spriteset(spriteset_conts_private_open_h_4, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_4(1, 224)
}


//i

spriteset(spriteset_conts_private_open_i_4, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_4(1, 256)
}



//j

spriteset(spriteset_conts_private_open_j_4, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_4(1, 288)
}



//k

spriteset(spriteset_conts_private_open_k_4, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_4(1, 320)
}




//randoms for variation

//general conts

//60s era JNR green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_4_general_y1960) {
	7: spriteset_conts_jnr_green_a_4;
    6: spriteset_conts_jnr_green_b_4;
	8: spriteset_conts_jnr_green_c_4;
	7: spriteset_conts_jnr_green_d_4;
}

//70s era JNR green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_4_general_y1970) {
	7: spriteset_conts_jnr_green_a_4;
    5: spriteset_conts_jnr_green_b_4;
	3: spriteset_conts_jnr_green_c_4;
	5: spriteset_conts_jnr_green_d_4;
	19: spriteset_conts_jnr_green_f_4;
	6: spriteset_conts_jnr_green_g_4;
}
//80s era mixed blue/green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_4_general_y1980) {
	9: spriteset_conts_jnr_green_c_4;
	2: spriteset_conts_jnr_green_d_4;
    5: spriteset_conts_jnr_green_e_4;
	12: spriteset_conts_jnr_green_f_4;
	4: spriteset_conts_jnr_green_g_4;
}
//late 80s mixed blue green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_blue_4_general_y1985) {
	2: spriteset_conts_jrf_blue_a_4;
    4: spriteset_conts_jrf_blue_b_4;
	5: spriteset_conts_jrf_blue_c_4;
	7: spriteset_conts_jrf_blue_d_4;
	4: spriteset_conts_jrf_blue_e_4;
	5: spriteset_conts_jnr_green_c_4;
	2: spriteset_conts_jnr_green_d_4;
    1: spriteset_conts_jnr_green_e_4;
	6: spriteset_conts_jnr_green_f_4;
	12: spriteset_conts_jnr_green_g_4;
}
//90s blue jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_blue_4_general_y1990) {
	4: spriteset_conts_jrf_blue_a_4;
    6: spriteset_conts_jrf_blue_b_4;
	4: spriteset_conts_jrf_blue_c_4;
	2: spriteset_conts_jrf_blue_d_4;
	5: spriteset_conts_jrf_blue_h_4;
    3: spriteset_conts_jrf_blue_i_4;
	9: spriteset_conts_jrf_blue_j_4;
    4: spriteset_conts_jnr_green_e_4;
	7: spriteset_conts_jnr_green_f_4;
	8: spriteset_conts_jnr_green_g_4;
}
//90s mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_blue_4_general_y1995) {
	9: spriteset_conts_jrf_red_b_4;
    6: spriteset_conts_jrf_blue_b_4;
	3: spriteset_conts_jrf_blue_c_4;
	1: spriteset_conts_jrf_blue_d_4;
	4: spriteset_conts_jrf_blue_e_4;
	4: spriteset_conts_jrf_blue_g_4;
	4: spriteset_conts_jrf_blue_h_4;
    7: spriteset_conts_jrf_blue_i_4;
	7: spriteset_conts_jrf_blue_j_4;
    6: spriteset_conts_jnr_green_e_4;
	8: spriteset_conts_jnr_green_f_4;
	2: spriteset_conts_jnr_green_g_4;
}
//00s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_4_general_y2000) {
	3: spriteset_conts_jrf_red_b_4;
	2: spriteset_conts_jrf_red_c_4;
	7: spriteset_conts_jrf_red_d_4;
	4: spriteset_conts_jrf_red_e_4;
    7: spriteset_conts_jrf_blue_b_4;
	9: spriteset_conts_jrf_blue_c_4;
	7: spriteset_conts_jrf_blue_d_4;
	7: spriteset_conts_jrf_blue_e_4;
	7: spriteset_conts_jrf_blue_g_4;
	2: spriteset_conts_jrf_blue_h_4;
    2: spriteset_conts_jrf_blue_i_4;
	5: spriteset_conts_jrf_blue_j_4;

}

//10s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_4_general_y2005) {
	8: spriteset_conts_jrf_red_a_4;
	4: spriteset_conts_jrf_red_b_4;
	5: spriteset_conts_jrf_red_c_4;
	8: spriteset_conts_jrf_red_d_4;
	2: spriteset_conts_jrf_red_e_4;
	2: spriteset_conts_jrf_red_f_4;
	5: spriteset_conts_jrf_red_h_4;
	3: spriteset_conts_jrf_blue_g_4;
	9: spriteset_conts_jrf_blue_h_4;
    8: spriteset_conts_jrf_blue_i_4;
	2: spriteset_conts_jrf_blue_j_4;

}

//20s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_4_general_y2015) {
	16: spriteset_conts_jrf_red_a_4;
	8: spriteset_conts_jrf_red_b_4;
	16: spriteset_conts_jrf_red_c_4;
	1: spriteset_conts_jrf_red_d_4;
	8: spriteset_conts_jrf_red_e_4;
	2: spriteset_conts_jrf_red_f_4;
	1: spriteset_conts_jrf_red_h_4;
	4: spriteset_conts_jrf_red_i_4;
	4: spriteset_conts_jrf_red_j_4;

}


//food conts


//jnr reefer old style

random_switch(FEAT_TRAINS, SELF, random_conts_4_reefer_y1960) {
	8: spriteset_conts_jnr_reefer_a_4;
    1: spriteset_conts_jnr_reefer_b_4;
	4: spriteset_conts_jnr_green_c_4;
	1: spriteset_conts_jnr_green_d_4;
}

//jnr era private reefer

random_switch(FEAT_TRAINS, SELF, random_conts_4_reefer_y1970) {
	8: spriteset_conts_jnr_reefer_a_4;
	7: spriteset_conts_jnr_reefer_b_4;
	7: spriteset_conts_jnr_reefer_c_4;
	2: spriteset_conts_jnr_reefer_d_4;
	1: spriteset_conts_jnr_reefer_e_4;
	6: spriteset_conts_jnr_green_d_4;
	7: spriteset_conts_jnr_green_f_4;
	5: spriteset_conts_jnr_green_g_4;
}


//jnr reefer newer style

random_switch(FEAT_TRAINS, SELF, random_conts_4_reefer_y1980) {
	2: spriteset_conts_jnr_reefer_b_4;
    5: spriteset_conts_jnr_reefer_c_4;
	3: spriteset_conts_jnr_reefer_d_4;
	5: spriteset_conts_jnr_reefer_e_4;
	6: spriteset_conts_jnr_reefer_f_4;
	8: spriteset_conts_jnr_reefer_g_4;
	2: spriteset_conts_jnr_reefer_h_4;
	4: spriteset_conts_jnr_reefer_i_4;
	1: spriteset_conts_jnr_reefer_j_4;
	6: spriteset_conts_jnr_reefer_k_4;
	9: spriteset_conts_jnr_green_d_4;
    4: spriteset_conts_jnr_green_e_4;
	3: spriteset_conts_jnr_green_f_4;
	6: spriteset_conts_jnr_green_g_4;
    1: spriteset_conts_jrf_blue_b_4;
}

//private reefers jnr mixed

random_switch(FEAT_TRAINS, SELF, random_conts_4_reefer_y1990) {
	6: spriteset_conts_jnr_reefer_f_4;
	6: spriteset_conts_jnr_reefer_g_4;
	7: spriteset_conts_jnr_reefer_h_4;
	6: spriteset_conts_jnr_reefer_i_4;
	8: spriteset_conts_jnr_reefer_j_4;
	9: spriteset_conts_jnr_reefer_k_4;
	9: spriteset_conts_private_reefer_a_4;
    2: spriteset_conts_private_reefer_b_4;
	2: spriteset_conts_private_reefer_c_4;
	4: spriteset_conts_private_reefer_f_4;
	2: spriteset_conts_private_reefer_g_4;
	9: spriteset_conts_jnr_green_f_4;
	8: spriteset_conts_jnr_green_g_4;
    8: spriteset_conts_jrf_blue_b_4;
	8: spriteset_conts_jrf_blue_h_4;
    9: spriteset_conts_jrf_blue_i_4;

}

//private reefers only
random_switch(FEAT_TRAINS, SELF, random_conts_4_reefer_y2000) {
	7: spriteset_conts_jnr_reefer_f_4;
	7: spriteset_conts_jnr_reefer_g_4;
	1: spriteset_conts_jnr_reefer_j_4;
	9: spriteset_conts_jnr_reefer_k_4;
	8: spriteset_conts_private_reefer_a_4;
    2: spriteset_conts_private_reefer_b_4;
	2: spriteset_conts_private_reefer_c_4;
	7: spriteset_conts_private_reefer_d_4;
	8: spriteset_conts_private_reefer_e_4;
	8: spriteset_conts_private_reefer_f_4;
	3: spriteset_conts_private_reefer_g_4;
	4: spriteset_conts_private_reefer_h_4;
	6: spriteset_conts_private_reefer_i_4;
	7: spriteset_conts_private_reefer_j_4;
	5: spriteset_conts_jrf_red_b_4;
	4: spriteset_conts_jrf_red_c_4;
	2: spriteset_conts_jrf_red_d_4;
	9: spriteset_conts_jrf_blue_h_4;
    9: spriteset_conts_jrf_blue_i_4;
}


//private reefers modern
random_switch(FEAT_TRAINS, SELF, random_conts_4_reefer_y2010) {
	2: spriteset_conts_private_reefer_a_4;
    8: spriteset_conts_private_reefer_b_4;
	6: spriteset_conts_private_reefer_c_4;
	3: spriteset_conts_private_reefer_d_4;
    4: spriteset_conts_private_reefer_e_4;
	8: spriteset_conts_private_reefer_f_4;
    9: spriteset_conts_private_reefer_g_4;
	6: spriteset_conts_private_reefer_h_4;
	9: spriteset_conts_private_reefer_i_4;
	7: spriteset_conts_private_reefer_j_4;
	8: spriteset_conts_private_reefer_k_4;
	8: spriteset_conts_jrf_red_b_4;
	5: spriteset_conts_jrf_red_c_4;
	1: spriteset_conts_jrf_red_d_4;
	8: spriteset_conts_jrf_red_e_4;
	7: spriteset_conts_jrf_red_f_4;
}



//liquid conts


random_switch(FEAT_TRAINS, SELF, random_conts_4_liquid_y1960) {
	19: spriteset_conts_jnr_green_j_4;
    19: spriteset_conts_jnr_green_k_4;
	6: spriteset_conts_jnr_green_a_4;
    5: spriteset_conts_jnr_green_b_4;
	3: spriteset_conts_jnr_green_c_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_liquid_y1970) {
	1: spriteset_conts_jnr_green_j_4;
    4: spriteset_conts_jnr_green_k_4;
	7: spriteset_conts_private_tanker_a_4;
	8: spriteset_conts_private_tanker_b_4;
	5: spriteset_conts_private_tanker_c_4;
	7: spriteset_conts_private_tanker_g_4;
	6: spriteset_conts_private_tanker_h_4;
	4: spriteset_conts_jnr_green_d_4;
	8: spriteset_conts_jnr_green_f_4;
	4: spriteset_conts_jnr_green_g_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_liquid_y1980) {
	9: spriteset_conts_jnr_green_j_4;
    8: spriteset_conts_jnr_green_k_4;
	9: spriteset_conts_private_tanker_a_4;
	1: spriteset_conts_private_tanker_b_4;
	2: spriteset_conts_private_tanker_c_4;
	9: spriteset_conts_private_tanker_d_4;
	1: spriteset_conts_private_tanker_g_4;
	6: spriteset_conts_private_tanker_h_4;
	8: spriteset_conts_private_tanker_i_4;
    3: spriteset_conts_jnr_green_e_4;
	2: spriteset_conts_jnr_green_f_4;
	9: spriteset_conts_jnr_green_g_4;
    1: spriteset_conts_jrf_blue_b_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_liquid_y1990) {
	3: spriteset_conts_private_tanker_a_4;
	5: spriteset_conts_private_tanker_b_4;
	8: spriteset_conts_private_tanker_c_4;
	4: spriteset_conts_private_tanker_d_4;
	1: spriteset_conts_private_tanker_f_4;
	5: spriteset_conts_private_tanker_g_4;
	6: spriteset_conts_private_tanker_h_4;
	3: spriteset_conts_private_tanker_i_4;
	5: spriteset_conts_private_tanker_j_4;
	2: spriteset_conts_jnr_green_e_4;
	8: spriteset_conts_jnr_green_g_4;
    7: spriteset_conts_jrf_blue_b_4;
	7: spriteset_conts_jrf_blue_h_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_liquid_y2000) {
	5: spriteset_conts_private_tanker_a_4;
	9: spriteset_conts_private_tanker_b_4;
	6: spriteset_conts_private_tanker_c_4;
	7: spriteset_conts_private_tanker_d_4;
	9: spriteset_conts_private_tanker_e_4;
	2: spriteset_conts_private_tanker_f_4;
	1: spriteset_conts_private_tanker_g_4;
	9: spriteset_conts_private_tanker_h_4;
	2: spriteset_conts_private_tanker_i_4;
	8: spriteset_conts_private_tanker_j_4;
	6: spriteset_conts_private_tanker_k_4;
	2: spriteset_conts_jrf_red_b_4;
	1: spriteset_conts_jrf_red_c_4;
	2: spriteset_conts_jrf_blue_h_4;
    1: spriteset_conts_jrf_blue_i_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_liquid_y2010) {
	1: spriteset_conts_private_tanker_a_4;
	4: spriteset_conts_private_tanker_c_4;
	2: spriteset_conts_private_tanker_d_4;
	8: spriteset_conts_private_tanker_e_4;
	6: spriteset_conts_private_tanker_f_4;
	4: spriteset_conts_private_tanker_g_4;
	3: spriteset_conts_private_tanker_h_4;
	8: spriteset_conts_private_tanker_i_4;
	3: spriteset_conts_private_tanker_j_4;
	7: spriteset_conts_private_tanker_k_4;
	8: spriteset_conts_jrf_red_b_4;
	8: spriteset_conts_jrf_red_c_4;
	5: spriteset_conts_jrf_red_e_4;
	5: spriteset_conts_jrf_red_f_4;
}


//bulk conts

random_switch(FEAT_TRAINS, SELF, random_conts_4_bulk_y1960) {
    15: spriteset_conts_jnr_green_i_4;
	7: spriteset_conts_jnr_green_c_4;
	7: spriteset_conts_jnr_green_d_4;
}


random_switch(FEAT_TRAINS, SELF, random_conts_4_bulk_y1970) {
    5: spriteset_conts_jnr_green_i_4;
	6: spriteset_conts_private_bulk_a_4;
    6: spriteset_conts_private_bulk_b_4;
	3: spriteset_conts_jnr_green_d_4;
	5: spriteset_conts_jnr_green_f_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_bulk_y1980) {
    8: spriteset_conts_jnr_green_i_4;
	1: spriteset_conts_private_bulk_a_4;
    1: spriteset_conts_private_bulk_b_4;
	5: spriteset_conts_private_bulk_d_4;
	6: spriteset_conts_private_bulk_e_4;
	5: spriteset_conts_jnr_green_e_4;
	2: spriteset_conts_jnr_green_f_4;
	4: spriteset_conts_jnr_green_g_4;
    8: spriteset_conts_jrf_blue_b_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_bulk_y1990) {
	9: spriteset_conts_private_bulk_a_4;
    2: spriteset_conts_private_bulk_b_4;
	3: spriteset_conts_private_bulk_c_4;
	4: spriteset_conts_private_bulk_d_4;
	1: spriteset_conts_private_bulk_e_4;
	6: spriteset_conts_jnr_green_f_4;
	7: spriteset_conts_jnr_green_g_4;
    7: spriteset_conts_jrf_blue_b_4;
	8: spriteset_conts_jrf_blue_h_4;
    9: spriteset_conts_jrf_blue_i_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_bulk_y2000) {
	3: spriteset_conts_private_bulk_a_4;
    3: spriteset_conts_private_bulk_b_4;
	2: spriteset_conts_private_bulk_c_4;
	4: spriteset_conts_private_bulk_d_4;
	6: spriteset_conts_jrf_red_b_4;
	3: spriteset_conts_jrf_red_c_4;
	4: spriteset_conts_jrf_blue_h_4;
    1: spriteset_conts_jrf_blue_i_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_bulk_y2010) {
	1: spriteset_conts_private_bulk_a_4;
    9: spriteset_conts_private_bulk_b_4;
	9: spriteset_conts_private_bulk_c_4;
	3: spriteset_conts_private_bulk_d_4;
	6: spriteset_conts_jrf_red_b_4;
	9: spriteset_conts_jrf_red_c_4;
	2: spriteset_conts_jrf_red_f_4;
}


//lidded conts

random_switch(FEAT_TRAINS, SELF, random_conts_4_lidded_y1980) {
	7: spriteset_conts_private_bulk_f_4;
	7: spriteset_conts_private_bulk_j_4;
	9: spriteset_conts_private_bulk_k_4;
	1: spriteset_conts_jnr_green_f_4;
	7: spriteset_conts_jnr_green_g_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_lidded_y1990) {
	8: spriteset_conts_private_bulk_f_4;
    5: spriteset_conts_private_bulk_g_4;
	1: spriteset_conts_private_bulk_h_4;
	6: spriteset_conts_private_bulk_j_4;
	6: spriteset_conts_private_bulk_k_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_lidded_y2000) {
	5: spriteset_conts_private_bulk_f_4;
    9: spriteset_conts_private_bulk_g_4;
	7: spriteset_conts_private_bulk_h_4;
	2: spriteset_conts_private_bulk_i_4;
	3: spriteset_conts_private_bulk_k_4;
}


//mixed conts pre-private

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_y1960) {
	9: spriteset_conts_jnr_green_a_4;
    8: spriteset_conts_jnr_green_b_4;
	2: spriteset_conts_jnr_green_c_4;
	5: spriteset_conts_jnr_green_d_4;
	2: spriteset_conts_jnr_green_h_4;
	8: spriteset_conts_jnr_green_i_4;
	7: spriteset_conts_jnr_reefer_a_4;
}

//mixed private

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_private_y1970) {
	5: spriteset_conts_private_general_d_4;
	8: spriteset_conts_private_general_e_4;
	6: spriteset_conts_private_general_f_4;
	5: spriteset_conts_private_general_h_4;
	8: spriteset_conts_private_general_j_4;
	5: spriteset_conts_private_general_k_4;
	7: spriteset_conts_jnr_reefer_f_4;
	8: spriteset_conts_jnr_reefer_g_4;
	9: spriteset_conts_jnr_reefer_h_4;
	5: spriteset_conts_jnr_reefer_j_4;
	7: spriteset_conts_jnr_green_d_4;
	7: spriteset_conts_jnr_green_f_4;
	3: spriteset_conts_jnr_green_g_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_private_y1980) {
	5: spriteset_conts_private_general_d_4;
	3: spriteset_conts_private_general_e_4;
	2: spriteset_conts_private_general_f_4;
	9: spriteset_conts_private_general_h_4;
	3: spriteset_conts_private_general_j_4;
	4: spriteset_conts_private_general_k_4;
	2: spriteset_conts_jnr_reefer_f_4;
	2: spriteset_conts_jnr_reefer_g_4;
	2: spriteset_conts_jnr_reefer_h_4;
	3: spriteset_conts_jnr_reefer_i_4;
	9: spriteset_conts_jnr_reefer_j_4;
	7: spriteset_conts_jnr_green_d_4;
    6: spriteset_conts_jnr_green_e_4;
	4: spriteset_conts_jnr_green_f_4;
	4: spriteset_conts_jnr_green_g_4;
    9: spriteset_conts_jrf_blue_b_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_private_y1990) {
	2: spriteset_conts_private_general_b_4;
	5: spriteset_conts_private_general_d_4;
	8: spriteset_conts_private_general_e_4;
	6: spriteset_conts_private_general_h_4;
	8: spriteset_conts_private_general_i_4;
	9: spriteset_conts_private_general_j_4;
	1: spriteset_conts_private_general_k_4;
	6: spriteset_conts_jnr_reefer_f_4;
	5: spriteset_conts_jnr_reefer_g_4;
	7: spriteset_conts_jnr_reefer_h_4;
	7: spriteset_conts_jnr_reefer_i_4;
	6: spriteset_conts_jnr_reefer_j_4;
	8: spriteset_conts_private_reefer_f_4;
	6: spriteset_conts_private_reefer_g_4;
	5: spriteset_conts_jnr_green_f_4;
	6: spriteset_conts_jnr_green_g_4;
    3: spriteset_conts_jrf_blue_b_4;
	8: spriteset_conts_jrf_blue_h_4;
    3: spriteset_conts_jrf_blue_i_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_private_y2000) {
	9: spriteset_conts_private_general_b_4;
	3: spriteset_conts_private_general_c_4;
	9: spriteset_conts_private_general_d_4;
	2: spriteset_conts_private_general_e_4;
	9: spriteset_conts_private_general_g_4;
	3: spriteset_conts_private_general_h_4;
	5: spriteset_conts_private_general_i_4;
	5: spriteset_conts_private_general_k_4;
	8: spriteset_conts_private_reefer_f_4;
	2: spriteset_conts_private_reefer_g_4;
	2: spriteset_conts_private_reefer_h_4;
	2: spriteset_conts_private_reefer_i_4;
	8: spriteset_conts_jnr_reefer_f_4;
	3: spriteset_conts_jrf_red_g_4;
	3: spriteset_conts_jrf_red_b_4;
	5: spriteset_conts_jrf_red_c_4;
	2: spriteset_conts_jrf_red_d_4;
	1: spriteset_conts_jrf_blue_h_4;
    4: spriteset_conts_jrf_blue_i_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_private_y2010) {
	9: spriteset_conts_private_general_a_4;
	9: spriteset_conts_private_general_b_4;
	5: spriteset_conts_private_general_c_4;
	5: spriteset_conts_private_general_d_4;
	9: spriteset_conts_private_general_e_4;
	4: spriteset_conts_private_general_g_4;
	2: spriteset_conts_private_general_h_4;
	1: spriteset_conts_private_general_i_4;
	6: spriteset_conts_private_reefer_f_4;
	8: spriteset_conts_private_reefer_g_4;
	4: spriteset_conts_private_reefer_h_4;
	8: spriteset_conts_private_reefer_i_4;
	2: spriteset_conts_jrf_red_g_4;
	3: spriteset_conts_jrf_red_b_4;
	3: spriteset_conts_jrf_red_c_4;
	4: spriteset_conts_jrf_red_d_4;
	6: spriteset_conts_jrf_red_e_4;
	7: spriteset_conts_jrf_red_f_4;
}


//mixed food


random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_food_y1960) {
	7: spriteset_conts_jnr_reefer_a_4;
    6: spriteset_conts_jnr_reefer_b_4;
	3: spriteset_conts_jnr_green_c_4;
	8: spriteset_conts_jnr_green_d_4;
	4: spriteset_conts_jnr_green_h_4;
	1: spriteset_conts_jnr_green_j_4;
	7: spriteset_conts_jnr_green_k_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_food_y1970) {
	3: spriteset_conts_jnr_reefer_a_4;
	4: spriteset_conts_jnr_reefer_b_4;
	4: spriteset_conts_jnr_reefer_c_4;
	4: spriteset_conts_jnr_reefer_d_4;
	3: spriteset_conts_jnr_reefer_e_4;
	5: spriteset_conts_jnr_green_j_4;
	5: spriteset_conts_jnr_green_k_4;
	4: spriteset_conts_private_tanker_a_4;
	3: spriteset_conts_private_tanker_b_4;
	3: spriteset_conts_private_tanker_c_4;
	3: spriteset_conts_jnr_green_d_4;
	3: spriteset_conts_jnr_green_f_4;
	5: spriteset_conts_jnr_green_g_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_food_y1980) {
	7: spriteset_conts_jnr_reefer_c_4;
	7: spriteset_conts_jnr_reefer_d_4;
	9: spriteset_conts_jnr_reefer_e_4;
	3: spriteset_conts_jnr_reefer_f_4;
	7: spriteset_conts_jnr_reefer_g_4;
	9: spriteset_conts_jnr_reefer_h_4;
	8: spriteset_conts_jnr_green_j_4;
	2: spriteset_conts_jnr_green_k_4;
	9: spriteset_conts_private_tanker_a_4;
	2: spriteset_conts_private_tanker_b_4;
	7: spriteset_conts_private_tanker_c_4;
	2: spriteset_conts_private_tanker_g_4;
	4: spriteset_conts_private_tanker_h_4;
	8: spriteset_conts_private_tanker_i_4;
	8: spriteset_conts_jnr_green_d_4;
    9: spriteset_conts_jnr_green_e_4;
	1: spriteset_conts_jnr_green_f_4;
	7: spriteset_conts_jnr_green_g_4;
    8: spriteset_conts_jrf_blue_b_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_food_y1990) {
	7: spriteset_conts_jnr_reefer_g_4;
	7: spriteset_conts_jnr_reefer_h_4;
	6: spriteset_conts_jnr_reefer_i_4;
	2: spriteset_conts_jnr_reefer_j_4;
	4: spriteset_conts_jnr_reefer_k_4;
	8: spriteset_conts_jnr_green_j_4;
	2: spriteset_conts_jnr_green_k_4;
	7: spriteset_conts_private_tanker_a_4;
	7: spriteset_conts_private_tanker_b_4;
	6: spriteset_conts_private_tanker_c_4;
	7: spriteset_conts_private_tanker_g_4;
	3: spriteset_conts_private_tanker_h_4;
	2: spriteset_conts_private_tanker_i_4;
	6: spriteset_conts_jnr_green_f_4;
	7: spriteset_conts_jnr_green_g_4;
    4: spriteset_conts_jrf_blue_b_4;
	9: spriteset_conts_jrf_blue_h_4;
    7: spriteset_conts_jrf_blue_i_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_food_y2000) {
	9: spriteset_conts_jnr_reefer_i_4;
	1: spriteset_conts_jnr_reefer_j_4;
	4: spriteset_conts_jnr_reefer_k_4;
	7: spriteset_conts_private_reefer_a_4;
    2: spriteset_conts_private_reefer_b_4;
	1: spriteset_conts_private_reefer_c_4;
	4: spriteset_conts_private_reefer_f_4;
	6: spriteset_conts_private_reefer_g_4;
	2: spriteset_conts_jnr_green_k_4;
	8: spriteset_conts_private_tanker_d_4;
	2: spriteset_conts_private_tanker_f_4;
	9: spriteset_conts_private_tanker_g_4;
	6: spriteset_conts_private_tanker_h_4;
	1: spriteset_conts_private_tanker_i_4;
	4: spriteset_conts_private_tanker_j_4;
	2: spriteset_conts_jrf_red_b_4;
	9: spriteset_conts_jrf_red_c_4;
	1: spriteset_conts_jrf_red_d_4;
	3: spriteset_conts_jrf_blue_h_4;
    5: spriteset_conts_jrf_blue_i_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_food_y2010) {
	2: spriteset_conts_private_reefer_a_4;
    9: spriteset_conts_private_reefer_b_4;
	9: spriteset_conts_private_reefer_c_4;
	3: spriteset_conts_private_reefer_f_4;
	1: spriteset_conts_private_reefer_g_4;
	1: spriteset_conts_private_reefer_h_4;
	8: spriteset_conts_private_reefer_i_4;
	2: spriteset_conts_private_reefer_j_4;
	6: spriteset_conts_private_reefer_k_4;
	9: spriteset_conts_jnr_green_k_4;
	4: spriteset_conts_private_tanker_d_4;
	5: spriteset_conts_private_tanker_f_4;
	7: spriteset_conts_private_tanker_h_4;
	9: spriteset_conts_private_tanker_i_4;
	9: spriteset_conts_private_tanker_j_4;
	4: spriteset_conts_private_tanker_k_4;
	1: spriteset_conts_jrf_red_b_4;
	2: spriteset_conts_jrf_red_c_4;
	3: spriteset_conts_jrf_red_d_4;
	2: spriteset_conts_jrf_red_e_4;
	6: spriteset_conts_jrf_red_f_4;
}


//mixed liquid

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_liquid_y1960) {
	6: spriteset_conts_private_open_f_4;
	6: spriteset_conts_private_open_h_4;
	2: spriteset_conts_jnr_green_c_4;
	1: spriteset_conts_jnr_green_d_4;
	4: spriteset_conts_jnr_green_h_4;
	9: spriteset_conts_jnr_green_j_4;
	6: spriteset_conts_jnr_green_k_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_liquid_y1970) {
	3: spriteset_conts_private_general_e_4;
	9: spriteset_conts_private_general_f_4;
	7: spriteset_conts_private_general_h_4;
	8: spriteset_conts_private_general_j_4;
	9: spriteset_conts_private_general_k_4;
    8: spriteset_conts_private_open_g_4;
	2: spriteset_conts_private_open_h_4;
	6: spriteset_conts_private_tanker_a_4;
	9: spriteset_conts_private_tanker_b_4;
	2: spriteset_conts_private_tanker_c_4;
	9: spriteset_conts_private_tanker_g_4;
	8: spriteset_conts_jnr_green_d_4;
	6: spriteset_conts_jnr_green_f_4;
	6: spriteset_conts_jnr_green_g_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_liquid_y1980) {
	9: spriteset_conts_private_general_d_4;
	5: spriteset_conts_private_general_e_4;
	2: spriteset_conts_private_general_f_4;
	7: spriteset_conts_private_general_h_4;
	8: spriteset_conts_private_general_j_4;
	1: spriteset_conts_private_general_k_4;
    3: spriteset_conts_private_open_h_4;
	2: spriteset_conts_private_open_i_4;
	1: spriteset_conts_private_tanker_a_4;
	5: spriteset_conts_private_tanker_b_4;
	2: spriteset_conts_private_tanker_c_4;
	6: spriteset_conts_private_tanker_g_4;
	1: spriteset_conts_private_tanker_h_4;
	8: spriteset_conts_private_tanker_i_4;
	2: spriteset_conts_jnr_green_d_4;
    9: spriteset_conts_jnr_green_e_4;
	4: spriteset_conts_jnr_green_f_4;
	3: spriteset_conts_jnr_green_g_4;
    1: spriteset_conts_jrf_blue_b_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_liquid_y1990) {
	4: spriteset_conts_private_general_d_4;
	3: spriteset_conts_private_general_f_4;
	4: spriteset_conts_private_general_h_4;
	9: spriteset_conts_private_general_j_4;
	2: spriteset_conts_private_general_k_4;
    8: spriteset_conts_private_open_i_4;
	6: spriteset_conts_private_open_a_4;
	1: spriteset_conts_jnr_green_j_4;
	5: spriteset_conts_private_tanker_a_4;
	2: spriteset_conts_private_tanker_b_4;
	8: spriteset_conts_private_tanker_c_4;
	4: spriteset_conts_private_tanker_g_4;
	3: spriteset_conts_private_tanker_h_4;
	2: spriteset_conts_private_tanker_i_4;
	5: spriteset_conts_private_tanker_j_4;
	5: spriteset_conts_jnr_green_f_4;
	8: spriteset_conts_jnr_green_g_4;
    4: spriteset_conts_jrf_blue_b_4;
	3: spriteset_conts_jrf_blue_h_4;
    3: spriteset_conts_jrf_blue_i_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_liquid_y2000) {
	6: spriteset_conts_private_general_d_4;
	5: spriteset_conts_private_general_f_4;
	7: spriteset_conts_private_general_g_4;
	8: spriteset_conts_private_general_h_4;
    5: spriteset_conts_private_open_a_4;
	5: spriteset_conts_private_open_b_4;
	6: spriteset_conts_jnr_green_j_4;
	5: spriteset_conts_private_tanker_d_4;
	2: spriteset_conts_private_tanker_e_4;
	2: spriteset_conts_private_tanker_f_4;
	2: spriteset_conts_private_tanker_g_4;
	7: spriteset_conts_private_tanker_h_4;
	4: spriteset_conts_private_tanker_i_4;
	9: spriteset_conts_private_tanker_j_4;
	3: spriteset_conts_private_tanker_k_4;
	5: spriteset_conts_jrf_red_b_4;
	4: spriteset_conts_jrf_red_c_4;
	8: spriteset_conts_jrf_red_d_4;
	2: spriteset_conts_jrf_blue_h_4;
    6: spriteset_conts_jrf_blue_i_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_liquid_y2010) {
	4: spriteset_conts_private_general_e_4;
	9: spriteset_conts_private_general_g_4;
	9: spriteset_conts_private_general_h_4;
    1: spriteset_conts_private_open_b_4;
	5: spriteset_conts_private_open_k_4;
	1: spriteset_conts_jnr_green_j_4;
	5: spriteset_conts_private_tanker_d_4;
	6: spriteset_conts_private_tanker_e_4;
	8: spriteset_conts_private_tanker_f_4;
	4: spriteset_conts_private_tanker_g_4;
	1: spriteset_conts_private_tanker_h_4;
	7: spriteset_conts_private_tanker_i_4;
	4: spriteset_conts_private_tanker_j_4;
	2: spriteset_conts_private_tanker_k_4;
	6: spriteset_conts_jrf_red_a_4;
	3: spriteset_conts_jrf_red_b_4;
	5: spriteset_conts_jrf_red_c_4;
	3: spriteset_conts_jrf_red_d_4;
	4: spriteset_conts_jrf_red_e_4;
	2: spriteset_conts_jrf_red_f_4;
}


//mixed open

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_open_y1960) {
    9: spriteset_conts_jnr_green_b_4;
    8: spriteset_conts_jnr_green_c_4;
    3: spriteset_conts_jnr_green_d_4;
	5: spriteset_conts_private_open_f_4;
	8: spriteset_conts_private_open_h_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_open_y1970) {
    4: spriteset_conts_jnr_green_b_4;
	5: spriteset_conts_jnr_green_c_4;
	7: spriteset_conts_jnr_green_d_4;
	3: spriteset_conts_jnr_green_f_4;
	9: spriteset_conts_jnr_green_g_4;
	6: spriteset_conts_private_open_f_4;
    4: spriteset_conts_private_open_g_4;
	8: spriteset_conts_private_open_h_4;
	7: spriteset_conts_private_open_j_4;

}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_open_y1980) {
	1: spriteset_conts_jnr_green_c_4;
	4: spriteset_conts_jnr_green_d_4;
    4: spriteset_conts_jnr_green_e_4;
	1: spriteset_conts_jnr_green_f_4;
	7: spriteset_conts_jnr_green_g_4;
	1: spriteset_conts_jrf_blue_a_4;
    3: spriteset_conts_jrf_blue_b_4;
	9: spriteset_conts_jrf_blue_c_4;
	6: spriteset_conts_jrf_blue_d_4;
	5: spriteset_conts_jrf_blue_e_4;
	5: spriteset_conts_private_open_f_4;
    4: spriteset_conts_private_open_g_4;
	8: spriteset_conts_private_open_h_4;
	2: spriteset_conts_private_open_i_4;
	1: spriteset_conts_private_open_j_4;
	5: spriteset_conts_private_open_k_4;
	4: spriteset_conts_private_general_e_4;
	7: spriteset_conts_private_general_f_4;
	5: spriteset_conts_private_general_h_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_open_y1990) {
    8: spriteset_conts_jnr_green_e_4;
	1: spriteset_conts_jnr_green_f_4;
	4: spriteset_conts_jrf_blue_c_4;
	9: spriteset_conts_jrf_blue_e_4;
	9: spriteset_conts_jrf_blue_h_4;
    6: spriteset_conts_jrf_blue_i_4;
	8: spriteset_conts_jrf_blue_j_4;
    6: spriteset_conts_private_open_a_4;
	9: spriteset_conts_private_open_e_4;
	2: spriteset_conts_private_open_f_4;
    7: spriteset_conts_private_open_g_4;
	9: spriteset_conts_private_open_h_4;
	4: spriteset_conts_private_open_i_4;
	4: spriteset_conts_private_general_e_4;
	4: spriteset_conts_private_general_h_4;
	2: spriteset_conts_private_general_i_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_open_y2000) {
	6: spriteset_conts_jrf_blue_c_4;
	4: spriteset_conts_jrf_blue_g_4;
	8: spriteset_conts_jrf_blue_h_4;
    3: spriteset_conts_jrf_blue_i_4;
	3: spriteset_conts_jrf_blue_j_4;
	8: spriteset_conts_jrf_red_b_4;
	4: spriteset_conts_jrf_red_c_4;
	7: spriteset_conts_jrf_red_d_4;
	8: spriteset_conts_jrf_red_e_4;
	5: spriteset_conts_jrf_red_g_4;
    2: spriteset_conts_private_open_a_4;
	3: spriteset_conts_private_open_d_4;
	1: spriteset_conts_private_open_e_4;
	6: spriteset_conts_private_open_g_4;
	4: spriteset_conts_private_open_i_4;
	5: spriteset_conts_private_open_j_4;
	7: spriteset_conts_private_general_a_4;
	3: spriteset_conts_private_general_g_4;
	9: spriteset_conts_private_general_i_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_open_y2010) {
	6: spriteset_conts_jrf_red_a_4;
	4: spriteset_conts_jrf_red_b_4;
	2: spriteset_conts_jrf_red_c_4;
	1: spriteset_conts_jrf_red_d_4;
	4: spriteset_conts_jrf_red_e_4;
	1: spriteset_conts_jrf_red_f_4;
	5: spriteset_conts_jrf_red_g_4;
	5: spriteset_conts_jrf_red_h_4;
    8: spriteset_conts_jrf_red_i_4;
	7: spriteset_conts_jrf_red_j_4;
    2: spriteset_conts_private_open_a_4;
	4: spriteset_conts_private_open_b_4;
	6: spriteset_conts_private_open_c_4;
	5: spriteset_conts_private_open_d_4;
	3: spriteset_conts_private_open_e_4;
	9: spriteset_conts_private_open_k_4;
	6: spriteset_conts_private_general_a_4;
	9: spriteset_conts_private_general_d_4;
	9: spriteset_conts_private_general_g_4;
}



//mixed vented


random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_vented_y1960) {

	2: spriteset_conts_jnr_green_a_4;
    6: spriteset_conts_jnr_green_b_4;
	1: spriteset_conts_jnr_green_h_4;

}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_vented_y1970) {

	7: spriteset_conts_jnr_green_f_4;
    2: spriteset_conts_jnr_green_g_4;
	3: spriteset_conts_jnr_green_h_4;

}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_vented_y1980) {

	2: spriteset_conts_jnr_green_e_4;
	3: spriteset_conts_jnr_green_f_4;
    8: spriteset_conts_jnr_green_g_4;
	2: spriteset_conts_jnr_green_h_4;
	4: spriteset_conts_private_general_d_4;
	2: spriteset_conts_private_general_e_4;
	3: spriteset_conts_private_general_f_4;
	9: spriteset_conts_private_general_j_4;
	4: spriteset_conts_jrf_blue_b_4;
	1: spriteset_conts_jrf_blue_c_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_vented_y1990) {
	4: spriteset_conts_jnr_green_e_4;
	4: spriteset_conts_jnr_green_f_4;
    7: spriteset_conts_jnr_green_g_4;
	2: spriteset_conts_private_general_d_4;
	2: spriteset_conts_private_general_e_4;
	3: spriteset_conts_private_general_f_4;
	5: spriteset_conts_private_general_g_4;
	7: spriteset_conts_private_general_j_4;
	1: spriteset_conts_jrf_blue_c_4;
	6: spriteset_conts_jrf_blue_f_4;
	6: spriteset_conts_jrf_blue_h_4;
	4: spriteset_conts_jrf_blue_i_4;
	5: spriteset_conts_jrf_blue_j_4;
	2: spriteset_conts_jrf_blue_k_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_vented_y2000) {
	4: spriteset_conts_private_general_d_4;
	4: spriteset_conts_private_general_e_4;
	5: spriteset_conts_private_general_f_4;
	1: spriteset_conts_private_general_g_4;
	8: spriteset_conts_private_general_j_4;
	5: spriteset_conts_jrf_blue_b_4;
	7: spriteset_conts_jrf_blue_c_4;
	4: spriteset_conts_jrf_blue_f_4;
	3: spriteset_conts_jrf_blue_h_4;
	3: spriteset_conts_jrf_blue_i_4;
	1: spriteset_conts_jrf_blue_j_4;
	3: spriteset_conts_jrf_blue_k_4;
	3: spriteset_conts_jrf_red_c_4;
	9: spriteset_conts_jrf_red_d_4;
	8: spriteset_conts_jrf_red_e_4;
	8: spriteset_conts_jrf_red_k_4;
}

random_switch(FEAT_TRAINS, SELF, random_conts_4_mixed_vented_y2010) {
	6: spriteset_conts_private_general_d_4;
	9: spriteset_conts_private_general_e_4;
	6: spriteset_conts_private_general_f_4;
	5: spriteset_conts_private_general_g_4;
	8: spriteset_conts_jrf_blue_f_4;
	9: spriteset_conts_jrf_blue_k_4;
	5: spriteset_conts_jrf_red_a_4;
	6: spriteset_conts_jrf_red_b_4;
	2: spriteset_conts_jrf_red_c_4;
	7: spriteset_conts_jrf_red_d_4;
	5: spriteset_conts_jrf_red_e_4;
	4: spriteset_conts_jrf_red_f_4;
	1: spriteset_conts_jrf_red_k_4;
}


//final year switches _4

switch(FEAT_TRAINS, SELF, switch_conts_4_general_year, current_year) {
	0..1970: random_conts_jnr_green_4_general_y1960;
	
	1970..1980: random_conts_jnr_green_4_general_y1970;
	1980..1985: random_conts_jnr_green_4_general_y1980;
	1985..1990: random_conts_jnr_blue_4_general_y1985;
	1990..1995: random_conts_jrf_blue_4_general_y1990;
	1995..2000: random_conts_jrf_blue_4_general_y1995;
	2000..2005: random_conts_jrf_red_4_general_y2000;
	2005..2015: random_conts_jrf_red_4_general_y2005;
	random_conts_jrf_red_4_general_y2015;
	}

switch(FEAT_TRAINS, SELF, switch_conts_4_food_year, current_year) {
	0..1970: random_conts_4_reefer_y1960;
	1970..1980: random_conts_4_reefer_y1970;
	1980..1990: random_conts_4_reefer_y1980;
	1990..2001: random_conts_4_reefer_y1990;
    2001..2011: random_conts_4_reefer_y2000;
	random_conts_4_reefer_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_4_liquid_year, current_year) {
	0..1970: random_conts_4_liquid_y1960;
	1970..1980: random_conts_4_liquid_y1970;
	1980..1990: random_conts_4_liquid_y1980;
	1990..2001: random_conts_4_liquid_y1990;
    2001..2011: random_conts_4_liquid_y2000;
	random_conts_4_liquid_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_4_bulk_year, current_year) {
	0..1970: random_conts_4_bulk_y1960;
	1970..1980: random_conts_4_bulk_y1970;
    1980..1990: random_conts_4_bulk_y1980;
    1990..2000: random_conts_4_bulk_y1990;
	2000..2010: random_conts_4_bulk_y2000;
	random_conts_4_bulk_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_4_lidded_year, current_year) {
	0..1970: random_conts_jnr_green_4_general_y1960;
	1970..1980: random_conts_jnr_green_4_general_y1970;
    1980..1990: random_conts_4_lidded_y1980;
    1990..2000: random_conts_4_lidded_y1990;
	random_conts_4_lidded_y2000;
	}
	

switch(FEAT_TRAINS, SELF, switch_conts_4_mixed_private_year, current_year) {
	0..1972: random_conts_4_mixed_y1960;
	1972..1982: random_conts_4_mixed_private_y1970;
    1982..1992: random_conts_4_mixed_private_y1980;
	1992..2002: random_conts_4_mixed_private_y1990;
    2002..2012: random_conts_4_mixed_private_y2000;
	random_conts_4_mixed_private_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_4_mixed_food_year, current_year) {
	0..1972: random_conts_4_mixed_food_y1960;
	1972..1982: random_conts_4_mixed_food_y1970;
    1982..1992: random_conts_4_mixed_food_y1980;
	1992..2002: random_conts_4_mixed_food_y1990;
    2002..2012: random_conts_4_mixed_food_y2000;
	random_conts_4_mixed_food_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_4_mixed_liquid_year, current_year) {
	0..1972: random_conts_4_mixed_liquid_y1960;
	1972..1982: random_conts_4_mixed_liquid_y1970;
    1982..1992: random_conts_4_mixed_liquid_y1980;
	1992..2002: random_conts_4_mixed_liquid_y1990;
    2002..2012: random_conts_4_mixed_liquid_y2000;
	random_conts_4_mixed_liquid_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_4_mixed_open_year, current_year) {
	0..1970: random_conts_4_mixed_open_y1960;
	1970..1981: random_conts_4_mixed_open_y1970;
	1981..1991: random_conts_4_mixed_open_y1980;
	1991..2003: random_conts_4_mixed_open_y1990;
    2003..2016: random_conts_4_mixed_open_y2000;
	random_conts_4_mixed_open_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_4_mixed_vented_year, current_year) {
	0..1970: random_conts_4_mixed_vented_y1960;
	1970..1980: random_conts_4_mixed_vented_y1970;
	1980..1990: random_conts_4_mixed_vented_y1980;
	1990..2001: random_conts_4_mixed_vented_y1990;
    2001..2013: random_conts_4_mixed_vented_y2000;
	random_conts_4_mixed_vented_y2010;
	}


//conts 
//cont types a,b,c,d
//cont position 1,2,3,4

spriteset(spriteset_conts_jnr_green_a_3, "gfx/containers/jnr_green.png") { //old
	template_container_3(1, 1)
}

//b

spriteset(spriteset_conts_jnr_green_b_3, "gfx/containers/jnr_green.png") { //old 
	template_container_3(1, 32)
}

//c

spriteset(spriteset_conts_jnr_green_c_3, "gfx/containers/jnr_green.png") {
	template_container_3(1, 64)
}

alternative_sprites(spriteset_conts_jnr_green_c_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_3(1, 64)
}

//d

spriteset(spriteset_conts_jnr_green_d_3, "gfx/containers/jnr_green.png") {
	template_container_3(1, 96)
}

alternative_sprites(spriteset_conts_jnr_green_d_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_3(1, 96)
}

//e

spriteset(spriteset_conts_jnr_green_e_3, "gfx/containers/jnr_green.png") { //red
	template_container_3(1, 128)
}

alternative_sprites(spriteset_conts_jnr_green_e_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_3(1, 128)
}

//f

spriteset(spriteset_conts_jnr_green_f_3, "gfx/containers/jnr_green.png") { //white
	template_container_3(1, 160)
}

alternative_sprites(spriteset_conts_jnr_green_f_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_3(1, 160)
}

//g

spriteset(spriteset_conts_jnr_green_g_3, "gfx/containers/jnr_green.png") { //blue
	template_container_3(1, 192)
}

alternative_sprites(spriteset_conts_jnr_green_g_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_3(1, 192)
}

//h

spriteset(spriteset_conts_jnr_green_h_3, "gfx/containers/jnr_green.png") { //vent
	template_container_3(1, 224)
}

alternative_sprites(spriteset_conts_jnr_green_h_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_3(1, 224)
}

//i

spriteset(spriteset_conts_jnr_green_i_3, "gfx/containers/jnr_green.png") { //hopper
	template_container_3(1, 256)
}

alternative_sprites(spriteset_conts_jnr_green_i_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_3(1, 256)
}


//j

spriteset(spriteset_conts_jnr_green_j_3, "gfx/containers/jnr_green.png") { //tank a
	template_container_3(1, 288)
}

alternative_sprites(spriteset_conts_jnr_green_j_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_3(1, 288)
}

//k

spriteset(spriteset_conts_jnr_green_k_3, "gfx/containers/jnr_green.png") { //tank b
	template_container_3(1, 320)
}

alternative_sprites(spriteset_conts_jnr_green_k_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_3(1, 320)
}


//JNR/JRF blue  general conts
//cont types a,b,c,d
//cont position 1,2,3,4

spriteset(spriteset_conts_jrf_blue_a_3, "gfx/containers/jrf_blue.png") { //old plain blue
	template_container_3(1, 1)
}

//b

spriteset(spriteset_conts_jrf_blue_b_3, "gfx/containers/jrf_blue.png") { //old blue red logo
	template_container_3(1, 32)
}

//c

spriteset(spriteset_conts_jrf_blue_c_3, "gfx/containers/jrf_blue.png") { //old blue white logo
	template_container_3(1, 64)
}


//d

spriteset(spriteset_conts_jrf_blue_d_3, "gfx/containers/jrf_blue.png") { //old blue white stripe red logo
	template_container_3(1, 96)
}

//e

spriteset(spriteset_conts_jrf_blue_e_3, "gfx/containers/jrf_blue.png") { //jnr blue white stripe white logo
	template_container_3(1, 128)
}



//f

spriteset(spriteset_conts_jrf_blue_f_3, "gfx/containers/jrf_blue.png") { //jrf hokkaido vent white
	template_container_3(1, 160)
}


//g

spriteset(spriteset_conts_jrf_blue_g_3, "gfx/containers/jrf_blue.png") { //jrf _/ red logo
	template_container_3(1, 192)
}




//h

spriteset(spriteset_conts_jrf_blue_h_3, "gfx/containers/jrf_blue.png") { //jrf _/^
	template_container_3(1, 224)
}


//i

spriteset(spriteset_conts_jrf_blue_i_3, "gfx/containers/jrf_blue.png") { //jrf __/
	template_container_3(1, 256)
}



//j

spriteset(spriteset_conts_jrf_blue_j_3, "gfx/containers/jrf_blue.png") { //jrf swoosh
	template_container_3(1, 288)
}



//k

spriteset(spriteset_conts_jrf_blue_k_3, "gfx/containers/jrf_blue.png") { //jrf vent
	template_container_3(1, 320)
}


//JRF red  general conts
//cont types a,b,c,d
//cont position 1,2,3,4


spriteset(spriteset_conts_jrf_red_a_3, "gfx/containers/jrf_red.png") { //plain red
	template_container_3(1, 1)
}


//b

spriteset(spriteset_conts_jrf_red_b_3, "gfx/containers/jrf_red.png") { //red small logo
	template_container_3(1, 32)
}

//c

spriteset(spriteset_conts_jrf_red_c_3, "gfx/containers/jrf_red.png") { //red big logo
	template_container_3(1, 64)
}


//d

spriteset(spriteset_conts_jrf_red_d_3, "gfx/containers/jrf_red.png") { //red logo
	template_container_3(1, 96)
}

//e

spriteset(spriteset_conts_jrf_red_e_3, "gfx/containers/jrf_red.png") { //red black
	template_container_3(1, 128)
}



//f

spriteset(spriteset_conts_jrf_red_f_3, "gfx/containers/jrf_red.png") { //red ribbed
	template_container_3(1, 160)
}


//g

spriteset(spriteset_conts_jrf_red_g_3, "gfx/containers/jrf_red.png") { //jrf grey
	template_container_3(1, 192)
}




//h

spriteset(spriteset_conts_jrf_red_h_3, "gfx/containers/jrf_red.png") { //white jrf
	template_container_3(1, 224)
}


//i

spriteset(spriteset_conts_jrf_red_i_3, "gfx/containers/jrf_red.png") { //green jrf
	template_container_3(1, 256)
}

alternative_sprites(spriteset_conts_jrf_red_i_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jrf_red_32.png") {
	template_container_3(1, 256)
}


//j

spriteset(spriteset_conts_jrf_red_j_3, "gfx/containers/jrf_red.png") { //jrf eco
	template_container_3(1, 288)
}

alternative_sprites(spriteset_conts_jrf_red_j_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jrf_red_32.png") {
	template_container_3(1, 288)
}

//k

spriteset(spriteset_conts_jrf_red_k_3, "gfx/containers/jrf_red.png") { //jrf vent
	template_container_3(1, 320)
}




//jnr reefer conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_jnr_reefer_a_3, "gfx/containers/jnr_reefer.png") { //old white
	template_container_3(1, 1)
}

//b

spriteset(spriteset_conts_jnr_reefer_b_3, "gfx/containers/jnr_reefer.png") { //old red logo
	template_container_3(1, 32)
}

//c

spriteset(spriteset_conts_jnr_reefer_c_3, "gfx/containers/jnr_reefer.png") { //blue stripe
	template_container_3(1, 64)
}

//d

spriteset(spriteset_conts_jnr_reefer_d_3, "gfx/containers/jnr_reefer.png") { //blue bottom 
	template_container_3(1, 96)
}

//e

spriteset(spriteset_conts_jnr_reefer_e_3, "gfx/containers/jnr_reefer.png") { //blue bottom red logo
	template_container_3(1, 128)
}


//f

spriteset(spriteset_conts_jnr_reefer_f_3, "gfx/containers/jnr_reefer.png") { //white
	template_container_3(1, 160)
}

//g

spriteset(spriteset_conts_jnr_reefer_g_3, "gfx/containers/jnr_reefer.png") { //blue
	template_container_3(1, 192)
}

//h

spriteset(spriteset_conts_jnr_reefer_h_3, "gfx/containers/jnr_reefer.png") { //vent
	template_container_3(1, 224)
}

//i

spriteset(spriteset_conts_jnr_reefer_i_3, "gfx/containers/jnr_reefer.png") { //hopper
	template_container_3(1, 256)
}


//j

spriteset(spriteset_conts_jnr_reefer_j_3, "gfx/containers/jnr_reefer.png") { //tank a
	template_container_3(1, 288)
}

//k

spriteset(spriteset_conts_jnr_reefer_k_3, "gfx/containers/jnr_reefer.png") { //tank b
	template_container_3(1, 320)
}




//private general conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_general_a_3, "gfx/containers/private_containers.png") { //jfe dolphins
	template_container_3(1, 1)
}


//b

spriteset(spriteset_conts_private_general_b_3, "gfx/containers/private_containers.png") { //nippon soda blue
	template_container_3(1, 32)
}

//c

spriteset(spriteset_conts_private_general_c_3, "gfx/containers/private_containers.png") { //nippon soda red
	template_container_3(1, 64)
}


//d

spriteset(spriteset_conts_private_general_d_3, "gfx/containers/private_containers.png") { //grey red
	template_container_3(1, 96)
}

//e

spriteset(spriteset_conts_private_general_e_3, "gfx/containers/private_containers.png") { //grey cc boue
	template_container_3(1, 128)
}



//f

spriteset(spriteset_conts_private_general_f_3, "gfx/containers/private_containers.png") { //grey cc green
	template_container_3(1, 160)
}


//g

spriteset(spriteset_conts_private_general_g_3, "gfx/containers/private_containers.png") { //lt blue
	template_container_3(1, 192)
}




//h

spriteset(spriteset_conts_private_general_h_3, "gfx/containers/private_containers.png") { //pink
	template_container_3(1, 224)
}


//i

spriteset(spriteset_conts_private_general_i_3, "gfx/containers/private_containers.png") { //reed blue
	template_container_3(1, 256)
}



//j

spriteset(spriteset_conts_private_general_j_3, "gfx/containers/private_containers.png") { //pink green
	template_container_3(1, 288)
}



//k

spriteset(spriteset_conts_private_general_k_3, "gfx/containers/private_containers.png") { //cc green
	template_container_3(1, 320)
}




//private reefer conts, new type
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_reefer_a_3, "gfx/containers/private_reefers.png") { //yanmar
	template_container_3(1, 1)
}


//b

spriteset(spriteset_conts_private_reefer_b_3, "gfx/containers/private_reefers.png") { //other
	template_container_3(1, 32)
}

//c

spriteset(spriteset_conts_private_reefer_c_3, "gfx/containers/private_reefers.png") { //other
	template_container_3(1, 64)
}


//d

spriteset(spriteset_conts_private_reefer_d_3, "gfx/containers/private_reefers.png") { //jot cool
	template_container_3(1, 96)
}

//e

spriteset(spriteset_conts_private_reefer_e_3, "gfx/containers/private_reefers.png") { //jot cool
	template_container_3(1, 128)
}



//f

spriteset(spriteset_conts_private_reefer_f_3, "gfx/containers/private_reefers.png") { //jfc
	template_container_3(1, 160)
}


//g

spriteset(spriteset_conts_private_reefer_g_3, "gfx/containers/private_reefers.png") { //jot green
	template_container_3(1, 192)
}




//h

spriteset(spriteset_conts_private_reefer_h_3, "gfx/containers/private_reefers.png") { //jot red
	template_container_3(1, 224)
}


//i

spriteset(spriteset_conts_private_reefer_i_3, "gfx/containers/private_reefers.png") { //jot blue
	template_container_3(1, 256)
}



//j

spriteset(spriteset_conts_private_reefer_j_3, "gfx/containers/private_reefers.png") { //jot new
	template_container_3(1, 288)
}



//k

spriteset(spriteset_conts_private_reefer_k_3, "gfx/containers/private_reefers.png") { //orange
	template_container_3(1, 320)
}




//private tanker conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_tanker_a_3, "gfx/containers/private_tankers.png") { //grey frameless
	template_container_3(1, 1)
}


//b

spriteset(spriteset_conts_private_tanker_b_3, "gfx/containers/private_tankers.png") { //black frameless
	template_container_3(1, 32)
}

//c

spriteset(spriteset_conts_private_tanker_c_3, "gfx/containers/private_tankers.png") { //silver frameless
	template_container_3(1, 64)
}


//d

spriteset(spriteset_conts_private_tanker_d_3, "gfx/containers/private_tankers.png") { //blue frame
	template_container_3(1, 96)
}

//e

spriteset(spriteset_conts_private_tanker_e_3, "gfx/containers/private_tankers.png") { //yellow frame
	template_container_3(1, 128)
}



//f

spriteset(spriteset_conts_private_tanker_f_3, "gfx/containers/private_tankers.png") { //green frame
	template_container_3(1, 160)
}


//g

spriteset(spriteset_conts_private_tanker_g_3, "gfx/containers/private_tankers.png") { //cream 
	template_container_3(1, 192)
}




//h

spriteset(spriteset_conts_private_tanker_h_3, "gfx/containers/private_tankers.png") { //blue white
	template_container_3(1, 224)
}


//i

spriteset(spriteset_conts_private_tanker_i_3, "gfx/containers/private_tankers.png") { //green white
	template_container_3(1, 256)
}



//j

spriteset(spriteset_conts_private_tanker_j_3, "gfx/containers/private_tankers.png") { //cc green
	template_container_3(1, 288)
}



//k

spriteset(spriteset_conts_private_tanker_k_3, "gfx/containers/private_tankers.png") { //cc blue
	template_container_3(1, 320)
}




//private bulk conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_bulk_a_3, "gfx/containers/private_bulktainers.png") { //hopper grey
	template_container_3(1, 1)
}


//b

spriteset(spriteset_conts_private_bulk_b_3, "gfx/containers/private_bulktainers.png") { //hopper white
	template_container_3(1, 32)
}

//c

spriteset(spriteset_conts_private_bulk_c_3, "gfx/containers/private_bulktainers.png") { //hopper clay
	template_container_3(1, 64)
}


//d

spriteset(spriteset_conts_private_bulk_d_3, "gfx/containers/private_bulktainers.png") { //hopper mcl
	template_container_3(1, 96)
}

//e

spriteset(spriteset_conts_private_bulk_e_3, "gfx/containers/private_bulktainers.png") { //hopper blue
	template_container_3(1, 128)
}



//f

spriteset(spriteset_conts_private_bulk_f_3, "gfx/containers/private_bulktainers.png") { //white short
	template_container_3(1, 160)
}


//g

spriteset(spriteset_conts_private_bulk_g_3, "gfx/containers/private_bulktainers.png") { //white tall
	template_container_3(1, 192)
}




//h

spriteset(spriteset_conts_private_bulk_h_3, "gfx/containers/private_bulktainers.png") { //white short
	template_container_3(1, 224)
}


//i

spriteset(spriteset_conts_private_bulk_i_3, "gfx/containers/private_bulktainers.png") { //white tall
	template_container_3(1, 256)
}



//j

spriteset(spriteset_conts_private_bulk_j_3, "gfx/containers/private_bulktainers.png") { //green short
	template_container_3(1, 288)
}

alternative_sprites(spriteset_conts_private_bulk_j_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/private_bulktainers_32.png") {
	template_container_3(1, 288)
}

//k

spriteset(spriteset_conts_private_bulk_k_3, "gfx/containers/private_bulktainers.png") { //green tall
	template_container_3(1, 320)
}

alternative_sprites(spriteset_conts_private_bulk_k_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/private_bulktainers_32.png") {
	template_container_3(1, 320)
}



//private open conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_open_a_3, "gfx/containers/private_opentainers.png") { //hopper grey
	template_container_3(1, 1)
}


//b

spriteset(spriteset_conts_private_open_b_3, "gfx/containers/private_opentainers.png") { //hopper white
	template_container_3(1, 32)
}

//c

spriteset(spriteset_conts_private_open_c_3, "gfx/containers/private_opentainers.png") { //hopper clay
	template_container_3(1, 64)
}


//d

spriteset(spriteset_conts_private_open_d_3, "gfx/containers/private_opentainers.png") { //hopper mcl
	template_container_3(1, 96)
}

//e

spriteset(spriteset_conts_private_open_e_3, "gfx/containers/private_opentainers.png") { //hopper blue
	template_container_3(1, 128)
}



//f

spriteset(spriteset_conts_private_open_f_3, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_3(1, 160)
}


//g

spriteset(spriteset_conts_private_open_g_3, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_3(1, 192)
}




//h

spriteset(spriteset_conts_private_open_h_3, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_3(1, 224)
}


//i

spriteset(spriteset_conts_private_open_i_3, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_3(1, 256)
}



//j

spriteset(spriteset_conts_private_open_j_3, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_3(1, 288)
}



//k

spriteset(spriteset_conts_private_open_k_3, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_3(1, 320)
}




//randoms for variation

//general conts

//60s era JNR green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_3_general_y1960) {
	9: spriteset_conts_jnr_green_a_3;
    1: spriteset_conts_jnr_green_b_3;
	3: spriteset_conts_jnr_green_c_3;
	8: spriteset_conts_jnr_green_d_3;
}

//70s era JNR green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_3_general_y1970) {
	3: spriteset_conts_jnr_green_a_3;
    6: spriteset_conts_jnr_green_b_3;
	4: spriteset_conts_jnr_green_c_3;
	1: spriteset_conts_jnr_green_d_3;
	18: spriteset_conts_jnr_green_f_3;
	6: spriteset_conts_jnr_green_g_3;
}
//80s era mixed blue/green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_3_general_y1980) {
	4: spriteset_conts_jnr_green_c_3;
	6: spriteset_conts_jnr_green_d_3;
    1: spriteset_conts_jnr_green_e_3;
	15: spriteset_conts_jnr_green_f_3;
	5: spriteset_conts_jnr_green_g_3;
}
//late 80s mixed blue green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_blue_3_general_y1985) {
	8: spriteset_conts_jrf_blue_a_3;
    7: spriteset_conts_jrf_blue_b_3;
	6: spriteset_conts_jrf_blue_c_3;
	6: spriteset_conts_jrf_blue_d_3;
	2: spriteset_conts_jrf_blue_e_3;
	1: spriteset_conts_jnr_green_c_3;
	1: spriteset_conts_jnr_green_d_3;
    1: spriteset_conts_jnr_green_e_3;
	1: spriteset_conts_jnr_green_f_3;
	11: spriteset_conts_jnr_green_g_3;
}
//90s blue jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_blue_3_general_y1990) {
	6: spriteset_conts_jrf_blue_a_3;
    7: spriteset_conts_jrf_blue_b_3;
	5: spriteset_conts_jrf_blue_c_3;
	9: spriteset_conts_jrf_blue_d_3;
	3: spriteset_conts_jrf_blue_h_3;
    8: spriteset_conts_jrf_blue_i_3;
	5: spriteset_conts_jrf_blue_j_3;
    5: spriteset_conts_jnr_green_e_3;
	4: spriteset_conts_jnr_green_f_3;
	4: spriteset_conts_jnr_green_g_3;
}
//90s mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_blue_3_general_y1995) {
	9: spriteset_conts_jrf_red_b_3;
    6: spriteset_conts_jrf_blue_b_3;
	5: spriteset_conts_jrf_blue_c_3;
	3: spriteset_conts_jrf_blue_d_3;
	4: spriteset_conts_jrf_blue_e_3;
	7: spriteset_conts_jrf_blue_g_3;
	7: spriteset_conts_jrf_blue_h_3;
    7: spriteset_conts_jrf_blue_i_3;
	2: spriteset_conts_jrf_blue_j_3;
    5: spriteset_conts_jnr_green_e_3;
	2: spriteset_conts_jnr_green_f_3;
	6: spriteset_conts_jnr_green_g_3;
}
//00s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_3_general_y2000) {
	7: spriteset_conts_jrf_red_b_3;
	8: spriteset_conts_jrf_red_c_3;
	5: spriteset_conts_jrf_red_d_3;
	1: spriteset_conts_jrf_red_e_3;
    7: spriteset_conts_jrf_blue_b_3;
	1: spriteset_conts_jrf_blue_c_3;
	7: spriteset_conts_jrf_blue_d_3;
	9: spriteset_conts_jrf_blue_e_3;
	4: spriteset_conts_jrf_blue_g_3;
	4: spriteset_conts_jrf_blue_h_3;
    9: spriteset_conts_jrf_blue_i_3;
	1: spriteset_conts_jrf_blue_j_3;

}

//10s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_3_general_y2005) {
	1: spriteset_conts_jrf_red_a_3;
	4: spriteset_conts_jrf_red_b_3;
	9: spriteset_conts_jrf_red_c_3;
	8: spriteset_conts_jrf_red_d_3;
	4: spriteset_conts_jrf_red_e_3;
	1: spriteset_conts_jrf_red_f_3;
	5: spriteset_conts_jrf_red_h_3;
	4: spriteset_conts_jrf_blue_g_3;
	9: spriteset_conts_jrf_blue_h_3;
    2: spriteset_conts_jrf_blue_i_3;
	7: spriteset_conts_jrf_blue_j_3;

}

//20s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_3_general_y2015) {
	11: spriteset_conts_jrf_red_a_3;
	1: spriteset_conts_jrf_red_b_3;
	18: spriteset_conts_jrf_red_c_3;
	4: spriteset_conts_jrf_red_d_3;
	1: spriteset_conts_jrf_red_e_3;
	3: spriteset_conts_jrf_red_f_3;
	3: spriteset_conts_jrf_red_h_3;
	8: spriteset_conts_jrf_red_i_3;
	2: spriteset_conts_jrf_red_j_3;

}


//food conts


//jnr reefer old style

random_switch(FEAT_TRAINS, SELF, random_conts_3_reefer_y1960) {
	8: spriteset_conts_jnr_reefer_a_3;
    4: spriteset_conts_jnr_reefer_b_3;
	3: spriteset_conts_jnr_green_c_3;
	9: spriteset_conts_jnr_green_d_3;
}

//jnr era private reefer

random_switch(FEAT_TRAINS, SELF, random_conts_3_reefer_y1970) {
	9: spriteset_conts_jnr_reefer_a_3;
	6: spriteset_conts_jnr_reefer_b_3;
	4: spriteset_conts_jnr_reefer_c_3;
	6: spriteset_conts_jnr_reefer_d_3;
	6: spriteset_conts_jnr_reefer_e_3;
	4: spriteset_conts_jnr_green_d_3;
	5: spriteset_conts_jnr_green_f_3;
	4: spriteset_conts_jnr_green_g_3;
}


//jnr reefer newer style

random_switch(FEAT_TRAINS, SELF, random_conts_3_reefer_y1980) {
	5: spriteset_conts_jnr_reefer_b_3;
    5: spriteset_conts_jnr_reefer_c_3;
	5: spriteset_conts_jnr_reefer_d_3;
	1: spriteset_conts_jnr_reefer_e_3;
	8: spriteset_conts_jnr_reefer_f_3;
	5: spriteset_conts_jnr_reefer_g_3;
	7: spriteset_conts_jnr_reefer_h_3;
	4: spriteset_conts_jnr_reefer_i_3;
	1: spriteset_conts_jnr_reefer_j_3;
	6: spriteset_conts_jnr_reefer_k_3;
	8: spriteset_conts_jnr_green_d_3;
    3: spriteset_conts_jnr_green_e_3;
	3: spriteset_conts_jnr_green_f_3;
	8: spriteset_conts_jnr_green_g_3;
    7: spriteset_conts_jrf_blue_b_3;
}

//private reefers jnr mixed

random_switch(FEAT_TRAINS, SELF, random_conts_3_reefer_y1990) {
	7: spriteset_conts_jnr_reefer_f_3;
	5: spriteset_conts_jnr_reefer_g_3;
	4: spriteset_conts_jnr_reefer_h_3;
	5: spriteset_conts_jnr_reefer_i_3;
	3: spriteset_conts_jnr_reefer_j_3;
	6: spriteset_conts_jnr_reefer_k_3;
	3: spriteset_conts_private_reefer_a_3;
    9: spriteset_conts_private_reefer_b_3;
	9: spriteset_conts_private_reefer_c_3;
	4: spriteset_conts_private_reefer_f_3;
	5: spriteset_conts_private_reefer_g_3;
	6: spriteset_conts_jnr_green_f_3;
	7: spriteset_conts_jnr_green_g_3;
    6: spriteset_conts_jrf_blue_b_3;
	8: spriteset_conts_jrf_blue_h_3;
    1: spriteset_conts_jrf_blue_i_3;

}

//private reefers only
random_switch(FEAT_TRAINS, SELF, random_conts_3_reefer_y2000) {
	4: spriteset_conts_jnr_reefer_f_3;
	4: spriteset_conts_jnr_reefer_g_3;
	4: spriteset_conts_jnr_reefer_j_3;
	1: spriteset_conts_jnr_reefer_k_3;
	5: spriteset_conts_private_reefer_a_3;
    4: spriteset_conts_private_reefer_b_3;
	7: spriteset_conts_private_reefer_c_3;
	3: spriteset_conts_private_reefer_d_3;
	7: spriteset_conts_private_reefer_e_3;
	1: spriteset_conts_private_reefer_f_3;
	6: spriteset_conts_private_reefer_g_3;
	7: spriteset_conts_private_reefer_h_3;
	5: spriteset_conts_private_reefer_i_3;
	2: spriteset_conts_private_reefer_j_3;
	1: spriteset_conts_jrf_red_b_3;
	7: spriteset_conts_jrf_red_c_3;
	1: spriteset_conts_jrf_red_d_3;
	8: spriteset_conts_jrf_blue_h_3;
    9: spriteset_conts_jrf_blue_i_3;
}


//private reefers modern
random_switch(FEAT_TRAINS, SELF, random_conts_3_reefer_y2010) {
	9: spriteset_conts_private_reefer_a_3;
    2: spriteset_conts_private_reefer_b_3;
	6: spriteset_conts_private_reefer_c_3;
	1: spriteset_conts_private_reefer_d_3;
    1: spriteset_conts_private_reefer_e_3;
	7: spriteset_conts_private_reefer_f_3;
    9: spriteset_conts_private_reefer_g_3;
	6: spriteset_conts_private_reefer_h_3;
	4: spriteset_conts_private_reefer_i_3;
	6: spriteset_conts_private_reefer_j_3;
	7: spriteset_conts_private_reefer_k_3;
	2: spriteset_conts_jrf_red_b_3;
	9: spriteset_conts_jrf_red_c_3;
	1: spriteset_conts_jrf_red_d_3;
	2: spriteset_conts_jrf_red_e_3;
	5: spriteset_conts_jrf_red_f_3;
}



//liquid conts


random_switch(FEAT_TRAINS, SELF, random_conts_3_liquid_y1960) {
	14: spriteset_conts_jnr_green_j_3;
    18: spriteset_conts_jnr_green_k_3;
	6: spriteset_conts_jnr_green_a_3;
    1: spriteset_conts_jnr_green_b_3;
	7: spriteset_conts_jnr_green_c_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_liquid_y1970) {
	5: spriteset_conts_jnr_green_j_3;
    6: spriteset_conts_jnr_green_k_3;
	7: spriteset_conts_private_tanker_a_3;
	3: spriteset_conts_private_tanker_b_3;
	3: spriteset_conts_private_tanker_c_3;
	4: spriteset_conts_private_tanker_g_3;
	4: spriteset_conts_private_tanker_h_3;
	8: spriteset_conts_jnr_green_d_3;
	7: spriteset_conts_jnr_green_f_3;
	5: spriteset_conts_jnr_green_g_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_liquid_y1980) {
	3: spriteset_conts_jnr_green_j_3;
    6: spriteset_conts_jnr_green_k_3;
	1: spriteset_conts_private_tanker_a_3;
	9: spriteset_conts_private_tanker_b_3;
	4: spriteset_conts_private_tanker_c_3;
	4: spriteset_conts_private_tanker_d_3;
	1: spriteset_conts_private_tanker_g_3;
	6: spriteset_conts_private_tanker_h_3;
	1: spriteset_conts_private_tanker_i_3;
    3: spriteset_conts_jnr_green_e_3;
	7: spriteset_conts_jnr_green_f_3;
	6: spriteset_conts_jnr_green_g_3;
    3: spriteset_conts_jrf_blue_b_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_liquid_y1990) {
	9: spriteset_conts_private_tanker_a_3;
	4: spriteset_conts_private_tanker_b_3;
	6: spriteset_conts_private_tanker_c_3;
	8: spriteset_conts_private_tanker_d_3;
	5: spriteset_conts_private_tanker_f_3;
	2: spriteset_conts_private_tanker_g_3;
	6: spriteset_conts_private_tanker_h_3;
	8: spriteset_conts_private_tanker_i_3;
	4: spriteset_conts_private_tanker_j_3;
	7: spriteset_conts_jnr_green_e_3;
	2: spriteset_conts_jnr_green_g_3;
    7: spriteset_conts_jrf_blue_b_3;
	3: spriteset_conts_jrf_blue_h_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_liquid_y2000) {
	1: spriteset_conts_private_tanker_a_3;
	2: spriteset_conts_private_tanker_b_3;
	9: spriteset_conts_private_tanker_c_3;
	6: spriteset_conts_private_tanker_d_3;
	6: spriteset_conts_private_tanker_e_3;
	8: spriteset_conts_private_tanker_f_3;
	9: spriteset_conts_private_tanker_g_3;
	7: spriteset_conts_private_tanker_h_3;
	2: spriteset_conts_private_tanker_i_3;
	8: spriteset_conts_private_tanker_j_3;
	9: spriteset_conts_private_tanker_k_3;
	4: spriteset_conts_jrf_red_b_3;
	1: spriteset_conts_jrf_red_c_3;
	6: spriteset_conts_jrf_blue_h_3;
    7: spriteset_conts_jrf_blue_i_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_liquid_y2010) {
	9: spriteset_conts_private_tanker_a_3;
	2: spriteset_conts_private_tanker_c_3;
	4: spriteset_conts_private_tanker_d_3;
	2: spriteset_conts_private_tanker_e_3;
	7: spriteset_conts_private_tanker_f_3;
	5: spriteset_conts_private_tanker_g_3;
	1: spriteset_conts_private_tanker_h_3;
	4: spriteset_conts_private_tanker_i_3;
	3: spriteset_conts_private_tanker_j_3;
	5: spriteset_conts_private_tanker_k_3;
	3: spriteset_conts_jrf_red_b_3;
	8: spriteset_conts_jrf_red_c_3;
	7: spriteset_conts_jrf_red_e_3;
	1: spriteset_conts_jrf_red_f_3;
}


//bulk conts

random_switch(FEAT_TRAINS, SELF, random_conts_3_bulk_y1960) {
    16: spriteset_conts_jnr_green_i_3;
	9: spriteset_conts_jnr_green_c_3;
	1: spriteset_conts_jnr_green_d_3;
}


random_switch(FEAT_TRAINS, SELF, random_conts_3_bulk_y1970) {
    2: spriteset_conts_jnr_green_i_3;
	8: spriteset_conts_private_bulk_a_3;
    4: spriteset_conts_private_bulk_b_3;
	1: spriteset_conts_jnr_green_d_3;
	8: spriteset_conts_jnr_green_f_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_bulk_y1980) {
    1: spriteset_conts_jnr_green_i_3;
	6: spriteset_conts_private_bulk_a_3;
    6: spriteset_conts_private_bulk_b_3;
	3: spriteset_conts_private_bulk_d_3;
	1: spriteset_conts_private_bulk_e_3;
	4: spriteset_conts_jnr_green_e_3;
	9: spriteset_conts_jnr_green_f_3;
	5: spriteset_conts_jnr_green_g_3;
    7: spriteset_conts_jrf_blue_b_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_bulk_y1990) {
	2: spriteset_conts_private_bulk_a_3;
    1: spriteset_conts_private_bulk_b_3;
	7: spriteset_conts_private_bulk_c_3;
	2: spriteset_conts_private_bulk_d_3;
	6: spriteset_conts_private_bulk_e_3;
	9: spriteset_conts_jnr_green_f_3;
	2: spriteset_conts_jnr_green_g_3;
    5: spriteset_conts_jrf_blue_b_3;
	4: spriteset_conts_jrf_blue_h_3;
    6: spriteset_conts_jrf_blue_i_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_bulk_y2000) {
	7: spriteset_conts_private_bulk_a_3;
    9: spriteset_conts_private_bulk_b_3;
	7: spriteset_conts_private_bulk_c_3;
	3: spriteset_conts_private_bulk_d_3;
	5: spriteset_conts_jrf_red_b_3;
	5: spriteset_conts_jrf_red_c_3;
	1: spriteset_conts_jrf_blue_h_3;
    9: spriteset_conts_jrf_blue_i_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_bulk_y2010) {
	1: spriteset_conts_private_bulk_a_3;
    6: spriteset_conts_private_bulk_b_3;
	8: spriteset_conts_private_bulk_c_3;
	9: spriteset_conts_private_bulk_d_3;
	6: spriteset_conts_jrf_red_b_3;
	9: spriteset_conts_jrf_red_c_3;
	2: spriteset_conts_jrf_red_f_3;
}


//lidded conts

random_switch(FEAT_TRAINS, SELF, random_conts_3_lidded_y1980) {
	4: spriteset_conts_private_bulk_f_3;
	7: spriteset_conts_private_bulk_j_3;
	3: spriteset_conts_private_bulk_k_3;
	7: spriteset_conts_jnr_green_f_3;
	8: spriteset_conts_jnr_green_g_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_lidded_y1990) {
	7: spriteset_conts_private_bulk_f_3;
    8: spriteset_conts_private_bulk_g_3;
	9: spriteset_conts_private_bulk_h_3;
	1: spriteset_conts_private_bulk_j_3;
	1: spriteset_conts_private_bulk_k_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_lidded_y2000) {
	7: spriteset_conts_private_bulk_f_3;
    4: spriteset_conts_private_bulk_g_3;
	4: spriteset_conts_private_bulk_h_3;
	5: spriteset_conts_private_bulk_i_3;
	5: spriteset_conts_private_bulk_k_3;
}


//mixed conts pre-private

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_y1960) {
	1: spriteset_conts_jnr_green_a_3;
    6: spriteset_conts_jnr_green_b_3;
	3: spriteset_conts_jnr_green_c_3;
	1: spriteset_conts_jnr_green_d_3;
	5: spriteset_conts_jnr_green_h_3;
	6: spriteset_conts_jnr_green_i_3;
	8: spriteset_conts_jnr_reefer_a_3;
}

//mixed private

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_private_y1970) {
	2: spriteset_conts_private_general_d_3;
	7: spriteset_conts_private_general_e_3;
	8: spriteset_conts_private_general_f_3;
	9: spriteset_conts_private_general_h_3;
	5: spriteset_conts_private_general_j_3;
	4: spriteset_conts_private_general_k_3;
	4: spriteset_conts_jnr_reefer_f_3;
	9: spriteset_conts_jnr_reefer_g_3;
	6: spriteset_conts_jnr_reefer_h_3;
	1: spriteset_conts_jnr_reefer_j_3;
	9: spriteset_conts_jnr_green_d_3;
	2: spriteset_conts_jnr_green_f_3;
	1: spriteset_conts_jnr_green_g_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_private_y1980) {
	5: spriteset_conts_private_general_d_3;
	5: spriteset_conts_private_general_e_3;
	2: spriteset_conts_private_general_f_3;
	6: spriteset_conts_private_general_h_3;
	5: spriteset_conts_private_general_j_3;
	8: spriteset_conts_private_general_k_3;
	2: spriteset_conts_jnr_reefer_f_3;
	7: spriteset_conts_jnr_reefer_g_3;
	7: spriteset_conts_jnr_reefer_h_3;
	9: spriteset_conts_jnr_reefer_i_3;
	1: spriteset_conts_jnr_reefer_j_3;
	8: spriteset_conts_jnr_green_d_3;
    1: spriteset_conts_jnr_green_e_3;
	3: spriteset_conts_jnr_green_f_3;
	4: spriteset_conts_jnr_green_g_3;
    5: spriteset_conts_jrf_blue_b_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_private_y1990) {
	1: spriteset_conts_private_general_b_3;
	5: spriteset_conts_private_general_d_3;
	1: spriteset_conts_private_general_e_3;
	9: spriteset_conts_private_general_h_3;
	2: spriteset_conts_private_general_i_3;
	6: spriteset_conts_private_general_j_3;
	3: spriteset_conts_private_general_k_3;
	3: spriteset_conts_jnr_reefer_f_3;
	4: spriteset_conts_jnr_reefer_g_3;
	7: spriteset_conts_jnr_reefer_h_3;
	1: spriteset_conts_jnr_reefer_i_3;
	2: spriteset_conts_jnr_reefer_j_3;
	1: spriteset_conts_private_reefer_f_3;
	3: spriteset_conts_private_reefer_g_3;
	6: spriteset_conts_jnr_green_f_3;
	7: spriteset_conts_jnr_green_g_3;
    1: spriteset_conts_jrf_blue_b_3;
	9: spriteset_conts_jrf_blue_h_3;
    8: spriteset_conts_jrf_blue_i_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_private_y2000) {
	8: spriteset_conts_private_general_b_3;
	2: spriteset_conts_private_general_c_3;
	9: spriteset_conts_private_general_d_3;
	6: spriteset_conts_private_general_e_3;
	2: spriteset_conts_private_general_g_3;
	2: spriteset_conts_private_general_h_3;
	7: spriteset_conts_private_general_i_3;
	1: spriteset_conts_private_general_k_3;
	2: spriteset_conts_private_reefer_f_3;
	5: spriteset_conts_private_reefer_g_3;
	4: spriteset_conts_private_reefer_h_3;
	9: spriteset_conts_private_reefer_i_3;
	9: spriteset_conts_jnr_reefer_f_3;
	3: spriteset_conts_jrf_red_g_3;
	1: spriteset_conts_jrf_red_b_3;
	8: spriteset_conts_jrf_red_c_3;
	1: spriteset_conts_jrf_red_d_3;
	5: spriteset_conts_jrf_blue_h_3;
    9: spriteset_conts_jrf_blue_i_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_private_y2010) {
	7: spriteset_conts_private_general_a_3;
	4: spriteset_conts_private_general_b_3;
	8: spriteset_conts_private_general_c_3;
	3: spriteset_conts_private_general_d_3;
	4: spriteset_conts_private_general_e_3;
	9: spriteset_conts_private_general_g_3;
	6: spriteset_conts_private_general_h_3;
	1: spriteset_conts_private_general_i_3;
	8: spriteset_conts_private_reefer_f_3;
	9: spriteset_conts_private_reefer_g_3;
	2: spriteset_conts_private_reefer_h_3;
	1: spriteset_conts_private_reefer_i_3;
	1: spriteset_conts_jrf_red_g_3;
	1: spriteset_conts_jrf_red_b_3;
	1: spriteset_conts_jrf_red_c_3;
	6: spriteset_conts_jrf_red_d_3;
	5: spriteset_conts_jrf_red_e_3;
	7: spriteset_conts_jrf_red_f_3;
}


//mixed food


random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_food_y1960) {
	7: spriteset_conts_jnr_reefer_a_3;
    6: spriteset_conts_jnr_reefer_b_3;
	3: spriteset_conts_jnr_green_c_3;
	6: spriteset_conts_jnr_green_d_3;
	5: spriteset_conts_jnr_green_h_3;
	4: spriteset_conts_jnr_green_j_3;
	9: spriteset_conts_jnr_green_k_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_food_y1970) {
	8: spriteset_conts_jnr_reefer_a_3;
	1: spriteset_conts_jnr_reefer_b_3;
	8: spriteset_conts_jnr_reefer_c_3;
	5: spriteset_conts_jnr_reefer_d_3;
	9: spriteset_conts_jnr_reefer_e_3;
	3: spriteset_conts_jnr_green_j_3;
	9: spriteset_conts_jnr_green_k_3;
	2: spriteset_conts_private_tanker_a_3;
	7: spriteset_conts_private_tanker_b_3;
	4: spriteset_conts_private_tanker_c_3;
	2: spriteset_conts_jnr_green_d_3;
	7: spriteset_conts_jnr_green_f_3;
	3: spriteset_conts_jnr_green_g_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_food_y1980) {
	7: spriteset_conts_jnr_reefer_c_3;
	4: spriteset_conts_jnr_reefer_d_3;
	2: spriteset_conts_jnr_reefer_e_3;
	2: spriteset_conts_jnr_reefer_f_3;
	2: spriteset_conts_jnr_reefer_g_3;
	3: spriteset_conts_jnr_reefer_h_3;
	6: spriteset_conts_jnr_green_j_3;
	9: spriteset_conts_jnr_green_k_3;
	5: spriteset_conts_private_tanker_a_3;
	4: spriteset_conts_private_tanker_b_3;
	2: spriteset_conts_private_tanker_c_3;
	8: spriteset_conts_private_tanker_g_3;
	9: spriteset_conts_private_tanker_h_3;
	7: spriteset_conts_private_tanker_i_3;
	7: spriteset_conts_jnr_green_d_3;
    9: spriteset_conts_jnr_green_e_3;
	1: spriteset_conts_jnr_green_f_3;
	2: spriteset_conts_jnr_green_g_3;
    7: spriteset_conts_jrf_blue_b_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_food_y1990) {
	8: spriteset_conts_jnr_reefer_g_3;
	1: spriteset_conts_jnr_reefer_h_3;
	3: spriteset_conts_jnr_reefer_i_3;
	9: spriteset_conts_jnr_reefer_j_3;
	4: spriteset_conts_jnr_reefer_k_3;
	3: spriteset_conts_jnr_green_j_3;
	9: spriteset_conts_jnr_green_k_3;
	9: spriteset_conts_private_tanker_a_3;
	3: spriteset_conts_private_tanker_b_3;
	7: spriteset_conts_private_tanker_c_3;
	4: spriteset_conts_private_tanker_g_3;
	9: spriteset_conts_private_tanker_h_3;
	2: spriteset_conts_private_tanker_i_3;
	2: spriteset_conts_jnr_green_f_3;
	8: spriteset_conts_jnr_green_g_3;
    6: spriteset_conts_jrf_blue_b_3;
	2: spriteset_conts_jrf_blue_h_3;
    3: spriteset_conts_jrf_blue_i_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_food_y2000) {
	4: spriteset_conts_jnr_reefer_i_3;
	1: spriteset_conts_jnr_reefer_j_3;
	6: spriteset_conts_jnr_reefer_k_3;
	3: spriteset_conts_private_reefer_a_3;
    4: spriteset_conts_private_reefer_b_3;
	5: spriteset_conts_private_reefer_c_3;
	3: spriteset_conts_private_reefer_f_3;
	4: spriteset_conts_private_reefer_g_3;
	5: spriteset_conts_jnr_green_k_3;
	8: spriteset_conts_private_tanker_d_3;
	3: spriteset_conts_private_tanker_f_3;
	1: spriteset_conts_private_tanker_g_3;
	5: spriteset_conts_private_tanker_h_3;
	9: spriteset_conts_private_tanker_i_3;
	2: spriteset_conts_private_tanker_j_3;
	2: spriteset_conts_jrf_red_b_3;
	6: spriteset_conts_jrf_red_c_3;
	3: spriteset_conts_jrf_red_d_3;
	3: spriteset_conts_jrf_blue_h_3;
    7: spriteset_conts_jrf_blue_i_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_food_y2010) {
	5: spriteset_conts_private_reefer_a_3;
    4: spriteset_conts_private_reefer_b_3;
	3: spriteset_conts_private_reefer_c_3;
	1: spriteset_conts_private_reefer_f_3;
	4: spriteset_conts_private_reefer_g_3;
	7: spriteset_conts_private_reefer_h_3;
	9: spriteset_conts_private_reefer_i_3;
	3: spriteset_conts_private_reefer_j_3;
	4: spriteset_conts_private_reefer_k_3;
	3: spriteset_conts_jnr_green_k_3;
	5: spriteset_conts_private_tanker_d_3;
	7: spriteset_conts_private_tanker_f_3;
	8: spriteset_conts_private_tanker_h_3;
	7: spriteset_conts_private_tanker_i_3;
	3: spriteset_conts_private_tanker_j_3;
	7: spriteset_conts_private_tanker_k_3;
	8: spriteset_conts_jrf_red_b_3;
	4: spriteset_conts_jrf_red_c_3;
	4: spriteset_conts_jrf_red_d_3;
	7: spriteset_conts_jrf_red_e_3;
	7: spriteset_conts_jrf_red_f_3;
}


//mixed liquid

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_liquid_y1960) {
	7: spriteset_conts_private_open_f_3;
	3: spriteset_conts_private_open_h_3;
	4: spriteset_conts_jnr_green_c_3;
	1: spriteset_conts_jnr_green_d_3;
	2: spriteset_conts_jnr_green_h_3;
	1: spriteset_conts_jnr_green_j_3;
	7: spriteset_conts_jnr_green_k_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_liquid_y1970) {
	2: spriteset_conts_private_general_e_3;
	9: spriteset_conts_private_general_f_3;
	2: spriteset_conts_private_general_h_3;
	6: spriteset_conts_private_general_j_3;
	6: spriteset_conts_private_general_k_3;
    3: spriteset_conts_private_open_g_3;
	3: spriteset_conts_private_open_h_3;
	4: spriteset_conts_private_tanker_a_3;
	2: spriteset_conts_private_tanker_b_3;
	8: spriteset_conts_private_tanker_c_3;
	1: spriteset_conts_private_tanker_g_3;
	2: spriteset_conts_jnr_green_d_3;
	4: spriteset_conts_jnr_green_f_3;
	4: spriteset_conts_jnr_green_g_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_liquid_y1980) {
	6: spriteset_conts_private_general_d_3;
	8: spriteset_conts_private_general_e_3;
	1: spriteset_conts_private_general_f_3;
	9: spriteset_conts_private_general_h_3;
	9: spriteset_conts_private_general_j_3;
	3: spriteset_conts_private_general_k_3;
    5: spriteset_conts_private_open_h_3;
	7: spriteset_conts_private_open_i_3;
	3: spriteset_conts_private_tanker_a_3;
	5: spriteset_conts_private_tanker_b_3;
	6: spriteset_conts_private_tanker_c_3;
	3: spriteset_conts_private_tanker_g_3;
	5: spriteset_conts_private_tanker_h_3;
	3: spriteset_conts_private_tanker_i_3;
	2: spriteset_conts_jnr_green_d_3;
    8: spriteset_conts_jnr_green_e_3;
	3: spriteset_conts_jnr_green_f_3;
	4: spriteset_conts_jnr_green_g_3;
    5: spriteset_conts_jrf_blue_b_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_liquid_y1990) {
	4: spriteset_conts_private_general_d_3;
	9: spriteset_conts_private_general_f_3;
	2: spriteset_conts_private_general_h_3;
	8: spriteset_conts_private_general_j_3;
	4: spriteset_conts_private_general_k_3;
    7: spriteset_conts_private_open_i_3;
	4: spriteset_conts_private_open_a_3;
	3: spriteset_conts_jnr_green_j_3;
	4: spriteset_conts_private_tanker_a_3;
	9: spriteset_conts_private_tanker_b_3;
	8: spriteset_conts_private_tanker_c_3;
	3: spriteset_conts_private_tanker_g_3;
	5: spriteset_conts_private_tanker_h_3;
	9: spriteset_conts_private_tanker_i_3;
	2: spriteset_conts_private_tanker_j_3;
	1: spriteset_conts_jnr_green_f_3;
	5: spriteset_conts_jnr_green_g_3;
    1: spriteset_conts_jrf_blue_b_3;
	3: spriteset_conts_jrf_blue_h_3;
    8: spriteset_conts_jrf_blue_i_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_liquid_y2000) {
	7: spriteset_conts_private_general_d_3;
	8: spriteset_conts_private_general_f_3;
	4: spriteset_conts_private_general_g_3;
	5: spriteset_conts_private_general_h_3;
    3: spriteset_conts_private_open_a_3;
	4: spriteset_conts_private_open_b_3;
	9: spriteset_conts_jnr_green_j_3;
	7: spriteset_conts_private_tanker_d_3;
	6: spriteset_conts_private_tanker_e_3;
	2: spriteset_conts_private_tanker_f_3;
	1: spriteset_conts_private_tanker_g_3;
	7: spriteset_conts_private_tanker_h_3;
	8: spriteset_conts_private_tanker_i_3;
	6: spriteset_conts_private_tanker_j_3;
	8: spriteset_conts_private_tanker_k_3;
	2: spriteset_conts_jrf_red_b_3;
	7: spriteset_conts_jrf_red_c_3;
	1: spriteset_conts_jrf_red_d_3;
	7: spriteset_conts_jrf_blue_h_3;
    4: spriteset_conts_jrf_blue_i_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_liquid_y2010) {
	5: spriteset_conts_private_general_e_3;
	4: spriteset_conts_private_general_g_3;
	4: spriteset_conts_private_general_h_3;
    2: spriteset_conts_private_open_b_3;
	3: spriteset_conts_private_open_k_3;
	4: spriteset_conts_jnr_green_j_3;
	1: spriteset_conts_private_tanker_d_3;
	5: spriteset_conts_private_tanker_e_3;
	9: spriteset_conts_private_tanker_f_3;
	1: spriteset_conts_private_tanker_g_3;
	6: spriteset_conts_private_tanker_h_3;
	2: spriteset_conts_private_tanker_i_3;
	2: spriteset_conts_private_tanker_j_3;
	4: spriteset_conts_private_tanker_k_3;
	5: spriteset_conts_jrf_red_a_3;
	1: spriteset_conts_jrf_red_b_3;
	8: spriteset_conts_jrf_red_c_3;
	5: spriteset_conts_jrf_red_d_3;
	4: spriteset_conts_jrf_red_e_3;
	8: spriteset_conts_jrf_red_f_3;
}


//mixed open

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_open_y1960) {
    1: spriteset_conts_jnr_green_b_3;
    4: spriteset_conts_jnr_green_c_3;
    8: spriteset_conts_jnr_green_d_3;
	8: spriteset_conts_private_open_f_3;
	9: spriteset_conts_private_open_h_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_open_y1970) {
	3: spriteset_conts_jnr_green_a_3;
    4: spriteset_conts_jnr_green_b_3;
	8: spriteset_conts_jnr_green_c_3;
	2: spriteset_conts_jnr_green_d_3;
	3: spriteset_conts_jnr_green_f_3;
	6: spriteset_conts_jnr_green_g_3;
	5: spriteset_conts_private_open_f_3;
    2: spriteset_conts_private_open_g_3;
	5: spriteset_conts_private_open_h_3;
	2: spriteset_conts_private_open_j_3;

}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_open_y1980) {
	8: spriteset_conts_jnr_green_c_3;
	7: spriteset_conts_jnr_green_d_3;
    7: spriteset_conts_jnr_green_e_3;
	8: spriteset_conts_jnr_green_f_3;
	3: spriteset_conts_jnr_green_g_3;
	2: spriteset_conts_jrf_blue_a_3;
    5: spriteset_conts_jrf_blue_b_3;
	4: spriteset_conts_jrf_blue_c_3;
	3: spriteset_conts_jrf_blue_d_3;
	4: spriteset_conts_jrf_blue_e_3;
	3: spriteset_conts_private_open_f_3;
    1: spriteset_conts_private_open_g_3;
	1: spriteset_conts_private_open_h_3;
	5: spriteset_conts_private_open_i_3;
	3: spriteset_conts_private_open_j_3;
	7: spriteset_conts_private_open_k_3;
	2: spriteset_conts_private_general_e_3;
	6: spriteset_conts_private_general_f_3;
	1: spriteset_conts_private_general_h_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_open_y1990) {
    5: spriteset_conts_jnr_green_e_3;
	1: spriteset_conts_jnr_green_f_3;
	6: spriteset_conts_jrf_blue_c_3;
	7: spriteset_conts_jrf_blue_e_3;
	3: spriteset_conts_jrf_blue_h_3;
    5: spriteset_conts_jrf_blue_i_3;
	3: spriteset_conts_jrf_blue_j_3;
    9: spriteset_conts_private_open_a_3;
	5: spriteset_conts_private_open_e_3;
	5: spriteset_conts_private_open_f_3;
    7: spriteset_conts_private_open_g_3;
	4: spriteset_conts_private_open_h_3;
	3: spriteset_conts_private_open_i_3;
	4: spriteset_conts_private_general_e_3;
	3: spriteset_conts_private_general_h_3;
	8: spriteset_conts_private_general_i_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_open_y2000) {
	8: spriteset_conts_jrf_blue_c_3;
	3: spriteset_conts_jrf_blue_g_3;
	5: spriteset_conts_jrf_blue_h_3;
    6: spriteset_conts_jrf_blue_i_3;
	5: spriteset_conts_jrf_blue_j_3;
	1: spriteset_conts_jrf_red_b_3;
	3: spriteset_conts_jrf_red_c_3;
	7: spriteset_conts_jrf_red_d_3;
	3: spriteset_conts_jrf_red_e_3;
	9: spriteset_conts_jrf_red_g_3;
    7: spriteset_conts_private_open_a_3;
	8: spriteset_conts_private_open_d_3;
	5: spriteset_conts_private_open_e_3;
	8: spriteset_conts_private_open_g_3;
	3: spriteset_conts_private_open_i_3;
	9: spriteset_conts_private_open_j_3;
	4: spriteset_conts_private_general_a_3;
	7: spriteset_conts_private_general_g_3;
	9: spriteset_conts_private_general_i_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_open_y2010) {
	8: spriteset_conts_jrf_red_a_3;
	9: spriteset_conts_jrf_red_b_3;
	1: spriteset_conts_jrf_red_c_3;
	9: spriteset_conts_jrf_red_d_3;
	7: spriteset_conts_jrf_red_e_3;
	3: spriteset_conts_jrf_red_f_3;
	9: spriteset_conts_jrf_red_g_3;
	1: spriteset_conts_jrf_red_h_3;
    7: spriteset_conts_jrf_red_i_3;
	4: spriteset_conts_jrf_red_j_3;
    2: spriteset_conts_private_open_a_3;
	5: spriteset_conts_private_open_b_3;
	3: spriteset_conts_private_open_c_3;
	5: spriteset_conts_private_open_d_3;
	5: spriteset_conts_private_open_e_3;
	2: spriteset_conts_private_open_k_3;
	3: spriteset_conts_private_general_a_3;
	8: spriteset_conts_private_general_d_3;
	5: spriteset_conts_private_general_g_3;
}



//mixed vented


random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_vented_y1960) {

	2: spriteset_conts_jnr_green_a_3;
    2: spriteset_conts_jnr_green_b_3;
	7: spriteset_conts_jnr_green_h_3;

}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_vented_y1970) {

	5: spriteset_conts_jnr_green_f_3;
    9: spriteset_conts_jnr_green_g_3;
	2: spriteset_conts_jnr_green_h_3;

}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_vented_y1980) {

	6: spriteset_conts_jnr_green_e_3;
	8: spriteset_conts_jnr_green_f_3;
    9: spriteset_conts_jnr_green_g_3;
	5: spriteset_conts_jnr_green_h_3;
	6: spriteset_conts_private_general_d_3;
	7: spriteset_conts_private_general_e_3;
	4: spriteset_conts_private_general_f_3;
	2: spriteset_conts_private_general_j_3;
	1: spriteset_conts_jrf_blue_b_3;
	3: spriteset_conts_jrf_blue_c_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_vented_y1990) {
	5: spriteset_conts_jnr_green_e_3;
	7: spriteset_conts_jnr_green_f_3;
    1: spriteset_conts_jnr_green_g_3;
	9: spriteset_conts_private_general_d_3;
	2: spriteset_conts_private_general_e_3;
	4: spriteset_conts_private_general_f_3;
	1: spriteset_conts_private_general_g_3;
	5: spriteset_conts_private_general_j_3;
	3: spriteset_conts_jrf_blue_c_3;
	9: spriteset_conts_jrf_blue_f_3;
	2: spriteset_conts_jrf_blue_h_3;
	5: spriteset_conts_jrf_blue_i_3;
	3: spriteset_conts_jrf_blue_j_3;
	6: spriteset_conts_jrf_blue_k_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_vented_y2000) {
	7: spriteset_conts_private_general_d_3;
	3: spriteset_conts_private_general_e_3;
	7: spriteset_conts_private_general_f_3;
	3: spriteset_conts_private_general_g_3;
	5: spriteset_conts_private_general_j_3;
	4: spriteset_conts_jrf_blue_b_3;
	5: spriteset_conts_jrf_blue_c_3;
	7: spriteset_conts_jrf_blue_f_3;
	3: spriteset_conts_jrf_blue_h_3;
	2: spriteset_conts_jrf_blue_i_3;
	8: spriteset_conts_jrf_blue_j_3;
	8: spriteset_conts_jrf_blue_k_3;
	9: spriteset_conts_jrf_red_c_3;
	5: spriteset_conts_jrf_red_d_3;
	5: spriteset_conts_jrf_red_e_3;
	7: spriteset_conts_jrf_red_k_3;
}

random_switch(FEAT_TRAINS, SELF, random_conts_3_mixed_vented_y2010) {
	5: spriteset_conts_private_general_d_3;
	9: spriteset_conts_private_general_e_3;
	8: spriteset_conts_private_general_f_3;
	7: spriteset_conts_private_general_g_3;
	4: spriteset_conts_jrf_blue_f_3;
	8: spriteset_conts_jrf_blue_k_3;
	2: spriteset_conts_jrf_red_a_3;
	3: spriteset_conts_jrf_red_b_3;
	9: spriteset_conts_jrf_red_c_3;
	9: spriteset_conts_jrf_red_d_3;
	8: spriteset_conts_jrf_red_e_3;
	6: spriteset_conts_jrf_red_f_3;
	7: spriteset_conts_jrf_red_k_3;
}


//final year switches _3

switch(FEAT_TRAINS, SELF, switch_conts_3_general_year, current_year) {
	0..1970: random_conts_jnr_green_3_general_y1960;
	
	1970..1980: random_conts_jnr_green_3_general_y1970;
	1980..1985: random_conts_jnr_green_3_general_y1980;
	1985..1990: random_conts_jnr_blue_3_general_y1985;
	1990..1995: random_conts_jrf_blue_3_general_y1990;
	1995..2000: random_conts_jrf_blue_3_general_y1995;
	2000..2005: random_conts_jrf_red_3_general_y2000;
	2005..2015: random_conts_jrf_red_3_general_y2005;
	random_conts_jrf_red_3_general_y2015;
	}

switch(FEAT_TRAINS, SELF, switch_conts_3_food_year, current_year) {
	0..1970: random_conts_3_reefer_y1960;
	1970..1980: random_conts_3_reefer_y1970;
	1980..1990: random_conts_3_reefer_y1980;
	1990..2001: random_conts_3_reefer_y1990;
    2001..2011: random_conts_3_reefer_y2000;
	random_conts_3_reefer_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_3_liquid_year, current_year) {
	0..1970: random_conts_3_liquid_y1960;
	1970..1980: random_conts_3_liquid_y1970;
	1980..1990: random_conts_3_liquid_y1980;
	1990..2001: random_conts_3_liquid_y1990;
    2001..2011: random_conts_3_liquid_y2000;
	random_conts_3_liquid_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_3_bulk_year, current_year) {
	0..1970: random_conts_3_bulk_y1960;
	1970..1980: random_conts_3_bulk_y1970;
    1980..1990: random_conts_3_bulk_y1980;
    1990..2000: random_conts_3_bulk_y1990;
	2000..2010: random_conts_3_bulk_y2000;
	random_conts_3_bulk_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_3_lidded_year, current_year) {
	0..1970: random_conts_jnr_green_3_general_y1960;
	1970..1980: random_conts_jnr_green_3_general_y1970;
    1980..1990: random_conts_3_lidded_y1980;
    1990..2000: random_conts_3_lidded_y1990;
	random_conts_3_lidded_y2000;
	}
	

switch(FEAT_TRAINS, SELF, switch_conts_3_mixed_private_year, current_year) {
	0..1972: random_conts_3_mixed_y1960;
	1972..1982: random_conts_3_mixed_private_y1970;
    1982..1992: random_conts_3_mixed_private_y1980;
	1992..2002: random_conts_3_mixed_private_y1990;
    2002..2012: random_conts_3_mixed_private_y2000;
	random_conts_3_mixed_private_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_3_mixed_food_year, current_year) {
	0..1972: random_conts_3_mixed_food_y1960;
	1972..1982: random_conts_3_mixed_food_y1970;
    1982..1992: random_conts_3_mixed_food_y1980;
	1992..2002: random_conts_3_mixed_food_y1990;
    2002..2012: random_conts_3_mixed_food_y2000;
	random_conts_3_mixed_food_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_3_mixed_liquid_year, current_year) {
	0..1972: random_conts_3_mixed_liquid_y1960;
	1972..1982: random_conts_3_mixed_liquid_y1970;
    1982..1992: random_conts_3_mixed_liquid_y1980;
	1992..2002: random_conts_3_mixed_liquid_y1990;
    2002..2012: random_conts_3_mixed_liquid_y2000;
	random_conts_3_mixed_liquid_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_3_mixed_open_year, current_year) {
	0..1970: random_conts_3_mixed_open_y1960;
	1970..1981: random_conts_3_mixed_open_y1970;
	1981..1991: random_conts_3_mixed_open_y1980;
	1991..2003: random_conts_3_mixed_open_y1990;
    2003..2016: random_conts_3_mixed_open_y2000;
	random_conts_3_mixed_open_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_3_mixed_vented_year, current_year) {
	0..1970: random_conts_3_mixed_vented_y1960;
	1970..1980: random_conts_3_mixed_vented_y1970;
	1980..1990: random_conts_3_mixed_vented_y1980;
	1990..2001: random_conts_3_mixed_vented_y1990;
    2001..2013: random_conts_3_mixed_vented_y2000;
	random_conts_3_mixed_vented_y2010;
	}


//conts 
//cont types a,b,c,d
//cont position 1,2,3,4

spriteset(spriteset_conts_jnr_green_a_2, "gfx/containers/jnr_green.png") { //old
	template_container_2(1, 1)
}

//b

spriteset(spriteset_conts_jnr_green_b_2, "gfx/containers/jnr_green.png") { //old 
	template_container_2(1, 32)
}

//c

spriteset(spriteset_conts_jnr_green_c_2, "gfx/containers/jnr_green.png") {
	template_container_2(1, 64)
}

alternative_sprites(spriteset_conts_jnr_green_c_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_2(1, 64)
}

//d

spriteset(spriteset_conts_jnr_green_d_2, "gfx/containers/jnr_green.png") {
	template_container_2(1, 96)
}

alternative_sprites(spriteset_conts_jnr_green_d_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_2(1, 96)
}

//e

spriteset(spriteset_conts_jnr_green_e_2, "gfx/containers/jnr_green.png") { //red
	template_container_2(1, 128)
}

alternative_sprites(spriteset_conts_jnr_green_e_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_2(1, 128)
}

//f

spriteset(spriteset_conts_jnr_green_f_2, "gfx/containers/jnr_green.png") { //white
	template_container_2(1, 160)
}

alternative_sprites(spriteset_conts_jnr_green_f_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_2(1, 160)
}

//g

spriteset(spriteset_conts_jnr_green_g_2, "gfx/containers/jnr_green.png") { //blue
	template_container_2(1, 192)
}

alternative_sprites(spriteset_conts_jnr_green_g_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_2(1, 192)
}

//h

spriteset(spriteset_conts_jnr_green_h_2, "gfx/containers/jnr_green.png") { //vent
	template_container_2(1, 224)
}

alternative_sprites(spriteset_conts_jnr_green_h_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_2(1, 224)
}

//i

spriteset(spriteset_conts_jnr_green_i_2, "gfx/containers/jnr_green.png") { //hopper
	template_container_2(1, 256)
}

alternative_sprites(spriteset_conts_jnr_green_i_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_2(1, 256)
}


//j

spriteset(spriteset_conts_jnr_green_j_2, "gfx/containers/jnr_green.png") { //tank a
	template_container_2(1, 288)
}

alternative_sprites(spriteset_conts_jnr_green_j_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_2(1, 288)
}

//k

spriteset(spriteset_conts_jnr_green_k_2, "gfx/containers/jnr_green.png") { //tank b
	template_container_2(1, 320)
}

alternative_sprites(spriteset_conts_jnr_green_k_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_2(1, 320)
}


//JNR/JRF blue  general conts
//cont types a,b,c,d
//cont position 1,2,3,4

spriteset(spriteset_conts_jrf_blue_a_2, "gfx/containers/jrf_blue.png") { //old plain blue
	template_container_2(1, 1)
}

//b

spriteset(spriteset_conts_jrf_blue_b_2, "gfx/containers/jrf_blue.png") { //old blue red logo
	template_container_2(1, 32)
}

//c

spriteset(spriteset_conts_jrf_blue_c_2, "gfx/containers/jrf_blue.png") { //old blue white logo
	template_container_2(1, 64)
}


//d

spriteset(spriteset_conts_jrf_blue_d_2, "gfx/containers/jrf_blue.png") { //old blue white stripe red logo
	template_container_2(1, 96)
}

//e

spriteset(spriteset_conts_jrf_blue_e_2, "gfx/containers/jrf_blue.png") { //jnr blue white stripe white logo
	template_container_2(1, 128)
}



//f

spriteset(spriteset_conts_jrf_blue_f_2, "gfx/containers/jrf_blue.png") { //jrf hokkaido vent white
	template_container_2(1, 160)
}


//g

spriteset(spriteset_conts_jrf_blue_g_2, "gfx/containers/jrf_blue.png") { //jrf _/ red logo
	template_container_2(1, 192)
}




//h

spriteset(spriteset_conts_jrf_blue_h_2, "gfx/containers/jrf_blue.png") { //jrf _/^
	template_container_2(1, 224)
}


//i

spriteset(spriteset_conts_jrf_blue_i_2, "gfx/containers/jrf_blue.png") { //jrf __/
	template_container_2(1, 256)
}



//j

spriteset(spriteset_conts_jrf_blue_j_2, "gfx/containers/jrf_blue.png") { //jrf swoosh
	template_container_2(1, 288)
}



//k

spriteset(spriteset_conts_jrf_blue_k_2, "gfx/containers/jrf_blue.png") { //jrf vent
	template_container_2(1, 320)
}


//JRF red  general conts
//cont types a,b,c,d
//cont position 1,2,3,4


spriteset(spriteset_conts_jrf_red_a_2, "gfx/containers/jrf_red.png") { //plain red
	template_container_2(1, 1)
}


//b

spriteset(spriteset_conts_jrf_red_b_2, "gfx/containers/jrf_red.png") { //red small logo
	template_container_2(1, 32)
}

//c

spriteset(spriteset_conts_jrf_red_c_2, "gfx/containers/jrf_red.png") { //red big logo
	template_container_2(1, 64)
}


//d

spriteset(spriteset_conts_jrf_red_d_2, "gfx/containers/jrf_red.png") { //red logo
	template_container_2(1, 96)
}

//e

spriteset(spriteset_conts_jrf_red_e_2, "gfx/containers/jrf_red.png") { //red black
	template_container_2(1, 128)
}



//f

spriteset(spriteset_conts_jrf_red_f_2, "gfx/containers/jrf_red.png") { //red ribbed
	template_container_2(1, 160)
}


//g

spriteset(spriteset_conts_jrf_red_g_2, "gfx/containers/jrf_red.png") { //jrf grey
	template_container_2(1, 192)
}




//h

spriteset(spriteset_conts_jrf_red_h_2, "gfx/containers/jrf_red.png") { //white jrf
	template_container_2(1, 224)
}


//i

spriteset(spriteset_conts_jrf_red_i_2, "gfx/containers/jrf_red.png") { //green jrf
	template_container_2(1, 256)
}

alternative_sprites(spriteset_conts_jrf_red_i_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jrf_red_32.png") {
	template_container_2(1, 256)
}


//j

spriteset(spriteset_conts_jrf_red_j_2, "gfx/containers/jrf_red.png") { //jrf eco
	template_container_2(1, 288)
}

alternative_sprites(spriteset_conts_jrf_red_j_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jrf_red_32.png") {
	template_container_2(1, 288)
}

//k

spriteset(spriteset_conts_jrf_red_k_2, "gfx/containers/jrf_red.png") { //jrf vent
	template_container_2(1, 320)
}




//jnr reefer conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_jnr_reefer_a_2, "gfx/containers/jnr_reefer.png") { //old white
	template_container_2(1, 1)
}

//b

spriteset(spriteset_conts_jnr_reefer_b_2, "gfx/containers/jnr_reefer.png") { //old red logo
	template_container_2(1, 32)
}

//c

spriteset(spriteset_conts_jnr_reefer_c_2, "gfx/containers/jnr_reefer.png") { //blue stripe
	template_container_2(1, 64)
}

//d

spriteset(spriteset_conts_jnr_reefer_d_2, "gfx/containers/jnr_reefer.png") { //blue bottom 
	template_container_2(1, 96)
}

//e

spriteset(spriteset_conts_jnr_reefer_e_2, "gfx/containers/jnr_reefer.png") { //blue bottom red logo
	template_container_2(1, 128)
}


//f

spriteset(spriteset_conts_jnr_reefer_f_2, "gfx/containers/jnr_reefer.png") { //white
	template_container_2(1, 160)
}

//g

spriteset(spriteset_conts_jnr_reefer_g_2, "gfx/containers/jnr_reefer.png") { //blue
	template_container_2(1, 192)
}

//h

spriteset(spriteset_conts_jnr_reefer_h_2, "gfx/containers/jnr_reefer.png") { //vent
	template_container_2(1, 224)
}

//i

spriteset(spriteset_conts_jnr_reefer_i_2, "gfx/containers/jnr_reefer.png") { //hopper
	template_container_2(1, 256)
}


//j

spriteset(spriteset_conts_jnr_reefer_j_2, "gfx/containers/jnr_reefer.png") { //tank a
	template_container_2(1, 288)
}

//k

spriteset(spriteset_conts_jnr_reefer_k_2, "gfx/containers/jnr_reefer.png") { //tank b
	template_container_2(1, 320)
}




//private general conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_general_a_2, "gfx/containers/private_containers.png") { //jfe dolphins
	template_container_2(1, 1)
}


//b

spriteset(spriteset_conts_private_general_b_2, "gfx/containers/private_containers.png") { //nippon soda blue
	template_container_2(1, 32)
}

//c

spriteset(spriteset_conts_private_general_c_2, "gfx/containers/private_containers.png") { //nippon soda red
	template_container_2(1, 64)
}


//d

spriteset(spriteset_conts_private_general_d_2, "gfx/containers/private_containers.png") { //grey red
	template_container_2(1, 96)
}

//e

spriteset(spriteset_conts_private_general_e_2, "gfx/containers/private_containers.png") { //grey cc boue
	template_container_2(1, 128)
}



//f

spriteset(spriteset_conts_private_general_f_2, "gfx/containers/private_containers.png") { //grey cc green
	template_container_2(1, 160)
}


//g

spriteset(spriteset_conts_private_general_g_2, "gfx/containers/private_containers.png") { //lt blue
	template_container_2(1, 192)
}




//h

spriteset(spriteset_conts_private_general_h_2, "gfx/containers/private_containers.png") { //pink
	template_container_2(1, 224)
}


//i

spriteset(spriteset_conts_private_general_i_2, "gfx/containers/private_containers.png") { //reed blue
	template_container_2(1, 256)
}



//j

spriteset(spriteset_conts_private_general_j_2, "gfx/containers/private_containers.png") { //pink green
	template_container_2(1, 288)
}



//k

spriteset(spriteset_conts_private_general_k_2, "gfx/containers/private_containers.png") { //cc green
	template_container_2(1, 320)
}




//private reefer conts, new type
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_reefer_a_2, "gfx/containers/private_reefers.png") { //yanmar
	template_container_2(1, 1)
}


//b

spriteset(spriteset_conts_private_reefer_b_2, "gfx/containers/private_reefers.png") { //other
	template_container_2(1, 32)
}

//c

spriteset(spriteset_conts_private_reefer_c_2, "gfx/containers/private_reefers.png") { //other
	template_container_2(1, 64)
}


//d

spriteset(spriteset_conts_private_reefer_d_2, "gfx/containers/private_reefers.png") { //jot cool
	template_container_2(1, 96)
}

//e

spriteset(spriteset_conts_private_reefer_e_2, "gfx/containers/private_reefers.png") { //jot cool
	template_container_2(1, 128)
}



//f

spriteset(spriteset_conts_private_reefer_f_2, "gfx/containers/private_reefers.png") { //jfc
	template_container_2(1, 160)
}


//g

spriteset(spriteset_conts_private_reefer_g_2, "gfx/containers/private_reefers.png") { //jot green
	template_container_2(1, 192)
}




//h

spriteset(spriteset_conts_private_reefer_h_2, "gfx/containers/private_reefers.png") { //jot red
	template_container_2(1, 224)
}


//i

spriteset(spriteset_conts_private_reefer_i_2, "gfx/containers/private_reefers.png") { //jot blue
	template_container_2(1, 256)
}



//j

spriteset(spriteset_conts_private_reefer_j_2, "gfx/containers/private_reefers.png") { //jot new
	template_container_2(1, 288)
}



//k

spriteset(spriteset_conts_private_reefer_k_2, "gfx/containers/private_reefers.png") { //orange
	template_container_2(1, 320)
}




//private tanker conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_tanker_a_2, "gfx/containers/private_tankers.png") { //grey frameless
	template_container_2(1, 1)
}


//b

spriteset(spriteset_conts_private_tanker_b_2, "gfx/containers/private_tankers.png") { //black frameless
	template_container_2(1, 32)
}

//c

spriteset(spriteset_conts_private_tanker_c_2, "gfx/containers/private_tankers.png") { //silver frameless
	template_container_2(1, 64)
}


//d

spriteset(spriteset_conts_private_tanker_d_2, "gfx/containers/private_tankers.png") { //blue frame
	template_container_2(1, 96)
}

//e

spriteset(spriteset_conts_private_tanker_e_2, "gfx/containers/private_tankers.png") { //yellow frame
	template_container_2(1, 128)
}



//f

spriteset(spriteset_conts_private_tanker_f_2, "gfx/containers/private_tankers.png") { //green frame
	template_container_2(1, 160)
}


//g

spriteset(spriteset_conts_private_tanker_g_2, "gfx/containers/private_tankers.png") { //cream 
	template_container_2(1, 192)
}




//h

spriteset(spriteset_conts_private_tanker_h_2, "gfx/containers/private_tankers.png") { //blue white
	template_container_2(1, 224)
}


//i

spriteset(spriteset_conts_private_tanker_i_2, "gfx/containers/private_tankers.png") { //green white
	template_container_2(1, 256)
}



//j

spriteset(spriteset_conts_private_tanker_j_2, "gfx/containers/private_tankers.png") { //cc green
	template_container_2(1, 288)
}



//k

spriteset(spriteset_conts_private_tanker_k_2, "gfx/containers/private_tankers.png") { //cc blue
	template_container_2(1, 320)
}




//private bulk conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_bulk_a_2, "gfx/containers/private_bulktainers.png") { //hopper grey
	template_container_2(1, 1)
}


//b

spriteset(spriteset_conts_private_bulk_b_2, "gfx/containers/private_bulktainers.png") { //hopper white
	template_container_2(1, 32)
}

//c

spriteset(spriteset_conts_private_bulk_c_2, "gfx/containers/private_bulktainers.png") { //hopper clay
	template_container_2(1, 64)
}


//d

spriteset(spriteset_conts_private_bulk_d_2, "gfx/containers/private_bulktainers.png") { //hopper mcl
	template_container_2(1, 96)
}

//e

spriteset(spriteset_conts_private_bulk_e_2, "gfx/containers/private_bulktainers.png") { //hopper blue
	template_container_2(1, 128)
}



//f

spriteset(spriteset_conts_private_bulk_f_2, "gfx/containers/private_bulktainers.png") { //white short
	template_container_2(1, 160)
}


//g

spriteset(spriteset_conts_private_bulk_g_2, "gfx/containers/private_bulktainers.png") { //white tall
	template_container_2(1, 192)
}




//h

spriteset(spriteset_conts_private_bulk_h_2, "gfx/containers/private_bulktainers.png") { //white short
	template_container_2(1, 224)
}


//i

spriteset(spriteset_conts_private_bulk_i_2, "gfx/containers/private_bulktainers.png") { //white tall
	template_container_2(1, 256)
}



//j

spriteset(spriteset_conts_private_bulk_j_2, "gfx/containers/private_bulktainers.png") { //green short
	template_container_2(1, 288)
}

alternative_sprites(spriteset_conts_private_bulk_j_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/private_bulktainers_32.png") {
	template_container_2(1, 288)
}

//k

spriteset(spriteset_conts_private_bulk_k_2, "gfx/containers/private_bulktainers.png") { //green tall
	template_container_2(1, 320)
}

alternative_sprites(spriteset_conts_private_bulk_k_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/private_bulktainers_32.png") {
	template_container_2(1, 320)
}



//private open conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_open_a_2, "gfx/containers/private_opentainers.png") { //hopper grey
	template_container_2(1, 1)
}


//b

spriteset(spriteset_conts_private_open_b_2, "gfx/containers/private_opentainers.png") { //hopper white
	template_container_2(1, 32)
}

//c

spriteset(spriteset_conts_private_open_c_2, "gfx/containers/private_opentainers.png") { //hopper clay
	template_container_2(1, 64)
}


//d

spriteset(spriteset_conts_private_open_d_2, "gfx/containers/private_opentainers.png") { //hopper mcl
	template_container_2(1, 96)
}

//e

spriteset(spriteset_conts_private_open_e_2, "gfx/containers/private_opentainers.png") { //hopper blue
	template_container_2(1, 128)
}



//f

spriteset(spriteset_conts_private_open_f_2, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_2(1, 160)
}


//g

spriteset(spriteset_conts_private_open_g_2, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_2(1, 192)
}




//h

spriteset(spriteset_conts_private_open_h_2, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_2(1, 224)
}


//i

spriteset(spriteset_conts_private_open_i_2, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_2(1, 256)
}



//j

spriteset(spriteset_conts_private_open_j_2, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_2(1, 288)
}



//k

spriteset(spriteset_conts_private_open_k_2, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_2(1, 320)
}




//randoms for variation

//general conts

//60s era JNR green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_2_general_y1960) {
	3: spriteset_conts_jnr_green_a_2;
    7: spriteset_conts_jnr_green_b_2;
	2: spriteset_conts_jnr_green_c_2;
	9: spriteset_conts_jnr_green_d_2;
}

//70s era JNR green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_2_general_y1970) {
	3: spriteset_conts_jnr_green_a_2;
    1: spriteset_conts_jnr_green_b_2;
	1: spriteset_conts_jnr_green_c_2;
	9: spriteset_conts_jnr_green_d_2;
	12: spriteset_conts_jnr_green_f_2;
	8: spriteset_conts_jnr_green_g_2;
}
//80s era mixed blue/green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_2_general_y1980) {
	5: spriteset_conts_jnr_green_c_2;
	2: spriteset_conts_jnr_green_d_2;
    1: spriteset_conts_jnr_green_e_2;
	16: spriteset_conts_jnr_green_f_2;
	2: spriteset_conts_jnr_green_g_2;
}
//late 80s mixed blue green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_blue_2_general_y1985) {
	4: spriteset_conts_jrf_blue_a_2;
    2: spriteset_conts_jrf_blue_b_2;
	6: spriteset_conts_jrf_blue_c_2;
	5: spriteset_conts_jrf_blue_d_2;
	1: spriteset_conts_jrf_blue_e_2;
	3: spriteset_conts_jnr_green_c_2;
	7: spriteset_conts_jnr_green_d_2;
    3: spriteset_conts_jnr_green_e_2;
	1: spriteset_conts_jnr_green_f_2;
	15: spriteset_conts_jnr_green_g_2;
}
//90s blue jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_blue_2_general_y1990) {
	8: spriteset_conts_jrf_blue_a_2;
    7: spriteset_conts_jrf_blue_b_2;
	5: spriteset_conts_jrf_blue_c_2;
	2: spriteset_conts_jrf_blue_d_2;
	3: spriteset_conts_jrf_blue_h_2;
    4: spriteset_conts_jrf_blue_i_2;
	5: spriteset_conts_jrf_blue_j_2;
    2: spriteset_conts_jnr_green_e_2;
	9: spriteset_conts_jnr_green_f_2;
	7: spriteset_conts_jnr_green_g_2;
}
//90s mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_blue_2_general_y1995) {
	8: spriteset_conts_jrf_red_b_2;
    8: spriteset_conts_jrf_blue_b_2;
	1: spriteset_conts_jrf_blue_c_2;
	5: spriteset_conts_jrf_blue_d_2;
	7: spriteset_conts_jrf_blue_e_2;
	1: spriteset_conts_jrf_blue_g_2;
	3: spriteset_conts_jrf_blue_h_2;
    7: spriteset_conts_jrf_blue_i_2;
	3: spriteset_conts_jrf_blue_j_2;
    3: spriteset_conts_jnr_green_e_2;
	9: spriteset_conts_jnr_green_f_2;
	5: spriteset_conts_jnr_green_g_2;
}
//00s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_2_general_y2000) {
	9: spriteset_conts_jrf_red_b_2;
	1: spriteset_conts_jrf_red_c_2;
	9: spriteset_conts_jrf_red_d_2;
	8: spriteset_conts_jrf_red_e_2;
    6: spriteset_conts_jrf_blue_b_2;
	7: spriteset_conts_jrf_blue_c_2;
	4: spriteset_conts_jrf_blue_d_2;
	5: spriteset_conts_jrf_blue_e_2;
	5: spriteset_conts_jrf_blue_g_2;
	2: spriteset_conts_jrf_blue_h_2;
    7: spriteset_conts_jrf_blue_i_2;
	8: spriteset_conts_jrf_blue_j_2;

}

//10s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_2_general_y2005) {
	5: spriteset_conts_jrf_red_a_2;
	1: spriteset_conts_jrf_red_b_2;
	1: spriteset_conts_jrf_red_c_2;
	1: spriteset_conts_jrf_red_d_2;
	1: spriteset_conts_jrf_red_e_2;
	3: spriteset_conts_jrf_red_f_2;
	9: spriteset_conts_jrf_red_h_2;
	1: spriteset_conts_jrf_blue_g_2;
	7: spriteset_conts_jrf_blue_h_2;
    5: spriteset_conts_jrf_blue_i_2;
	9: spriteset_conts_jrf_blue_j_2;

}

//20s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_2_general_y2015) {
	12: spriteset_conts_jrf_red_a_2;
	9: spriteset_conts_jrf_red_b_2;
	17: spriteset_conts_jrf_red_c_2;
	7: spriteset_conts_jrf_red_d_2;
	8: spriteset_conts_jrf_red_e_2;
	7: spriteset_conts_jrf_red_f_2;
	3: spriteset_conts_jrf_red_h_2;
	7: spriteset_conts_jrf_red_i_2;
	4: spriteset_conts_jrf_red_j_2;

}


//food conts


//jnr reefer old style

random_switch(FEAT_TRAINS, SELF, random_conts_2_reefer_y1960) {
	2: spriteset_conts_jnr_reefer_a_2;
    5: spriteset_conts_jnr_reefer_b_2;
	2: spriteset_conts_jnr_green_c_2;
	2: spriteset_conts_jnr_green_d_2;
}

//jnr era private reefer

random_switch(FEAT_TRAINS, SELF, random_conts_2_reefer_y1970) {
	2: spriteset_conts_jnr_reefer_a_2;
	8: spriteset_conts_jnr_reefer_b_2;
	5: spriteset_conts_jnr_reefer_c_2;
	1: spriteset_conts_jnr_reefer_d_2;
	1: spriteset_conts_jnr_reefer_e_2;
	3: spriteset_conts_jnr_green_d_2;
	4: spriteset_conts_jnr_green_f_2;
	7: spriteset_conts_jnr_green_g_2;
}


//jnr reefer newer style

random_switch(FEAT_TRAINS, SELF, random_conts_2_reefer_y1980) {
	1: spriteset_conts_jnr_reefer_b_2;
    1: spriteset_conts_jnr_reefer_c_2;
	1: spriteset_conts_jnr_reefer_d_2;
	4: spriteset_conts_jnr_reefer_e_2;
	3: spriteset_conts_jnr_reefer_f_2;
	9: spriteset_conts_jnr_reefer_g_2;
	6: spriteset_conts_jnr_reefer_h_2;
	1: spriteset_conts_jnr_reefer_i_2;
	9: spriteset_conts_jnr_reefer_j_2;
	9: spriteset_conts_jnr_reefer_k_2;
	9: spriteset_conts_jnr_green_d_2;
    4: spriteset_conts_jnr_green_e_2;
	9: spriteset_conts_jnr_green_f_2;
	1: spriteset_conts_jnr_green_g_2;
    8: spriteset_conts_jrf_blue_b_2;
}

//private reefers jnr mixed

random_switch(FEAT_TRAINS, SELF, random_conts_2_reefer_y1990) {
	9: spriteset_conts_jnr_reefer_f_2;
	6: spriteset_conts_jnr_reefer_g_2;
	4: spriteset_conts_jnr_reefer_h_2;
	7: spriteset_conts_jnr_reefer_i_2;
	1: spriteset_conts_jnr_reefer_j_2;
	2: spriteset_conts_jnr_reefer_k_2;
	7: spriteset_conts_private_reefer_a_2;
    1: spriteset_conts_private_reefer_b_2;
	8: spriteset_conts_private_reefer_c_2;
	1: spriteset_conts_private_reefer_f_2;
	2: spriteset_conts_private_reefer_g_2;
	2: spriteset_conts_jnr_green_f_2;
	8: spriteset_conts_jnr_green_g_2;
    1: spriteset_conts_jrf_blue_b_2;
	9: spriteset_conts_jrf_blue_h_2;
    7: spriteset_conts_jrf_blue_i_2;

}

//private reefers only
random_switch(FEAT_TRAINS, SELF, random_conts_2_reefer_y2000) {
	8: spriteset_conts_jnr_reefer_f_2;
	2: spriteset_conts_jnr_reefer_g_2;
	1: spriteset_conts_jnr_reefer_j_2;
	2: spriteset_conts_jnr_reefer_k_2;
	6: spriteset_conts_private_reefer_a_2;
    8: spriteset_conts_private_reefer_b_2;
	8: spriteset_conts_private_reefer_c_2;
	4: spriteset_conts_private_reefer_d_2;
	6: spriteset_conts_private_reefer_e_2;
	6: spriteset_conts_private_reefer_f_2;
	6: spriteset_conts_private_reefer_g_2;
	1: spriteset_conts_private_reefer_h_2;
	9: spriteset_conts_private_reefer_i_2;
	5: spriteset_conts_private_reefer_j_2;
	2: spriteset_conts_jrf_red_b_2;
	3: spriteset_conts_jrf_red_c_2;
	1: spriteset_conts_jrf_red_d_2;
	1: spriteset_conts_jrf_blue_h_2;
    2: spriteset_conts_jrf_blue_i_2;
}


//private reefers modern
random_switch(FEAT_TRAINS, SELF, random_conts_2_reefer_y2010) {
	3: spriteset_conts_private_reefer_a_2;
    3: spriteset_conts_private_reefer_b_2;
	3: spriteset_conts_private_reefer_c_2;
	7: spriteset_conts_private_reefer_d_2;
    9: spriteset_conts_private_reefer_e_2;
	2: spriteset_conts_private_reefer_f_2;
    8: spriteset_conts_private_reefer_g_2;
	7: spriteset_conts_private_reefer_h_2;
	6: spriteset_conts_private_reefer_i_2;
	1: spriteset_conts_private_reefer_j_2;
	8: spriteset_conts_private_reefer_k_2;
	6: spriteset_conts_jrf_red_b_2;
	8: spriteset_conts_jrf_red_c_2;
	3: spriteset_conts_jrf_red_d_2;
	3: spriteset_conts_jrf_red_e_2;
	8: spriteset_conts_jrf_red_f_2;
}



//liquid conts


random_switch(FEAT_TRAINS, SELF, random_conts_2_liquid_y1960) {
	11: spriteset_conts_jnr_green_j_2;
    18: spriteset_conts_jnr_green_k_2;
	6: spriteset_conts_jnr_green_a_2;
    8: spriteset_conts_jnr_green_b_2;
	3: spriteset_conts_jnr_green_c_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_liquid_y1970) {
	9: spriteset_conts_jnr_green_j_2;
    2: spriteset_conts_jnr_green_k_2;
	6: spriteset_conts_private_tanker_a_2;
	8: spriteset_conts_private_tanker_b_2;
	2: spriteset_conts_private_tanker_c_2;
	9: spriteset_conts_private_tanker_g_2;
	2: spriteset_conts_private_tanker_h_2;
	9: spriteset_conts_jnr_green_d_2;
	3: spriteset_conts_jnr_green_f_2;
	1: spriteset_conts_jnr_green_g_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_liquid_y1980) {
	2: spriteset_conts_jnr_green_j_2;
    9: spriteset_conts_jnr_green_k_2;
	8: spriteset_conts_private_tanker_a_2;
	1: spriteset_conts_private_tanker_b_2;
	2: spriteset_conts_private_tanker_c_2;
	3: spriteset_conts_private_tanker_d_2;
	8: spriteset_conts_private_tanker_g_2;
	3: spriteset_conts_private_tanker_h_2;
	5: spriteset_conts_private_tanker_i_2;
    3: spriteset_conts_jnr_green_e_2;
	4: spriteset_conts_jnr_green_f_2;
	2: spriteset_conts_jnr_green_g_2;
    2: spriteset_conts_jrf_blue_b_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_liquid_y1990) {
	4: spriteset_conts_private_tanker_a_2;
	5: spriteset_conts_private_tanker_b_2;
	4: spriteset_conts_private_tanker_c_2;
	3: spriteset_conts_private_tanker_d_2;
	9: spriteset_conts_private_tanker_f_2;
	9: spriteset_conts_private_tanker_g_2;
	9: spriteset_conts_private_tanker_h_2;
	4: spriteset_conts_private_tanker_i_2;
	4: spriteset_conts_private_tanker_j_2;
	2: spriteset_conts_jnr_green_e_2;
	9: spriteset_conts_jnr_green_g_2;
    9: spriteset_conts_jrf_blue_b_2;
	4: spriteset_conts_jrf_blue_h_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_liquid_y2000) {
	8: spriteset_conts_private_tanker_a_2;
	2: spriteset_conts_private_tanker_b_2;
	5: spriteset_conts_private_tanker_c_2;
	8: spriteset_conts_private_tanker_d_2;
	6: spriteset_conts_private_tanker_e_2;
	6: spriteset_conts_private_tanker_f_2;
	2: spriteset_conts_private_tanker_g_2;
	8: spriteset_conts_private_tanker_h_2;
	1: spriteset_conts_private_tanker_i_2;
	1: spriteset_conts_private_tanker_j_2;
	1: spriteset_conts_private_tanker_k_2;
	3: spriteset_conts_jrf_red_b_2;
	5: spriteset_conts_jrf_red_c_2;
	8: spriteset_conts_jrf_blue_h_2;
    1: spriteset_conts_jrf_blue_i_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_liquid_y2010) {
	3: spriteset_conts_private_tanker_a_2;
	4: spriteset_conts_private_tanker_c_2;
	9: spriteset_conts_private_tanker_d_2;
	3: spriteset_conts_private_tanker_e_2;
	2: spriteset_conts_private_tanker_f_2;
	2: spriteset_conts_private_tanker_g_2;
	2: spriteset_conts_private_tanker_h_2;
	3: spriteset_conts_private_tanker_i_2;
	4: spriteset_conts_private_tanker_j_2;
	3: spriteset_conts_private_tanker_k_2;
	8: spriteset_conts_jrf_red_b_2;
	1: spriteset_conts_jrf_red_c_2;
	6: spriteset_conts_jrf_red_e_2;
	6: spriteset_conts_jrf_red_f_2;
}


//bulk conts

random_switch(FEAT_TRAINS, SELF, random_conts_2_bulk_y1960) {
    16: spriteset_conts_jnr_green_i_2;
	1: spriteset_conts_jnr_green_c_2;
	2: spriteset_conts_jnr_green_d_2;
}


random_switch(FEAT_TRAINS, SELF, random_conts_2_bulk_y1970) {
    4: spriteset_conts_jnr_green_i_2;
	1: spriteset_conts_private_bulk_a_2;
    5: spriteset_conts_private_bulk_b_2;
	4: spriteset_conts_jnr_green_d_2;
	2: spriteset_conts_jnr_green_f_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_bulk_y1980) {
    2: spriteset_conts_jnr_green_i_2;
	2: spriteset_conts_private_bulk_a_2;
    2: spriteset_conts_private_bulk_b_2;
	1: spriteset_conts_private_bulk_d_2;
	3: spriteset_conts_private_bulk_e_2;
	2: spriteset_conts_jnr_green_e_2;
	4: spriteset_conts_jnr_green_f_2;
	8: spriteset_conts_jnr_green_g_2;
    3: spriteset_conts_jrf_blue_b_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_bulk_y1990) {
	2: spriteset_conts_private_bulk_a_2;
    3: spriteset_conts_private_bulk_b_2;
	4: spriteset_conts_private_bulk_c_2;
	5: spriteset_conts_private_bulk_d_2;
	3: spriteset_conts_private_bulk_e_2;
	6: spriteset_conts_jnr_green_f_2;
	9: spriteset_conts_jnr_green_g_2;
    3: spriteset_conts_jrf_blue_b_2;
	2: spriteset_conts_jrf_blue_h_2;
    2: spriteset_conts_jrf_blue_i_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_bulk_y2000) {
	9: spriteset_conts_private_bulk_a_2;
    3: spriteset_conts_private_bulk_b_2;
	4: spriteset_conts_private_bulk_c_2;
	3: spriteset_conts_private_bulk_d_2;
	2: spriteset_conts_jrf_red_b_2;
	1: spriteset_conts_jrf_red_c_2;
	1: spriteset_conts_jrf_blue_h_2;
    7: spriteset_conts_jrf_blue_i_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_bulk_y2010) {
	7: spriteset_conts_private_bulk_a_2;
    1: spriteset_conts_private_bulk_b_2;
	2: spriteset_conts_private_bulk_c_2;
	5: spriteset_conts_private_bulk_d_2;
	3: spriteset_conts_jrf_red_b_2;
	2: spriteset_conts_jrf_red_c_2;
	3: spriteset_conts_jrf_red_f_2;
}


//lidded conts

random_switch(FEAT_TRAINS, SELF, random_conts_2_lidded_y1980) {
	9: spriteset_conts_private_bulk_f_2;
	4: spriteset_conts_private_bulk_j_2;
	7: spriteset_conts_private_bulk_k_2;
	3: spriteset_conts_jnr_green_f_2;
	2: spriteset_conts_jnr_green_g_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_lidded_y1990) {
	5: spriteset_conts_private_bulk_f_2;
    7: spriteset_conts_private_bulk_g_2;
	8: spriteset_conts_private_bulk_h_2;
	4: spriteset_conts_private_bulk_j_2;
	5: spriteset_conts_private_bulk_k_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_lidded_y2000) {
	8: spriteset_conts_private_bulk_f_2;
    6: spriteset_conts_private_bulk_g_2;
	6: spriteset_conts_private_bulk_h_2;
	3: spriteset_conts_private_bulk_i_2;
	9: spriteset_conts_private_bulk_k_2;
}


//mixed conts pre-private

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_y1960) {
	3: spriteset_conts_jnr_green_a_2;
    3: spriteset_conts_jnr_green_b_2;
	5: spriteset_conts_jnr_green_c_2;
	6: spriteset_conts_jnr_green_d_2;
	1: spriteset_conts_jnr_green_h_2;
	9: spriteset_conts_jnr_green_i_2;
	7: spriteset_conts_jnr_reefer_a_2;
}

//mixed private

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_private_y1970) {
	1: spriteset_conts_private_general_d_2;
	6: spriteset_conts_private_general_e_2;
	6: spriteset_conts_private_general_f_2;
	8: spriteset_conts_private_general_h_2;
	9: spriteset_conts_private_general_j_2;
	5: spriteset_conts_private_general_k_2;
	9: spriteset_conts_jnr_reefer_f_2;
	3: spriteset_conts_jnr_reefer_g_2;
	7: spriteset_conts_jnr_reefer_h_2;
	8: spriteset_conts_jnr_reefer_j_2;
	8: spriteset_conts_jnr_green_d_2;
	7: spriteset_conts_jnr_green_f_2;
	1: spriteset_conts_jnr_green_g_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_private_y1980) {
	9: spriteset_conts_private_general_d_2;
	8: spriteset_conts_private_general_e_2;
	3: spriteset_conts_private_general_f_2;
	7: spriteset_conts_private_general_h_2;
	1: spriteset_conts_private_general_j_2;
	4: spriteset_conts_private_general_k_2;
	8: spriteset_conts_jnr_reefer_f_2;
	4: spriteset_conts_jnr_reefer_g_2;
	3: spriteset_conts_jnr_reefer_h_2;
	8: spriteset_conts_jnr_reefer_i_2;
	3: spriteset_conts_jnr_reefer_j_2;
	4: spriteset_conts_jnr_green_d_2;
    8: spriteset_conts_jnr_green_e_2;
	6: spriteset_conts_jnr_green_f_2;
	8: spriteset_conts_jnr_green_g_2;
    1: spriteset_conts_jrf_blue_b_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_private_y1990) {
	9: spriteset_conts_private_general_b_2;
	2: spriteset_conts_private_general_d_2;
	7: spriteset_conts_private_general_e_2;
	4: spriteset_conts_private_general_h_2;
	6: spriteset_conts_private_general_i_2;
	8: spriteset_conts_private_general_j_2;
	9: spriteset_conts_private_general_k_2;
	6: spriteset_conts_jnr_reefer_f_2;
	8: spriteset_conts_jnr_reefer_g_2;
	2: spriteset_conts_jnr_reefer_h_2;
	5: spriteset_conts_jnr_reefer_i_2;
	1: spriteset_conts_jnr_reefer_j_2;
	1: spriteset_conts_private_reefer_f_2;
	4: spriteset_conts_private_reefer_g_2;
	1: spriteset_conts_jnr_green_f_2;
	7: spriteset_conts_jnr_green_g_2;
    2: spriteset_conts_jrf_blue_b_2;
	3: spriteset_conts_jrf_blue_h_2;
    6: spriteset_conts_jrf_blue_i_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_private_y2000) {
	7: spriteset_conts_private_general_b_2;
	3: spriteset_conts_private_general_c_2;
	8: spriteset_conts_private_general_d_2;
	3: spriteset_conts_private_general_e_2;
	9: spriteset_conts_private_general_g_2;
	2: spriteset_conts_private_general_h_2;
	8: spriteset_conts_private_general_i_2;
	6: spriteset_conts_private_general_k_2;
	4: spriteset_conts_private_reefer_f_2;
	3: spriteset_conts_private_reefer_g_2;
	4: spriteset_conts_private_reefer_h_2;
	8: spriteset_conts_private_reefer_i_2;
	7: spriteset_conts_jnr_reefer_f_2;
	3: spriteset_conts_jrf_red_g_2;
	1: spriteset_conts_jrf_red_b_2;
	7: spriteset_conts_jrf_red_c_2;
	3: spriteset_conts_jrf_red_d_2;
	4: spriteset_conts_jrf_blue_h_2;
    5: spriteset_conts_jrf_blue_i_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_private_y2010) {
	7: spriteset_conts_private_general_a_2;
	8: spriteset_conts_private_general_b_2;
	9: spriteset_conts_private_general_c_2;
	2: spriteset_conts_private_general_d_2;
	3: spriteset_conts_private_general_e_2;
	2: spriteset_conts_private_general_g_2;
	9: spriteset_conts_private_general_h_2;
	2: spriteset_conts_private_general_i_2;
	4: spriteset_conts_private_reefer_f_2;
	4: spriteset_conts_private_reefer_g_2;
	9: spriteset_conts_private_reefer_h_2;
	5: spriteset_conts_private_reefer_i_2;
	9: spriteset_conts_jrf_red_g_2;
	4: spriteset_conts_jrf_red_b_2;
	9: spriteset_conts_jrf_red_c_2;
	5: spriteset_conts_jrf_red_d_2;
	9: spriteset_conts_jrf_red_e_2;
	4: spriteset_conts_jrf_red_f_2;
}


//mixed food


random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_food_y1960) {
	7: spriteset_conts_jnr_reefer_a_2;
    7: spriteset_conts_jnr_reefer_b_2;
	3: spriteset_conts_jnr_green_c_2;
	8: spriteset_conts_jnr_green_d_2;
	3: spriteset_conts_jnr_green_h_2;
	9: spriteset_conts_jnr_green_j_2;
	9: spriteset_conts_jnr_green_k_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_food_y1970) {
	1: spriteset_conts_jnr_reefer_a_2;
	8: spriteset_conts_jnr_reefer_b_2;
	1: spriteset_conts_jnr_reefer_c_2;
	5: spriteset_conts_jnr_reefer_d_2;
	6: spriteset_conts_jnr_reefer_e_2;
	6: spriteset_conts_jnr_green_j_2;
	3: spriteset_conts_jnr_green_k_2;
	8: spriteset_conts_private_tanker_a_2;
	2: spriteset_conts_private_tanker_b_2;
	9: spriteset_conts_private_tanker_c_2;
	8: spriteset_conts_jnr_green_d_2;
	4: spriteset_conts_jnr_green_f_2;
	7: spriteset_conts_jnr_green_g_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_food_y1980) {
	7: spriteset_conts_jnr_reefer_c_2;
	1: spriteset_conts_jnr_reefer_d_2;
	9: spriteset_conts_jnr_reefer_e_2;
	6: spriteset_conts_jnr_reefer_f_2;
	4: spriteset_conts_jnr_reefer_g_2;
	2: spriteset_conts_jnr_reefer_h_2;
	8: spriteset_conts_jnr_green_j_2;
	8: spriteset_conts_jnr_green_k_2;
	4: spriteset_conts_private_tanker_a_2;
	3: spriteset_conts_private_tanker_b_2;
	9: spriteset_conts_private_tanker_c_2;
	4: spriteset_conts_private_tanker_g_2;
	1: spriteset_conts_private_tanker_h_2;
	1: spriteset_conts_private_tanker_i_2;
	1: spriteset_conts_jnr_green_d_2;
    2: spriteset_conts_jnr_green_e_2;
	9: spriteset_conts_jnr_green_f_2;
	5: spriteset_conts_jnr_green_g_2;
    6: spriteset_conts_jrf_blue_b_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_food_y1990) {
	9: spriteset_conts_jnr_reefer_g_2;
	8: spriteset_conts_jnr_reefer_h_2;
	7: spriteset_conts_jnr_reefer_i_2;
	8: spriteset_conts_jnr_reefer_j_2;
	4: spriteset_conts_jnr_reefer_k_2;
	5: spriteset_conts_jnr_green_j_2;
	2: spriteset_conts_jnr_green_k_2;
	2: spriteset_conts_private_tanker_a_2;
	1: spriteset_conts_private_tanker_b_2;
	8: spriteset_conts_private_tanker_c_2;
	6: spriteset_conts_private_tanker_g_2;
	7: spriteset_conts_private_tanker_h_2;
	7: spriteset_conts_private_tanker_i_2;
	5: spriteset_conts_jnr_green_f_2;
	9: spriteset_conts_jnr_green_g_2;
    8: spriteset_conts_jrf_blue_b_2;
	5: spriteset_conts_jrf_blue_h_2;
    2: spriteset_conts_jrf_blue_i_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_food_y2000) {
	4: spriteset_conts_jnr_reefer_i_2;
	2: spriteset_conts_jnr_reefer_j_2;
	7: spriteset_conts_jnr_reefer_k_2;
	4: spriteset_conts_private_reefer_a_2;
    1: spriteset_conts_private_reefer_b_2;
	7: spriteset_conts_private_reefer_c_2;
	8: spriteset_conts_private_reefer_f_2;
	2: spriteset_conts_private_reefer_g_2;
	1: spriteset_conts_jnr_green_k_2;
	4: spriteset_conts_private_tanker_d_2;
	2: spriteset_conts_private_tanker_f_2;
	2: spriteset_conts_private_tanker_g_2;
	5: spriteset_conts_private_tanker_h_2;
	4: spriteset_conts_private_tanker_i_2;
	1: spriteset_conts_private_tanker_j_2;
	3: spriteset_conts_jrf_red_b_2;
	6: spriteset_conts_jrf_red_c_2;
	2: spriteset_conts_jrf_red_d_2;
	1: spriteset_conts_jrf_blue_h_2;
    1: spriteset_conts_jrf_blue_i_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_food_y2010) {
	3: spriteset_conts_private_reefer_a_2;
    7: spriteset_conts_private_reefer_b_2;
	4: spriteset_conts_private_reefer_c_2;
	9: spriteset_conts_private_reefer_f_2;
	5: spriteset_conts_private_reefer_g_2;
	7: spriteset_conts_private_reefer_h_2;
	9: spriteset_conts_private_reefer_i_2;
	9: spriteset_conts_private_reefer_j_2;
	1: spriteset_conts_private_reefer_k_2;
	6: spriteset_conts_jnr_green_k_2;
	3: spriteset_conts_private_tanker_d_2;
	4: spriteset_conts_private_tanker_f_2;
	6: spriteset_conts_private_tanker_h_2;
	4: spriteset_conts_private_tanker_i_2;
	3: spriteset_conts_private_tanker_j_2;
	7: spriteset_conts_private_tanker_k_2;
	2: spriteset_conts_jrf_red_b_2;
	8: spriteset_conts_jrf_red_c_2;
	6: spriteset_conts_jrf_red_d_2;
	8: spriteset_conts_jrf_red_e_2;
	3: spriteset_conts_jrf_red_f_2;
}


//mixed liquid

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_liquid_y1960) {
	7: spriteset_conts_private_open_f_2;
	5: spriteset_conts_private_open_h_2;
	5: spriteset_conts_jnr_green_c_2;
	5: spriteset_conts_jnr_green_d_2;
	1: spriteset_conts_jnr_green_h_2;
	4: spriteset_conts_jnr_green_j_2;
	9: spriteset_conts_jnr_green_k_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_liquid_y1970) {
	4: spriteset_conts_private_general_e_2;
	3: spriteset_conts_private_general_f_2;
	4: spriteset_conts_private_general_h_2;
	2: spriteset_conts_private_general_j_2;
	8: spriteset_conts_private_general_k_2;
    7: spriteset_conts_private_open_g_2;
	4: spriteset_conts_private_open_h_2;
	4: spriteset_conts_private_tanker_a_2;
	9: spriteset_conts_private_tanker_b_2;
	8: spriteset_conts_private_tanker_c_2;
	3: spriteset_conts_private_tanker_g_2;
	6: spriteset_conts_jnr_green_d_2;
	7: spriteset_conts_jnr_green_f_2;
	5: spriteset_conts_jnr_green_g_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_liquid_y1980) {
	1: spriteset_conts_private_general_d_2;
	5: spriteset_conts_private_general_e_2;
	1: spriteset_conts_private_general_f_2;
	9: spriteset_conts_private_general_h_2;
	9: spriteset_conts_private_general_j_2;
	1: spriteset_conts_private_general_k_2;
    1: spriteset_conts_private_open_h_2;
	1: spriteset_conts_private_open_i_2;
	8: spriteset_conts_private_tanker_a_2;
	5: spriteset_conts_private_tanker_b_2;
	9: spriteset_conts_private_tanker_c_2;
	4: spriteset_conts_private_tanker_g_2;
	3: spriteset_conts_private_tanker_h_2;
	2: spriteset_conts_private_tanker_i_2;
	1: spriteset_conts_jnr_green_d_2;
    1: spriteset_conts_jnr_green_e_2;
	9: spriteset_conts_jnr_green_f_2;
	8: spriteset_conts_jnr_green_g_2;
    9: spriteset_conts_jrf_blue_b_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_liquid_y1990) {
	1: spriteset_conts_private_general_d_2;
	6: spriteset_conts_private_general_f_2;
	2: spriteset_conts_private_general_h_2;
	2: spriteset_conts_private_general_j_2;
	7: spriteset_conts_private_general_k_2;
    8: spriteset_conts_private_open_i_2;
	9: spriteset_conts_private_open_a_2;
	8: spriteset_conts_jnr_green_j_2;
	7: spriteset_conts_private_tanker_a_2;
	6: spriteset_conts_private_tanker_b_2;
	6: spriteset_conts_private_tanker_c_2;
	6: spriteset_conts_private_tanker_g_2;
	7: spriteset_conts_private_tanker_h_2;
	7: spriteset_conts_private_tanker_i_2;
	1: spriteset_conts_private_tanker_j_2;
	7: spriteset_conts_jnr_green_f_2;
	2: spriteset_conts_jnr_green_g_2;
    9: spriteset_conts_jrf_blue_b_2;
	6: spriteset_conts_jrf_blue_h_2;
    5: spriteset_conts_jrf_blue_i_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_liquid_y2000) {
	1: spriteset_conts_private_general_d_2;
	5: spriteset_conts_private_general_f_2;
	4: spriteset_conts_private_general_g_2;
	3: spriteset_conts_private_general_h_2;
    1: spriteset_conts_private_open_a_2;
	4: spriteset_conts_private_open_b_2;
	7: spriteset_conts_jnr_green_j_2;
	1: spriteset_conts_private_tanker_d_2;
	9: spriteset_conts_private_tanker_e_2;
	9: spriteset_conts_private_tanker_f_2;
	7: spriteset_conts_private_tanker_g_2;
	2: spriteset_conts_private_tanker_h_2;
	5: spriteset_conts_private_tanker_i_2;
	2: spriteset_conts_private_tanker_j_2;
	9: spriteset_conts_private_tanker_k_2;
	3: spriteset_conts_jrf_red_b_2;
	9: spriteset_conts_jrf_red_c_2;
	7: spriteset_conts_jrf_red_d_2;
	9: spriteset_conts_jrf_blue_h_2;
    1: spriteset_conts_jrf_blue_i_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_liquid_y2010) {
	8: spriteset_conts_private_general_e_2;
	9: spriteset_conts_private_general_g_2;
	9: spriteset_conts_private_general_h_2;
    1: spriteset_conts_private_open_b_2;
	9: spriteset_conts_private_open_k_2;
	8: spriteset_conts_jnr_green_j_2;
	1: spriteset_conts_private_tanker_d_2;
	6: spriteset_conts_private_tanker_e_2;
	7: spriteset_conts_private_tanker_f_2;
	4: spriteset_conts_private_tanker_g_2;
	6: spriteset_conts_private_tanker_h_2;
	5: spriteset_conts_private_tanker_i_2;
	9: spriteset_conts_private_tanker_j_2;
	4: spriteset_conts_private_tanker_k_2;
	3: spriteset_conts_jrf_red_a_2;
	9: spriteset_conts_jrf_red_b_2;
	7: spriteset_conts_jrf_red_c_2;
	2: spriteset_conts_jrf_red_d_2;
	1: spriteset_conts_jrf_red_e_2;
	4: spriteset_conts_jrf_red_f_2;
}


//mixed open

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_open_y1960) {
    4: spriteset_conts_jnr_green_b_2;
    8: spriteset_conts_jnr_green_c_2;
    9: spriteset_conts_jnr_green_d_2;
	2: spriteset_conts_private_open_f_2;
	7: spriteset_conts_private_open_h_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_open_y1970) {
	7: spriteset_conts_jnr_green_a_2;
    9: spriteset_conts_jnr_green_b_2;
	1: spriteset_conts_jnr_green_c_2;
	5: spriteset_conts_jnr_green_d_2;
	3: spriteset_conts_jnr_green_f_2;
	3: spriteset_conts_jnr_green_g_2;
	6: spriteset_conts_private_open_f_2;
    7: spriteset_conts_private_open_g_2;
	7: spriteset_conts_private_open_h_2;
	2: spriteset_conts_private_open_j_2;

}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_open_y1980) {
	6: spriteset_conts_jnr_green_c_2;
	9: spriteset_conts_jnr_green_d_2;
    4: spriteset_conts_jnr_green_e_2;
	9: spriteset_conts_jnr_green_f_2;
	3: spriteset_conts_jnr_green_g_2;
	4: spriteset_conts_jrf_blue_a_2;
    6: spriteset_conts_jrf_blue_b_2;
	9: spriteset_conts_jrf_blue_c_2;
	7: spriteset_conts_jrf_blue_d_2;
	6: spriteset_conts_jrf_blue_e_2;
	4: spriteset_conts_private_open_f_2;
    5: spriteset_conts_private_open_g_2;
	2: spriteset_conts_private_open_h_2;
	8: spriteset_conts_private_open_i_2;
	2: spriteset_conts_private_open_j_2;
	8: spriteset_conts_private_open_k_2;
	2: spriteset_conts_private_general_e_2;
	1: spriteset_conts_private_general_f_2;
	1: spriteset_conts_private_general_h_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_open_y1990) {
    9: spriteset_conts_jnr_green_e_2;
	2: spriteset_conts_jnr_green_f_2;
	8: spriteset_conts_jrf_blue_c_2;
	7: spriteset_conts_jrf_blue_e_2;
	7: spriteset_conts_jrf_blue_h_2;
    7: spriteset_conts_jrf_blue_i_2;
	2: spriteset_conts_jrf_blue_j_2;
    7: spriteset_conts_private_open_a_2;
	4: spriteset_conts_private_open_e_2;
	8: spriteset_conts_private_open_f_2;
    1: spriteset_conts_private_open_g_2;
	4: spriteset_conts_private_open_h_2;
	9: spriteset_conts_private_open_i_2;
	8: spriteset_conts_private_general_e_2;
	5: spriteset_conts_private_general_h_2;
	5: spriteset_conts_private_general_i_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_open_y2000) {
	1: spriteset_conts_jrf_blue_c_2;
	1: spriteset_conts_jrf_blue_g_2;
	4: spriteset_conts_jrf_blue_h_2;
    1: spriteset_conts_jrf_blue_i_2;
	5: spriteset_conts_jrf_blue_j_2;
	5: spriteset_conts_jrf_red_b_2;
	9: spriteset_conts_jrf_red_c_2;
	4: spriteset_conts_jrf_red_d_2;
	2: spriteset_conts_jrf_red_e_2;
	8: spriteset_conts_jrf_red_g_2;
    1: spriteset_conts_private_open_a_2;
	8: spriteset_conts_private_open_d_2;
	9: spriteset_conts_private_open_e_2;
	7: spriteset_conts_private_open_g_2;
	6: spriteset_conts_private_open_i_2;
	5: spriteset_conts_private_open_j_2;
	1: spriteset_conts_private_general_a_2;
	4: spriteset_conts_private_general_g_2;
	9: spriteset_conts_private_general_i_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_open_y2010) {
	6: spriteset_conts_jrf_red_a_2;
	2: spriteset_conts_jrf_red_b_2;
	7: spriteset_conts_jrf_red_c_2;
	3: spriteset_conts_jrf_red_d_2;
	7: spriteset_conts_jrf_red_e_2;
	1: spriteset_conts_jrf_red_f_2;
	9: spriteset_conts_jrf_red_g_2;
	6: spriteset_conts_jrf_red_h_2;
    2: spriteset_conts_jrf_red_i_2;
	7: spriteset_conts_jrf_red_j_2;
    8: spriteset_conts_private_open_a_2;
	3: spriteset_conts_private_open_b_2;
	7: spriteset_conts_private_open_c_2;
	6: spriteset_conts_private_open_d_2;
	8: spriteset_conts_private_open_e_2;
	8: spriteset_conts_private_open_k_2;
	7: spriteset_conts_private_general_a_2;
	4: spriteset_conts_private_general_d_2;
	2: spriteset_conts_private_general_g_2;
}



//mixed vented


random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_vented_y1960) {

	4: spriteset_conts_jnr_green_a_2;
    6: spriteset_conts_jnr_green_b_2;
	8: spriteset_conts_jnr_green_h_2;

}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_vented_y1970) {

	8: spriteset_conts_jnr_green_f_2;
    4: spriteset_conts_jnr_green_g_2;
	8: spriteset_conts_jnr_green_h_2;

}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_vented_y1980) {

	9: spriteset_conts_jnr_green_e_2;
	6: spriteset_conts_jnr_green_f_2;
    6: spriteset_conts_jnr_green_g_2;
	6: spriteset_conts_jnr_green_h_2;
	2: spriteset_conts_private_general_d_2;
	2: spriteset_conts_private_general_e_2;
	7: spriteset_conts_private_general_f_2;
	6: spriteset_conts_private_general_j_2;
	1: spriteset_conts_jrf_blue_b_2;
	5: spriteset_conts_jrf_blue_c_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_vented_y1990) {
	9: spriteset_conts_jnr_green_e_2;
	4: spriteset_conts_jnr_green_f_2;
    2: spriteset_conts_jnr_green_g_2;
	2: spriteset_conts_private_general_d_2;
	8: spriteset_conts_private_general_e_2;
	1: spriteset_conts_private_general_f_2;
	1: spriteset_conts_private_general_g_2;
	7: spriteset_conts_private_general_j_2;
	8: spriteset_conts_jrf_blue_c_2;
	6: spriteset_conts_jrf_blue_f_2;
	6: spriteset_conts_jrf_blue_h_2;
	7: spriteset_conts_jrf_blue_i_2;
	7: spriteset_conts_jrf_blue_j_2;
	6: spriteset_conts_jrf_blue_k_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_vented_y2000) {
	8: spriteset_conts_private_general_d_2;
	3: spriteset_conts_private_general_e_2;
	9: spriteset_conts_private_general_f_2;
	7: spriteset_conts_private_general_g_2;
	1: spriteset_conts_private_general_j_2;
	4: spriteset_conts_jrf_blue_b_2;
	4: spriteset_conts_jrf_blue_c_2;
	6: spriteset_conts_jrf_blue_f_2;
	3: spriteset_conts_jrf_blue_h_2;
	6: spriteset_conts_jrf_blue_i_2;
	1: spriteset_conts_jrf_blue_j_2;
	1: spriteset_conts_jrf_blue_k_2;
	2: spriteset_conts_jrf_red_c_2;
	9: spriteset_conts_jrf_red_d_2;
	1: spriteset_conts_jrf_red_e_2;
	1: spriteset_conts_jrf_red_k_2;
}

random_switch(FEAT_TRAINS, SELF, random_conts_2_mixed_vented_y2010) {
	3: spriteset_conts_private_general_d_2;
	7: spriteset_conts_private_general_e_2;
	8: spriteset_conts_private_general_f_2;
	5: spriteset_conts_private_general_g_2;
	1: spriteset_conts_jrf_blue_f_2;
	6: spriteset_conts_jrf_blue_k_2;
	7: spriteset_conts_jrf_red_a_2;
	1: spriteset_conts_jrf_red_b_2;
	6: spriteset_conts_jrf_red_c_2;
	3: spriteset_conts_jrf_red_d_2;
	4: spriteset_conts_jrf_red_e_2;
	8: spriteset_conts_jrf_red_f_2;
	3: spriteset_conts_jrf_red_k_2;
}


//final year switches _2

switch(FEAT_TRAINS, SELF, switch_conts_2_general_year, current_year) {
	0..1970: random_conts_jnr_green_2_general_y1960;
	
	1970..1980: random_conts_jnr_green_2_general_y1970;
	1980..1985: random_conts_jnr_green_2_general_y1980;
	1985..1990: random_conts_jnr_blue_2_general_y1985;
	1990..1995: random_conts_jrf_blue_2_general_y1990;
	1995..2000: random_conts_jrf_blue_2_general_y1995;
	2000..2005: random_conts_jrf_red_2_general_y2000;
	2005..2015: random_conts_jrf_red_2_general_y2005;
	random_conts_jrf_red_2_general_y2015;
	}

switch(FEAT_TRAINS, SELF, switch_conts_2_food_year, current_year) {
	0..1970: random_conts_2_reefer_y1960;
	1970..1980: random_conts_2_reefer_y1970;
	1980..1990: random_conts_2_reefer_y1980;
	1990..2001: random_conts_2_reefer_y1990;
    2001..2011: random_conts_2_reefer_y2000;
	random_conts_2_reefer_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_2_liquid_year, current_year) {
	0..1970: random_conts_2_liquid_y1960;
	1970..1980: random_conts_2_liquid_y1970;
	1980..1990: random_conts_2_liquid_y1980;
	1990..2001: random_conts_2_liquid_y1990;
    2001..2011: random_conts_2_liquid_y2000;
	random_conts_2_liquid_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_2_bulk_year, current_year) {
	0..1970: random_conts_2_bulk_y1960;
	1970..1980: random_conts_2_bulk_y1970;
    1980..1990: random_conts_2_bulk_y1980;
    1990..2000: random_conts_2_bulk_y1990;
	2000..2010: random_conts_2_bulk_y2000;
	random_conts_2_bulk_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_2_lidded_year, current_year) {
	0..1970: random_conts_jnr_green_2_general_y1960;
	1970..1980: random_conts_jnr_green_2_general_y1970;
    1980..1990: random_conts_2_lidded_y1980;
    1990..2000: random_conts_2_lidded_y1990;
	random_conts_2_lidded_y2000;
	}
	

switch(FEAT_TRAINS, SELF, switch_conts_2_mixed_private_year, current_year) {
	0..1972: random_conts_2_mixed_y1960;
	1972..1982: random_conts_2_mixed_private_y1970;
    1982..1992: random_conts_2_mixed_private_y1980;
	1992..2002: random_conts_2_mixed_private_y1990;
    2002..2012: random_conts_2_mixed_private_y2000;
	random_conts_2_mixed_private_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_2_mixed_food_year, current_year) {
	0..1972: random_conts_2_mixed_food_y1960;
	1972..1982: random_conts_2_mixed_food_y1970;
    1982..1992: random_conts_2_mixed_food_y1980;
	1992..2002: random_conts_2_mixed_food_y1990;
    2002..2012: random_conts_2_mixed_food_y2000;
	random_conts_2_mixed_food_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_2_mixed_liquid_year, current_year) {
	0..1972: random_conts_2_mixed_liquid_y1960;
	1972..1982: random_conts_2_mixed_liquid_y1970;
    1982..1992: random_conts_2_mixed_liquid_y1980;
	1992..2002: random_conts_2_mixed_liquid_y1990;
    2002..2012: random_conts_2_mixed_liquid_y2000;
	random_conts_2_mixed_liquid_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_2_mixed_open_year, current_year) {
	0..1970: random_conts_2_mixed_open_y1960;
	1970..1981: random_conts_2_mixed_open_y1970;
	1981..1991: random_conts_2_mixed_open_y1980;
	1991..2003: random_conts_2_mixed_open_y1990;
    2003..2016: random_conts_2_mixed_open_y2000;
	random_conts_2_mixed_open_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_2_mixed_vented_year, current_year) {
	0..1970: random_conts_2_mixed_vented_y1960;
	1970..1980: random_conts_2_mixed_vented_y1970;
	1980..1990: random_conts_2_mixed_vented_y1980;
	1990..2001: random_conts_2_mixed_vented_y1990;
    2001..2013: random_conts_2_mixed_vented_y2000;
	random_conts_2_mixed_vented_y2010;
	}


//conts 
//cont types a,b,c,d
//cont position 1,2,3,4

spriteset(spriteset_conts_jnr_green_a_1, "gfx/containers/jnr_green.png") { //old
	template_container_1(1, 1)
}

//b

spriteset(spriteset_conts_jnr_green_b_1, "gfx/containers/jnr_green.png") { //old 
	template_container_1(1, 32)
}

//c

spriteset(spriteset_conts_jnr_green_c_1, "gfx/containers/jnr_green.png") {
	template_container_1(1, 64)
}

alternative_sprites(spriteset_conts_jnr_green_c_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_1(1, 64)
}

//d

spriteset(spriteset_conts_jnr_green_d_1, "gfx/containers/jnr_green.png") {
	template_container_1(1, 96)
}

alternative_sprites(spriteset_conts_jnr_green_d_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_1(1, 96)
}

//e

spriteset(spriteset_conts_jnr_green_e_1, "gfx/containers/jnr_green.png") { //red
	template_container_1(1, 128)
}

alternative_sprites(spriteset_conts_jnr_green_e_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_1(1, 128)
}

//f

spriteset(spriteset_conts_jnr_green_f_1, "gfx/containers/jnr_green.png") { //white
	template_container_1(1, 160)
}

alternative_sprites(spriteset_conts_jnr_green_f_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_1(1, 160)
}

//g

spriteset(spriteset_conts_jnr_green_g_1, "gfx/containers/jnr_green.png") { //blue
	template_container_1(1, 192)
}

alternative_sprites(spriteset_conts_jnr_green_g_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_1(1, 192)
}

//h

spriteset(spriteset_conts_jnr_green_h_1, "gfx/containers/jnr_green.png") { //vent
	template_container_1(1, 224)
}

alternative_sprites(spriteset_conts_jnr_green_h_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_1(1, 224)
}

//i

spriteset(spriteset_conts_jnr_green_i_1, "gfx/containers/jnr_green.png") { //hopper
	template_container_1(1, 256)
}

alternative_sprites(spriteset_conts_jnr_green_i_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_1(1, 256)
}


//j

spriteset(spriteset_conts_jnr_green_j_1, "gfx/containers/jnr_green.png") { //tank a
	template_container_1(1, 288)
}

alternative_sprites(spriteset_conts_jnr_green_j_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_1(1, 288)
}

//k

spriteset(spriteset_conts_jnr_green_k_1, "gfx/containers/jnr_green.png") { //tank b
	template_container_1(1, 320)
}

alternative_sprites(spriteset_conts_jnr_green_k_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jnr_green_32.png") {
	template_container_1(1, 320)
}


//JNR/JRF blue  general conts
//cont types a,b,c,d
//cont position 1,2,3,4

spriteset(spriteset_conts_jrf_blue_a_1, "gfx/containers/jrf_blue.png") { //old plain blue
	template_container_1(1, 1)
}

//b

spriteset(spriteset_conts_jrf_blue_b_1, "gfx/containers/jrf_blue.png") { //old blue red logo
	template_container_1(1, 32)
}

//c

spriteset(spriteset_conts_jrf_blue_c_1, "gfx/containers/jrf_blue.png") { //old blue white logo
	template_container_1(1, 64)
}


//d

spriteset(spriteset_conts_jrf_blue_d_1, "gfx/containers/jrf_blue.png") { //old blue white stripe red logo
	template_container_1(1, 96)
}

//e

spriteset(spriteset_conts_jrf_blue_e_1, "gfx/containers/jrf_blue.png") { //jnr blue white stripe white logo
	template_container_1(1, 128)
}



//f

spriteset(spriteset_conts_jrf_blue_f_1, "gfx/containers/jrf_blue.png") { //jrf hokkaido vent white
	template_container_1(1, 160)
}


//g

spriteset(spriteset_conts_jrf_blue_g_1, "gfx/containers/jrf_blue.png") { //jrf _/ red logo
	template_container_1(1, 192)
}




//h

spriteset(spriteset_conts_jrf_blue_h_1, "gfx/containers/jrf_blue.png") { //jrf _/^
	template_container_1(1, 224)
}


//i

spriteset(spriteset_conts_jrf_blue_i_1, "gfx/containers/jrf_blue.png") { //jrf __/
	template_container_1(1, 256)
}



//j

spriteset(spriteset_conts_jrf_blue_j_1, "gfx/containers/jrf_blue.png") { //jrf swoosh
	template_container_1(1, 288)
}



//k

spriteset(spriteset_conts_jrf_blue_k_1, "gfx/containers/jrf_blue.png") { //jrf vent
	template_container_1(1, 320)
}


//JRF red  general conts
//cont types a,b,c,d
//cont position 1,2,3,4


spriteset(spriteset_conts_jrf_red_a_1, "gfx/containers/jrf_red.png") { //plain red
	template_container_1(1, 1)
}


//b

spriteset(spriteset_conts_jrf_red_b_1, "gfx/containers/jrf_red.png") { //red small logo
	template_container_1(1, 32)
}

//c

spriteset(spriteset_conts_jrf_red_c_1, "gfx/containers/jrf_red.png") { //red big logo
	template_container_1(1, 64)
}


//d

spriteset(spriteset_conts_jrf_red_d_1, "gfx/containers/jrf_red.png") { //red logo
	template_container_1(1, 96)
}

//e

spriteset(spriteset_conts_jrf_red_e_1, "gfx/containers/jrf_red.png") { //red black
	template_container_1(1, 128)
}



//f

spriteset(spriteset_conts_jrf_red_f_1, "gfx/containers/jrf_red.png") { //red ribbed
	template_container_1(1, 160)
}


//g

spriteset(spriteset_conts_jrf_red_g_1, "gfx/containers/jrf_red.png") { //jrf grey
	template_container_1(1, 192)
}




//h

spriteset(spriteset_conts_jrf_red_h_1, "gfx/containers/jrf_red.png") { //white jrf
	template_container_1(1, 224)
}


//i

spriteset(spriteset_conts_jrf_red_i_1, "gfx/containers/jrf_red.png") { //green jrf
	template_container_1(1, 256)
}

alternative_sprites(spriteset_conts_jrf_red_i_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jrf_red_32.png") {
	template_container_1(1, 256)
}


//j

spriteset(spriteset_conts_jrf_red_j_1, "gfx/containers/jrf_red.png") { //jrf eco
	template_container_1(1, 288)
}

alternative_sprites(spriteset_conts_jrf_red_j_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/jrf_red_32.png") {
	template_container_1(1, 288)
}

//k

spriteset(spriteset_conts_jrf_red_k_1, "gfx/containers/jrf_red.png") { //jrf vent
	template_container_1(1, 320)
}




//jnr reefer conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_jnr_reefer_a_1, "gfx/containers/jnr_reefer.png") { //old white
	template_container_1(1, 1)
}

//b

spriteset(spriteset_conts_jnr_reefer_b_1, "gfx/containers/jnr_reefer.png") { //old red logo
	template_container_1(1, 32)
}

//c

spriteset(spriteset_conts_jnr_reefer_c_1, "gfx/containers/jnr_reefer.png") { //blue stripe
	template_container_1(1, 64)
}

//d

spriteset(spriteset_conts_jnr_reefer_d_1, "gfx/containers/jnr_reefer.png") { //blue bottom 
	template_container_1(1, 96)
}

//e

spriteset(spriteset_conts_jnr_reefer_e_1, "gfx/containers/jnr_reefer.png") { //blue bottom red logo
	template_container_1(1, 128)
}


//f

spriteset(spriteset_conts_jnr_reefer_f_1, "gfx/containers/jnr_reefer.png") { //white
	template_container_1(1, 160)
}

//g

spriteset(spriteset_conts_jnr_reefer_g_1, "gfx/containers/jnr_reefer.png") { //blue
	template_container_1(1, 192)
}

//h

spriteset(spriteset_conts_jnr_reefer_h_1, "gfx/containers/jnr_reefer.png") { //vent
	template_container_1(1, 224)
}

//i

spriteset(spriteset_conts_jnr_reefer_i_1, "gfx/containers/jnr_reefer.png") { //hopper
	template_container_1(1, 256)
}


//j

spriteset(spriteset_conts_jnr_reefer_j_1, "gfx/containers/jnr_reefer.png") { //tank a
	template_container_1(1, 288)
}

//k

spriteset(spriteset_conts_jnr_reefer_k_1, "gfx/containers/jnr_reefer.png") { //tank b
	template_container_1(1, 320)
}




//private general conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_general_a_1, "gfx/containers/private_containers.png") { //jfe dolphins
	template_container_1(1, 1)
}


//b

spriteset(spriteset_conts_private_general_b_1, "gfx/containers/private_containers.png") { //nippon soda blue
	template_container_1(1, 32)
}

//c

spriteset(spriteset_conts_private_general_c_1, "gfx/containers/private_containers.png") { //nippon soda red
	template_container_1(1, 64)
}


//d

spriteset(spriteset_conts_private_general_d_1, "gfx/containers/private_containers.png") { //grey red
	template_container_1(1, 96)
}

//e

spriteset(spriteset_conts_private_general_e_1, "gfx/containers/private_containers.png") { //grey cc boue
	template_container_1(1, 128)
}



//f

spriteset(spriteset_conts_private_general_f_1, "gfx/containers/private_containers.png") { //grey cc green
	template_container_1(1, 160)
}


//g

spriteset(spriteset_conts_private_general_g_1, "gfx/containers/private_containers.png") { //lt blue
	template_container_1(1, 192)
}




//h

spriteset(spriteset_conts_private_general_h_1, "gfx/containers/private_containers.png") { //pink
	template_container_1(1, 224)
}


//i

spriteset(spriteset_conts_private_general_i_1, "gfx/containers/private_containers.png") { //reed blue
	template_container_1(1, 256)
}



//j

spriteset(spriteset_conts_private_general_j_1, "gfx/containers/private_containers.png") { //pink green
	template_container_1(1, 288)
}



//k

spriteset(spriteset_conts_private_general_k_1, "gfx/containers/private_containers.png") { //cc green
	template_container_1(1, 320)
}




//private reefer conts, new type
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_reefer_a_1, "gfx/containers/private_reefers.png") { //yanmar
	template_container_1(1, 1)
}


//b

spriteset(spriteset_conts_private_reefer_b_1, "gfx/containers/private_reefers.png") { //other
	template_container_1(1, 32)
}

//c

spriteset(spriteset_conts_private_reefer_c_1, "gfx/containers/private_reefers.png") { //other
	template_container_1(1, 64)
}


//d

spriteset(spriteset_conts_private_reefer_d_1, "gfx/containers/private_reefers.png") { //jot cool
	template_container_1(1, 96)
}

//e

spriteset(spriteset_conts_private_reefer_e_1, "gfx/containers/private_reefers.png") { //jot cool
	template_container_1(1, 128)
}



//f

spriteset(spriteset_conts_private_reefer_f_1, "gfx/containers/private_reefers.png") { //jfc
	template_container_1(1, 160)
}


//g

spriteset(spriteset_conts_private_reefer_g_1, "gfx/containers/private_reefers.png") { //jot green
	template_container_1(1, 192)
}




//h

spriteset(spriteset_conts_private_reefer_h_1, "gfx/containers/private_reefers.png") { //jot red
	template_container_1(1, 224)
}


//i

spriteset(spriteset_conts_private_reefer_i_1, "gfx/containers/private_reefers.png") { //jot blue
	template_container_1(1, 256)
}



//j

spriteset(spriteset_conts_private_reefer_j_1, "gfx/containers/private_reefers.png") { //jot new
	template_container_1(1, 288)
}



//k

spriteset(spriteset_conts_private_reefer_k_1, "gfx/containers/private_reefers.png") { //orange
	template_container_1(1, 320)
}




//private tanker conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_tanker_a_1, "gfx/containers/private_tankers.png") { //grey frameless
	template_container_1(1, 1)
}


//b

spriteset(spriteset_conts_private_tanker_b_1, "gfx/containers/private_tankers.png") { //black frameless
	template_container_1(1, 32)
}

//c

spriteset(spriteset_conts_private_tanker_c_1, "gfx/containers/private_tankers.png") { //silver frameless
	template_container_1(1, 64)
}


//d

spriteset(spriteset_conts_private_tanker_d_1, "gfx/containers/private_tankers.png") { //blue frame
	template_container_1(1, 96)
}

//e

spriteset(spriteset_conts_private_tanker_e_1, "gfx/containers/private_tankers.png") { //yellow frame
	template_container_1(1, 128)
}



//f

spriteset(spriteset_conts_private_tanker_f_1, "gfx/containers/private_tankers.png") { //green frame
	template_container_1(1, 160)
}


//g

spriteset(spriteset_conts_private_tanker_g_1, "gfx/containers/private_tankers.png") { //cream 
	template_container_1(1, 192)
}




//h

spriteset(spriteset_conts_private_tanker_h_1, "gfx/containers/private_tankers.png") { //blue white
	template_container_1(1, 224)
}


//i

spriteset(spriteset_conts_private_tanker_i_1, "gfx/containers/private_tankers.png") { //green white
	template_container_1(1, 256)
}



//j

spriteset(spriteset_conts_private_tanker_j_1, "gfx/containers/private_tankers.png") { //cc green
	template_container_1(1, 288)
}



//k

spriteset(spriteset_conts_private_tanker_k_1, "gfx/containers/private_tankers.png") { //cc blue
	template_container_1(1, 320)
}




//private bulk conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_bulk_a_1, "gfx/containers/private_bulktainers.png") { //hopper grey
	template_container_1(1, 1)
}


//b

spriteset(spriteset_conts_private_bulk_b_1, "gfx/containers/private_bulktainers.png") { //hopper white
	template_container_1(1, 32)
}

//c

spriteset(spriteset_conts_private_bulk_c_1, "gfx/containers/private_bulktainers.png") { //hopper clay
	template_container_1(1, 64)
}


//d

spriteset(spriteset_conts_private_bulk_d_1, "gfx/containers/private_bulktainers.png") { //hopper mcl
	template_container_1(1, 96)
}

//e

spriteset(spriteset_conts_private_bulk_e_1, "gfx/containers/private_bulktainers.png") { //hopper blue
	template_container_1(1, 128)
}



//f

spriteset(spriteset_conts_private_bulk_f_1, "gfx/containers/private_bulktainers.png") { //white short
	template_container_1(1, 160)
}


//g

spriteset(spriteset_conts_private_bulk_g_1, "gfx/containers/private_bulktainers.png") { //white tall
	template_container_1(1, 192)
}




//h

spriteset(spriteset_conts_private_bulk_h_1, "gfx/containers/private_bulktainers.png") { //white short
	template_container_1(1, 224)
}


//i

spriteset(spriteset_conts_private_bulk_i_1, "gfx/containers/private_bulktainers.png") { //white tall
	template_container_1(1, 256)
}



//j

spriteset(spriteset_conts_private_bulk_j_1, "gfx/containers/private_bulktainers.png") { //green short
	template_container_1(1, 288)
}

alternative_sprites(spriteset_conts_private_bulk_j_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/private_bulktainers_32.png") {
	template_container_1(1, 288)
}

//k

spriteset(spriteset_conts_private_bulk_k_1, "gfx/containers/private_bulktainers.png") { //green tall
	template_container_1(1, 320)
}

alternative_sprites(spriteset_conts_private_bulk_k_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/containers/private_bulktainers_32.png") {
	template_container_1(1, 320)
}



//private open conts
//cont types a,b,c,d
//cont position 1,2,3,4

//a

spriteset(spriteset_conts_private_open_a_1, "gfx/containers/private_opentainers.png") { //hopper grey
	template_container_1(1, 1)
}


//b

spriteset(spriteset_conts_private_open_b_1, "gfx/containers/private_opentainers.png") { //hopper white
	template_container_1(1, 32)
}

//c

spriteset(spriteset_conts_private_open_c_1, "gfx/containers/private_opentainers.png") { //hopper clay
	template_container_1(1, 64)
}


//d

spriteset(spriteset_conts_private_open_d_1, "gfx/containers/private_opentainers.png") { //hopper mcl
	template_container_1(1, 96)
}

//e

spriteset(spriteset_conts_private_open_e_1, "gfx/containers/private_opentainers.png") { //hopper blue
	template_container_1(1, 128)
}



//f

spriteset(spriteset_conts_private_open_f_1, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_1(1, 160)
}


//g

spriteset(spriteset_conts_private_open_g_1, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_1(1, 192)
}




//h

spriteset(spriteset_conts_private_open_h_1, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_1(1, 224)
}


//i

spriteset(spriteset_conts_private_open_i_1, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_1(1, 256)
}



//j

spriteset(spriteset_conts_private_open_j_1, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_1(1, 288)
}



//k

spriteset(spriteset_conts_private_open_k_1, "gfx/containers/private_opentainers.png") { //open tarp
	template_container_1(1, 320)
}




//randoms for variation

//general conts

//60s era JNR green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_1_general_y1960) {
	6: spriteset_conts_jnr_green_a_1;
    8: spriteset_conts_jnr_green_b_1;
	5: spriteset_conts_jnr_green_c_1;
	2: spriteset_conts_jnr_green_d_1;
}

//70s era JNR green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_1_general_y1970) {
	6: spriteset_conts_jnr_green_a_1;
    8: spriteset_conts_jnr_green_b_1;
	5: spriteset_conts_jnr_green_c_1;
	2: spriteset_conts_jnr_green_d_1;
	10: spriteset_conts_jnr_green_f_1;
	6: spriteset_conts_jnr_green_g_1;
}
//80s era mixed blue/green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_green_1_general_y1980) {
	5: spriteset_conts_jnr_green_c_1;
	2: spriteset_conts_jnr_green_d_1;
    3: spriteset_conts_jnr_green_e_1;
	10: spriteset_conts_jnr_green_f_1;
	6: spriteset_conts_jnr_green_g_1;
}
//late 80s mixed blue green
random_switch(FEAT_TRAINS, SELF, random_conts_jnr_blue_1_general_y1985) {
	1: spriteset_conts_jrf_blue_a_1;
    1: spriteset_conts_jrf_blue_b_1;
	1: spriteset_conts_jrf_blue_c_1;
	1: spriteset_conts_jrf_blue_d_1;
	1: spriteset_conts_jrf_blue_e_1;
	5: spriteset_conts_jnr_green_c_1;
	2: spriteset_conts_jnr_green_d_1;
    9: spriteset_conts_jnr_green_e_1;
	9: spriteset_conts_jnr_green_f_1;
	10: spriteset_conts_jnr_green_g_1;
}
//90s blue jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_blue_1_general_y1990) {
	1: spriteset_conts_jrf_blue_a_1;
    1: spriteset_conts_jrf_blue_b_1;
	1: spriteset_conts_jrf_blue_c_1;
	1: spriteset_conts_jrf_blue_d_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
	6: spriteset_conts_jrf_blue_j_1;
    9: spriteset_conts_jnr_green_e_1;
	9: spriteset_conts_jnr_green_f_1;
	9: spriteset_conts_jnr_green_g_1;
}
//90s mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_blue_1_general_y1995) {
	7: spriteset_conts_jrf_red_b_1;
    1: spriteset_conts_jrf_blue_b_1;
	1: spriteset_conts_jrf_blue_c_1;
	1: spriteset_conts_jrf_blue_d_1;
	1: spriteset_conts_jrf_blue_e_1;
	6: spriteset_conts_jrf_blue_g_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
	6: spriteset_conts_jrf_blue_j_1;
    1: spriteset_conts_jnr_green_e_1;
	1: spriteset_conts_jnr_green_f_1;
	1: spriteset_conts_jnr_green_g_1;
}
//00s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_1_general_y2000) {
	7: spriteset_conts_jrf_red_b_1;
	7: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_red_e_1;
    1: spriteset_conts_jrf_blue_b_1;
	1: spriteset_conts_jrf_blue_c_1;
	1: spriteset_conts_jrf_blue_d_1;
	1: spriteset_conts_jrf_blue_e_1;
	1: spriteset_conts_jrf_blue_g_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
	6: spriteset_conts_jrf_blue_j_1;

}

//10s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_1_general_y2005) {
	7: spriteset_conts_jrf_red_a_1;
	7: spriteset_conts_jrf_red_b_1;
	7: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_red_e_1;
	6: spriteset_conts_jrf_red_f_1;
	4: spriteset_conts_jrf_red_h_1;
	1: spriteset_conts_jrf_blue_g_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
	6: spriteset_conts_jrf_blue_j_1;

}

//20s red jrf mixed
random_switch(FEAT_TRAINS, SELF, random_conts_jrf_red_1_general_y2015) {
	10: spriteset_conts_jrf_red_a_1;
	7: spriteset_conts_jrf_red_b_1;
	10: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_red_e_1;
	6: spriteset_conts_jrf_red_f_1;
	2: spriteset_conts_jrf_red_h_1;
	1: spriteset_conts_jrf_red_i_1;
	1: spriteset_conts_jrf_red_j_1;

}


//food conts


//jnr reefer old style

random_switch(FEAT_TRAINS, SELF, random_conts_1_reefer_y1960) {
	7: spriteset_conts_jnr_reefer_a_1;
    3: spriteset_conts_jnr_reefer_b_1;
	4: spriteset_conts_jnr_green_c_1;
	2: spriteset_conts_jnr_green_d_1;
}

//jnr era private reefer

random_switch(FEAT_TRAINS, SELF, random_conts_1_reefer_y1970) {
	7: spriteset_conts_jnr_reefer_a_1;
	7: spriteset_conts_jnr_reefer_b_1;
	7: spriteset_conts_jnr_reefer_c_1;
	7: spriteset_conts_jnr_reefer_d_1;
	7: spriteset_conts_jnr_reefer_e_1;
	2: spriteset_conts_jnr_green_d_1;
	9: spriteset_conts_jnr_green_f_1;
	6: spriteset_conts_jnr_green_g_1;
}


//jnr reefer newer style

random_switch(FEAT_TRAINS, SELF, random_conts_1_reefer_y1980) {
	2: spriteset_conts_jnr_reefer_b_1;
    3: spriteset_conts_jnr_reefer_c_1;
	6: spriteset_conts_jnr_reefer_d_1;
	4: spriteset_conts_jnr_reefer_e_1;
	4: spriteset_conts_jnr_reefer_f_1;
	4: spriteset_conts_jnr_reefer_g_1;
	4: spriteset_conts_jnr_reefer_h_1;
	4: spriteset_conts_jnr_reefer_i_1;
	4: spriteset_conts_jnr_reefer_j_1;
	4: spriteset_conts_jnr_reefer_k_1;
	2: spriteset_conts_jnr_green_d_1;
    9: spriteset_conts_jnr_green_e_1;
	9: spriteset_conts_jnr_green_f_1;
	8: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
}

//private reefers jnr mixed

random_switch(FEAT_TRAINS, SELF, random_conts_1_reefer_y1990) {
	4: spriteset_conts_jnr_reefer_f_1;
	4: spriteset_conts_jnr_reefer_g_1;
	4: spriteset_conts_jnr_reefer_h_1;
	4: spriteset_conts_jnr_reefer_i_1;
	4: spriteset_conts_jnr_reefer_j_1;
	4: spriteset_conts_jnr_reefer_k_1;
	2: spriteset_conts_private_reefer_a_1;
    3: spriteset_conts_private_reefer_b_1;
	6: spriteset_conts_private_reefer_c_1;
	4: spriteset_conts_private_reefer_f_1;
	6: spriteset_conts_private_reefer_g_1;
	1: spriteset_conts_jnr_green_f_1;
	1: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;

}

//private reefers only
random_switch(FEAT_TRAINS, SELF, random_conts_1_reefer_y2000) {
	4: spriteset_conts_jnr_reefer_f_1;
	4: spriteset_conts_jnr_reefer_g_1;
	4: spriteset_conts_jnr_reefer_j_1;
	4: spriteset_conts_jnr_reefer_k_1;
	2: spriteset_conts_private_reefer_a_1;
    3: spriteset_conts_private_reefer_b_1;
	6: spriteset_conts_private_reefer_c_1;
	6: spriteset_conts_private_reefer_d_1;
	6: spriteset_conts_private_reefer_e_1;
	6: spriteset_conts_private_reefer_f_1;
	6: spriteset_conts_private_reefer_g_1;
	6: spriteset_conts_private_reefer_h_1;
	6: spriteset_conts_private_reefer_i_1;
	6: spriteset_conts_private_reefer_j_1;
	7: spriteset_conts_jrf_red_b_1;
	7: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
}


//private reefers modern
random_switch(FEAT_TRAINS, SELF, random_conts_1_reefer_y2010) {
	2: spriteset_conts_private_reefer_a_1;
    3: spriteset_conts_private_reefer_b_1;
	6: spriteset_conts_private_reefer_c_1;
	2: spriteset_conts_private_reefer_d_1;
    3: spriteset_conts_private_reefer_e_1;
	2: spriteset_conts_private_reefer_f_1;
    3: spriteset_conts_private_reefer_g_1;
	6: spriteset_conts_private_reefer_h_1;
	4: spriteset_conts_private_reefer_i_1;
	6: spriteset_conts_private_reefer_j_1;
	4: spriteset_conts_private_reefer_k_1;
	7: spriteset_conts_jrf_red_b_1;
	8: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_red_e_1;
	6: spriteset_conts_jrf_red_f_1;
}



//liquid conts


random_switch(FEAT_TRAINS, SELF, random_conts_1_liquid_y1960) {
	10: spriteset_conts_jnr_green_j_1;
    10: spriteset_conts_jnr_green_k_1;
	6: spriteset_conts_jnr_green_a_1;
    8: spriteset_conts_jnr_green_b_1;
	5: spriteset_conts_jnr_green_c_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_liquid_y1970) {
	3: spriteset_conts_jnr_green_j_1;
    3: spriteset_conts_jnr_green_k_1;
	6: spriteset_conts_private_tanker_a_1;
	6: spriteset_conts_private_tanker_b_1;
	6: spriteset_conts_private_tanker_c_1;
	6: spriteset_conts_private_tanker_g_1;
	3: spriteset_conts_private_tanker_h_1;
	2: spriteset_conts_jnr_green_d_1;
	9: spriteset_conts_jnr_green_f_1;
	6: spriteset_conts_jnr_green_g_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_liquid_y1980) {
	3: spriteset_conts_jnr_green_j_1;
    3: spriteset_conts_jnr_green_k_1;
	1: spriteset_conts_private_tanker_a_1;
	1: spriteset_conts_private_tanker_b_1;
	1: spriteset_conts_private_tanker_c_1;
	1: spriteset_conts_private_tanker_d_1;
	6: spriteset_conts_private_tanker_g_1;
	3: spriteset_conts_private_tanker_h_1;
	3: spriteset_conts_private_tanker_i_1;
    9: spriteset_conts_jnr_green_e_1;
	9: spriteset_conts_jnr_green_f_1;
	8: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_liquid_y1990) {
	1: spriteset_conts_private_tanker_a_1;
	1: spriteset_conts_private_tanker_b_1;
	1: spriteset_conts_private_tanker_c_1;
	4: spriteset_conts_private_tanker_d_1;
	4: spriteset_conts_private_tanker_f_1;
	6: spriteset_conts_private_tanker_g_1;
	3: spriteset_conts_private_tanker_h_1;
	3: spriteset_conts_private_tanker_i_1;
	3: spriteset_conts_private_tanker_j_1;
	1: spriteset_conts_jnr_green_e_1;
	1: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
	7: spriteset_conts_jrf_blue_h_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_liquid_y2000) {
	1: spriteset_conts_private_tanker_a_1;
	1: spriteset_conts_private_tanker_b_1;
	1: spriteset_conts_private_tanker_c_1;
	4: spriteset_conts_private_tanker_d_1;
	4: spriteset_conts_private_tanker_e_1;
	4: spriteset_conts_private_tanker_f_1;
	6: spriteset_conts_private_tanker_g_1;
	3: spriteset_conts_private_tanker_h_1;
	3: spriteset_conts_private_tanker_i_1;
	3: spriteset_conts_private_tanker_j_1;
	3: spriteset_conts_private_tanker_k_1;
	7: spriteset_conts_jrf_red_b_1;
	7: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_liquid_y2010) {
	1: spriteset_conts_private_tanker_a_1;
	1: spriteset_conts_private_tanker_c_1;
	6: spriteset_conts_private_tanker_d_1;
	6: spriteset_conts_private_tanker_e_1;
	6: spriteset_conts_private_tanker_f_1;
	6: spriteset_conts_private_tanker_g_1;
	3: spriteset_conts_private_tanker_h_1;
	3: spriteset_conts_private_tanker_i_1;
	3: spriteset_conts_private_tanker_j_1;
	3: spriteset_conts_private_tanker_k_1;
	7: spriteset_conts_jrf_red_b_1;
	8: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_e_1;
	6: spriteset_conts_jrf_red_f_1;
}


//bulk conts

random_switch(FEAT_TRAINS, SELF, random_conts_1_bulk_y1960) {
    10: spriteset_conts_jnr_green_i_1;
	2: spriteset_conts_jnr_green_c_1;
	6: spriteset_conts_jnr_green_d_1;
}


random_switch(FEAT_TRAINS, SELF, random_conts_1_bulk_y1970) {
    9: spriteset_conts_jnr_green_i_1;
	4: spriteset_conts_private_bulk_a_1;
    4: spriteset_conts_private_bulk_b_1;
	2: spriteset_conts_jnr_green_d_1;
	8: spriteset_conts_jnr_green_f_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_bulk_y1980) {
    9: spriteset_conts_jnr_green_i_1;
	4: spriteset_conts_private_bulk_a_1;
    4: spriteset_conts_private_bulk_b_1;
	4: spriteset_conts_private_bulk_d_1;
	4: spriteset_conts_private_bulk_e_1;
	2: spriteset_conts_jnr_green_e_1;
	8: spriteset_conts_jnr_green_f_1;
	6: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_bulk_y1990) {
	4: spriteset_conts_private_bulk_a_1;
    4: spriteset_conts_private_bulk_b_1;
	4: spriteset_conts_private_bulk_c_1;
	4: spriteset_conts_private_bulk_d_1;
	4: spriteset_conts_private_bulk_e_1;
	1: spriteset_conts_jnr_green_f_1;
	1: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_bulk_y2000) {
	4: spriteset_conts_private_bulk_a_1;
    4: spriteset_conts_private_bulk_b_1;
	4: spriteset_conts_private_bulk_c_1;
	4: spriteset_conts_private_bulk_d_1;
	5: spriteset_conts_jrf_red_b_1;
	5: spriteset_conts_jrf_red_c_1;
	5: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_bulk_y2010) {
	4: spriteset_conts_private_bulk_a_1;
    4: spriteset_conts_private_bulk_b_1;
	4: spriteset_conts_private_bulk_c_1;
	4: spriteset_conts_private_bulk_d_1;
	5: spriteset_conts_jrf_red_b_1;
	5: spriteset_conts_jrf_red_c_1;
	5: spriteset_conts_jrf_red_f_1;
}


//lidded conts

random_switch(FEAT_TRAINS, SELF, random_conts_1_lidded_y1980) {
	4: spriteset_conts_private_bulk_f_1;
	4: spriteset_conts_private_bulk_j_1;
	4: spriteset_conts_private_bulk_k_1;
	3: spriteset_conts_jnr_green_f_1;
	6: spriteset_conts_jnr_green_g_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_lidded_y1990) {
	4: spriteset_conts_private_bulk_f_1;
    4: spriteset_conts_private_bulk_g_1;
	4: spriteset_conts_private_bulk_h_1;
	4: spriteset_conts_private_bulk_j_1;
	4: spriteset_conts_private_bulk_k_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_lidded_y2000) {
	4: spriteset_conts_private_bulk_f_1;
    4: spriteset_conts_private_bulk_g_1;
	4: spriteset_conts_private_bulk_h_1;
	4: spriteset_conts_private_bulk_i_1;
	4: spriteset_conts_private_bulk_k_1;
}


//mixed conts pre-private

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_y1960) {
	3: spriteset_conts_jnr_green_a_1;
    4: spriteset_conts_jnr_green_b_1;
	1: spriteset_conts_jnr_green_c_1;
	5: spriteset_conts_jnr_green_d_1;
	1: spriteset_conts_jnr_green_h_1;
	2: spriteset_conts_jnr_green_i_1;
	4: spriteset_conts_jnr_reefer_a_1;
}

//mixed private

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_private_y1970) {
	3: spriteset_conts_private_general_d_1;
	9: spriteset_conts_private_general_e_1;
	6: spriteset_conts_private_general_f_1;
	6: spriteset_conts_private_general_h_1;
	5: spriteset_conts_private_general_j_1;
	8: spriteset_conts_private_general_k_1;
	4: spriteset_conts_jnr_reefer_f_1;
	4: spriteset_conts_jnr_reefer_g_1;
	4: spriteset_conts_jnr_reefer_h_1;
	4: spriteset_conts_jnr_reefer_j_1;
	2: spriteset_conts_jnr_green_d_1;
	9: spriteset_conts_jnr_green_f_1;
	6: spriteset_conts_jnr_green_g_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_private_y1980) {
	3: spriteset_conts_private_general_d_1;
	9: spriteset_conts_private_general_e_1;
	6: spriteset_conts_private_general_f_1;
	6: spriteset_conts_private_general_h_1;
	5: spriteset_conts_private_general_j_1;
	8: spriteset_conts_private_general_k_1;
	4: spriteset_conts_jnr_reefer_f_1;
	4: spriteset_conts_jnr_reefer_g_1;
	4: spriteset_conts_jnr_reefer_h_1;
	4: spriteset_conts_jnr_reefer_i_1;
	4: spriteset_conts_jnr_reefer_j_1;
	2: spriteset_conts_jnr_green_d_1;
    9: spriteset_conts_jnr_green_e_1;
	9: spriteset_conts_jnr_green_f_1;
	8: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_private_y1990) {
	3: spriteset_conts_private_general_b_1;
	8: spriteset_conts_private_general_d_1;
	1: spriteset_conts_private_general_e_1;
	8: spriteset_conts_private_general_h_1;
	3: spriteset_conts_private_general_i_1;
	2: spriteset_conts_private_general_j_1;
	9: spriteset_conts_private_general_k_1;
	4: spriteset_conts_jnr_reefer_f_1;
	4: spriteset_conts_jnr_reefer_g_1;
	4: spriteset_conts_jnr_reefer_h_1;
	4: spriteset_conts_jnr_reefer_i_1;
	4: spriteset_conts_jnr_reefer_j_1;
	6: spriteset_conts_private_reefer_f_1;
	6: spriteset_conts_private_reefer_g_1;
	1: spriteset_conts_jnr_green_f_1;
	1: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_private_y2000) {
	3: spriteset_conts_private_general_b_1;
	9: spriteset_conts_private_general_c_1;
	8: spriteset_conts_private_general_d_1;
	1: spriteset_conts_private_general_e_1;
	9: spriteset_conts_private_general_g_1;
	8: spriteset_conts_private_general_h_1;
	3: spriteset_conts_private_general_i_1;
	9: spriteset_conts_private_general_k_1;
	6: spriteset_conts_private_reefer_f_1;
	6: spriteset_conts_private_reefer_g_1;
	6: spriteset_conts_private_reefer_h_1;
	6: spriteset_conts_private_reefer_i_1;
	4: spriteset_conts_jnr_reefer_f_1;
	7: spriteset_conts_jrf_red_g_1;
	7: spriteset_conts_jrf_red_b_1;
	7: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_private_y2010) {
	3: spriteset_conts_private_general_a_1;
	9: spriteset_conts_private_general_b_1;
	3: spriteset_conts_private_general_c_1;
	8: spriteset_conts_private_general_d_1;
	8: spriteset_conts_private_general_e_1;
	2: spriteset_conts_private_general_g_1;
	3: spriteset_conts_private_general_h_1;
	7: spriteset_conts_private_general_i_1;
	6: spriteset_conts_private_reefer_f_1;
	6: spriteset_conts_private_reefer_g_1;
	6: spriteset_conts_private_reefer_h_1;
	6: spriteset_conts_private_reefer_i_1;
	7: spriteset_conts_jrf_red_g_1;
	7: spriteset_conts_jrf_red_b_1;
	8: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_red_e_1;
	6: spriteset_conts_jrf_red_f_1;
}


//mixed food


random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_food_y1960) {
	7: spriteset_conts_jnr_reefer_a_1;
    3: spriteset_conts_jnr_reefer_b_1;
	4: spriteset_conts_jnr_green_c_1;
	2: spriteset_conts_jnr_green_d_1;
	4: spriteset_conts_jnr_green_h_1;
	2: spriteset_conts_jnr_green_j_1;
	2: spriteset_conts_jnr_green_k_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_food_y1970) {
	7: spriteset_conts_jnr_reefer_a_1;
	7: spriteset_conts_jnr_reefer_b_1;
	7: spriteset_conts_jnr_reefer_c_1;
	7: spriteset_conts_jnr_reefer_d_1;
	7: spriteset_conts_jnr_reefer_e_1;
	2: spriteset_conts_jnr_green_j_1;
	2: spriteset_conts_jnr_green_k_1;
	1: spriteset_conts_private_tanker_a_1;
	1: spriteset_conts_private_tanker_b_1;
	1: spriteset_conts_private_tanker_c_1;
	2: spriteset_conts_jnr_green_d_1;
	9: spriteset_conts_jnr_green_f_1;
	6: spriteset_conts_jnr_green_g_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_food_y1980) {
	7: spriteset_conts_jnr_reefer_c_1;
	7: spriteset_conts_jnr_reefer_d_1;
	7: spriteset_conts_jnr_reefer_e_1;
	7: spriteset_conts_jnr_reefer_f_1;
	7: spriteset_conts_jnr_reefer_g_1;
	7: spriteset_conts_jnr_reefer_h_1;
	2: spriteset_conts_jnr_green_j_1;
	2: spriteset_conts_jnr_green_k_1;
	1: spriteset_conts_private_tanker_a_1;
	1: spriteset_conts_private_tanker_b_1;
	1: spriteset_conts_private_tanker_c_1;
	1: spriteset_conts_private_tanker_g_1;
	1: spriteset_conts_private_tanker_h_1;
	1: spriteset_conts_private_tanker_i_1;
	2: spriteset_conts_jnr_green_d_1;
    9: spriteset_conts_jnr_green_e_1;
	9: spriteset_conts_jnr_green_f_1;
	8: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_food_y1990) {
	7: spriteset_conts_jnr_reefer_g_1;
	7: spriteset_conts_jnr_reefer_h_1;
	7: spriteset_conts_jnr_reefer_i_1;
	7: spriteset_conts_jnr_reefer_j_1;
	7: spriteset_conts_jnr_reefer_k_1;
	2: spriteset_conts_jnr_green_j_1;
	2: spriteset_conts_jnr_green_k_1;
	1: spriteset_conts_private_tanker_a_1;
	1: spriteset_conts_private_tanker_b_1;
	1: spriteset_conts_private_tanker_c_1;
	1: spriteset_conts_private_tanker_g_1;
	1: spriteset_conts_private_tanker_h_1;
	1: spriteset_conts_private_tanker_i_1;
	1: spriteset_conts_jnr_green_f_1;
	1: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_food_y2000) {
	7: spriteset_conts_jnr_reefer_i_1;
	7: spriteset_conts_jnr_reefer_j_1;
	7: spriteset_conts_jnr_reefer_k_1;
	2: spriteset_conts_private_reefer_a_1;
    3: spriteset_conts_private_reefer_b_1;
	6: spriteset_conts_private_reefer_c_1;
	4: spriteset_conts_private_reefer_f_1;
	6: spriteset_conts_private_reefer_g_1;
	2: spriteset_conts_jnr_green_k_1;
	4: spriteset_conts_private_tanker_d_1;
	4: spriteset_conts_private_tanker_f_1;
	6: spriteset_conts_private_tanker_g_1;
	3: spriteset_conts_private_tanker_h_1;
	3: spriteset_conts_private_tanker_i_1;
	3: spriteset_conts_private_tanker_j_1;
	7: spriteset_conts_jrf_red_b_1;
	7: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_food_y2010) {
	2: spriteset_conts_private_reefer_a_1;
    3: spriteset_conts_private_reefer_b_1;
	6: spriteset_conts_private_reefer_c_1;
	4: spriteset_conts_private_reefer_f_1;
	6: spriteset_conts_private_reefer_g_1;
	6: spriteset_conts_private_reefer_h_1;
	4: spriteset_conts_private_reefer_i_1;
	6: spriteset_conts_private_reefer_j_1;
	4: spriteset_conts_private_reefer_k_1;
	2: spriteset_conts_jnr_green_k_1;
	4: spriteset_conts_private_tanker_d_1;
	4: spriteset_conts_private_tanker_f_1;
	3: spriteset_conts_private_tanker_h_1;
	3: spriteset_conts_private_tanker_i_1;
	3: spriteset_conts_private_tanker_j_1;
	3: spriteset_conts_private_tanker_k_1;
	7: spriteset_conts_jrf_red_b_1;
	8: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_red_e_1;
	6: spriteset_conts_jrf_red_f_1;
}


//mixed liquid

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_liquid_y1960) {
	8: spriteset_conts_private_open_f_1;
	3: spriteset_conts_private_open_h_1;
	4: spriteset_conts_jnr_green_c_1;
	2: spriteset_conts_jnr_green_d_1;
	4: spriteset_conts_jnr_green_h_1;
	2: spriteset_conts_jnr_green_j_1;
	2: spriteset_conts_jnr_green_k_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_liquid_y1970) {
	9: spriteset_conts_private_general_e_1;
	6: spriteset_conts_private_general_f_1;
	6: spriteset_conts_private_general_h_1;
	5: spriteset_conts_private_general_j_1;
	9: spriteset_conts_private_general_k_1;
    4: spriteset_conts_private_open_g_1;
	4: spriteset_conts_private_open_h_1;
	4: spriteset_conts_private_tanker_a_1;
	4: spriteset_conts_private_tanker_b_1;
	4: spriteset_conts_private_tanker_c_1;
	4: spriteset_conts_private_tanker_g_1;
	2: spriteset_conts_jnr_green_d_1;
	9: spriteset_conts_jnr_green_f_1;
	6: spriteset_conts_jnr_green_g_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_liquid_y1980) {
	8: spriteset_conts_private_general_d_1;
	1: spriteset_conts_private_general_e_1;
	1: spriteset_conts_private_general_f_1;
	8: spriteset_conts_private_general_h_1;
	9: spriteset_conts_private_general_j_1;
	9: spriteset_conts_private_general_k_1;
    4: spriteset_conts_private_open_h_1;
	4: spriteset_conts_private_open_i_1;
	1: spriteset_conts_private_tanker_a_1;
	1: spriteset_conts_private_tanker_b_1;
	1: spriteset_conts_private_tanker_c_1;
	1: spriteset_conts_private_tanker_g_1;
	1: spriteset_conts_private_tanker_h_1;
	1: spriteset_conts_private_tanker_i_1;
	2: spriteset_conts_jnr_green_d_1;
    9: spriteset_conts_jnr_green_e_1;
	9: spriteset_conts_jnr_green_f_1;
	8: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_liquid_y1990) {
	8: spriteset_conts_private_general_d_1;
	1: spriteset_conts_private_general_f_1;
	8: spriteset_conts_private_general_h_1;
	9: spriteset_conts_private_general_j_1;
	9: spriteset_conts_private_general_k_1;
    4: spriteset_conts_private_open_i_1;
	4: spriteset_conts_private_open_a_1;
	2: spriteset_conts_jnr_green_j_1;
	1: spriteset_conts_private_tanker_a_1;
	1: spriteset_conts_private_tanker_b_1;
	1: spriteset_conts_private_tanker_c_1;
	1: spriteset_conts_private_tanker_g_1;
	1: spriteset_conts_private_tanker_h_1;
	1: spriteset_conts_private_tanker_i_1;
	3: spriteset_conts_private_tanker_j_1;
	1: spriteset_conts_jnr_green_f_1;
	1: spriteset_conts_jnr_green_g_1;
    1: spriteset_conts_jrf_blue_b_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_liquid_y2000) {
	8: spriteset_conts_private_general_d_1;
	1: spriteset_conts_private_general_f_1;
	9: spriteset_conts_private_general_g_1;
	8: spriteset_conts_private_general_h_1;
    4: spriteset_conts_private_open_a_1;
	4: spriteset_conts_private_open_b_1;
	2: spriteset_conts_jnr_green_j_1;
	4: spriteset_conts_private_tanker_d_1;
	4: spriteset_conts_private_tanker_e_1;
	4: spriteset_conts_private_tanker_f_1;
	6: spriteset_conts_private_tanker_g_1;
	3: spriteset_conts_private_tanker_h_1;
	3: spriteset_conts_private_tanker_i_1;
	3: spriteset_conts_private_tanker_j_1;
	3: spriteset_conts_private_tanker_k_1;
	7: spriteset_conts_jrf_red_b_1;
	7: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_liquid_y2010) {
	8: spriteset_conts_private_general_e_1;
	2: spriteset_conts_private_general_g_1;
	3: spriteset_conts_private_general_h_1;
    4: spriteset_conts_private_open_b_1;
	4: spriteset_conts_private_open_k_1;
	2: spriteset_conts_jnr_green_j_1;
	4: spriteset_conts_private_tanker_d_1;
	4: spriteset_conts_private_tanker_e_1;
	4: spriteset_conts_private_tanker_f_1;
	6: spriteset_conts_private_tanker_g_1;
	3: spriteset_conts_private_tanker_h_1;
	3: spriteset_conts_private_tanker_i_1;
	3: spriteset_conts_private_tanker_j_1;
	3: spriteset_conts_private_tanker_k_1;
	8: spriteset_conts_jrf_red_a_1;
	7: spriteset_conts_jrf_red_b_1;
	8: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_red_e_1;
	6: spriteset_conts_jrf_red_f_1;
}


//mixed open

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_open_y1960) {
    3: spriteset_conts_jnr_green_b_1;
    3: spriteset_conts_jnr_green_c_1;
    3: spriteset_conts_jnr_green_d_1;
	8: spriteset_conts_private_open_f_1;
	3: spriteset_conts_private_open_h_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_open_y1970) {
	6: spriteset_conts_jnr_green_a_1;
    8: spriteset_conts_jnr_green_b_1;
	5: spriteset_conts_jnr_green_c_1;
	2: spriteset_conts_jnr_green_d_1;
	8: spriteset_conts_jnr_green_f_1;
	6: spriteset_conts_jnr_green_g_1;
	4: spriteset_conts_private_open_f_1;
    4: spriteset_conts_private_open_g_1;
	4: spriteset_conts_private_open_h_1;
	4: spriteset_conts_private_open_j_1;

}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_open_y1980) {
	5: spriteset_conts_jnr_green_c_1;
	2: spriteset_conts_jnr_green_d_1;
    9: spriteset_conts_jnr_green_e_1;
	9: spriteset_conts_jnr_green_f_1;
	8: spriteset_conts_jnr_green_g_1;
	1: spriteset_conts_jrf_blue_a_1;
    1: spriteset_conts_jrf_blue_b_1;
	1: spriteset_conts_jrf_blue_c_1;
	1: spriteset_conts_jrf_blue_d_1;
	1: spriteset_conts_jrf_blue_e_1;
	4: spriteset_conts_private_open_f_1;
    4: spriteset_conts_private_open_g_1;
	4: spriteset_conts_private_open_h_1;
	4: spriteset_conts_private_open_i_1;
	4: spriteset_conts_private_open_j_1;
	4: spriteset_conts_private_open_k_1;
	1: spriteset_conts_private_general_e_1;
	1: spriteset_conts_private_general_f_1;
	1: spriteset_conts_private_general_h_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_open_y1990) {
    5: spriteset_conts_jnr_green_e_1;
	5: spriteset_conts_jnr_green_f_1;
	5: spriteset_conts_jrf_blue_c_1;
	1: spriteset_conts_jrf_blue_e_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
	6: spriteset_conts_jrf_blue_j_1;
    4: spriteset_conts_private_open_a_1;
	4: spriteset_conts_private_open_e_1;
	4: spriteset_conts_private_open_f_1;
    4: spriteset_conts_private_open_g_1;
	4: spriteset_conts_private_open_h_1;
	4: spriteset_conts_private_open_i_1;
	1: spriteset_conts_private_general_e_1;
	1: spriteset_conts_private_general_h_1;
	1: spriteset_conts_private_general_i_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_open_y2000) {
	1: spriteset_conts_jrf_blue_c_1;
	6: spriteset_conts_jrf_blue_g_1;
	7: spriteset_conts_jrf_blue_h_1;
    5: spriteset_conts_jrf_blue_i_1;
	7: spriteset_conts_jrf_red_b_1;
	7: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_red_e_1;
	1: spriteset_conts_jrf_red_g_1;
    4: spriteset_conts_private_open_a_1;
	4: spriteset_conts_private_open_d_1;
	4: spriteset_conts_private_open_e_1;
	4: spriteset_conts_private_open_g_1;
	4: spriteset_conts_private_open_i_1;
	4: spriteset_conts_private_open_j_1;
	1: spriteset_conts_private_general_a_1;
	1: spriteset_conts_private_general_g_1;
	1: spriteset_conts_private_general_i_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_open_y2010) {
	7: spriteset_conts_jrf_red_a_1;
	7: spriteset_conts_jrf_red_b_1;
	7: spriteset_conts_jrf_red_c_1;
	7: spriteset_conts_jrf_red_d_1;
	7: spriteset_conts_jrf_red_e_1;
	6: spriteset_conts_jrf_red_f_1;
	1: spriteset_conts_jrf_red_g_1;
	7: spriteset_conts_jrf_red_h_1;
    4: spriteset_conts_private_open_a_1;
	4: spriteset_conts_private_open_b_1;
	4: spriteset_conts_private_open_c_1;
	4: spriteset_conts_private_open_d_1;
	4: spriteset_conts_private_open_e_1;
	4: spriteset_conts_private_open_k_1;
	1: spriteset_conts_private_general_a_1;
	1: spriteset_conts_private_general_d_1;
	1: spriteset_conts_private_general_g_1;
}



//mixed vented


random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_vented_y1960) {

	6: spriteset_conts_jnr_green_a_1;
    8: spriteset_conts_jnr_green_b_1;
	5: spriteset_conts_jnr_green_h_1;

}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_vented_y1970) {

	6: spriteset_conts_jnr_green_f_1;
    8: spriteset_conts_jnr_green_g_1;
	5: spriteset_conts_jnr_green_h_1;

}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_vented_y1980) {

	6: spriteset_conts_jnr_green_e_1;
	6: spriteset_conts_jnr_green_f_1;
    8: spriteset_conts_jnr_green_g_1;
	5: spriteset_conts_jnr_green_h_1;
	8: spriteset_conts_private_general_d_1;
	1: spriteset_conts_private_general_e_1;
	1: spriteset_conts_private_general_f_1;
	2: spriteset_conts_private_general_j_1;
	5: spriteset_conts_jrf_blue_b_1;
	5: spriteset_conts_jrf_blue_c_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_vented_y1990) {
	6: spriteset_conts_jnr_green_e_1;
	6: spriteset_conts_jnr_green_f_1;
    8: spriteset_conts_jnr_green_g_1;
	8: spriteset_conts_private_general_d_1;
	1: spriteset_conts_private_general_e_1;
	1: spriteset_conts_private_general_f_1;
	1: spriteset_conts_private_general_g_1;
	2: spriteset_conts_private_general_j_1;
	5: spriteset_conts_jrf_blue_c_1;
	5: spriteset_conts_jrf_blue_f_1;
	5: spriteset_conts_jrf_blue_h_1;
	5: spriteset_conts_jrf_blue_i_1;
	5: spriteset_conts_jrf_blue_j_1;
	5: spriteset_conts_jrf_blue_k_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_vented_y2000) {
	8: spriteset_conts_private_general_d_1;
	1: spriteset_conts_private_general_e_1;
	1: spriteset_conts_private_general_f_1;
	1: spriteset_conts_private_general_g_1;
	2: spriteset_conts_private_general_j_1;
	5: spriteset_conts_jrf_blue_b_1;
	5: spriteset_conts_jrf_blue_c_1;
	5: spriteset_conts_jrf_blue_f_1;
	5: spriteset_conts_jrf_blue_h_1;
	5: spriteset_conts_jrf_blue_i_1;
	5: spriteset_conts_jrf_blue_j_1;
	5: spriteset_conts_jrf_blue_k_1;
	5: spriteset_conts_jrf_red_c_1;
	5: spriteset_conts_jrf_red_d_1;
	5: spriteset_conts_jrf_red_e_1;
	5: spriteset_conts_jrf_red_k_1;
}

random_switch(FEAT_TRAINS, SELF, random_conts_1_mixed_vented_y2010) {
	8: spriteset_conts_private_general_d_1;
	1: spriteset_conts_private_general_e_1;
	1: spriteset_conts_private_general_f_1;
	1: spriteset_conts_private_general_g_1;
	5: spriteset_conts_jrf_blue_f_1;
	5: spriteset_conts_jrf_blue_k_1;
	5: spriteset_conts_jrf_red_a_1;
	5: spriteset_conts_jrf_red_b_1;
	5: spriteset_conts_jrf_red_c_1;
	5: spriteset_conts_jrf_red_d_1;
	5: spriteset_conts_jrf_red_e_1;
	5: spriteset_conts_jrf_red_f_1;
	5: spriteset_conts_jrf_red_k_1;
}


//final year switches _1

switch(FEAT_TRAINS, SELF, switch_conts_1_general_year, current_year) {
	0..1970: random_conts_jnr_green_1_general_y1960;
	
	1970..1980: random_conts_jnr_green_1_general_y1970;
	1980..1985: random_conts_jnr_green_1_general_y1980;
	1985..1990: random_conts_jnr_blue_1_general_y1985;
	1990..1995: random_conts_jrf_blue_1_general_y1990;
	1995..2000: random_conts_jrf_blue_1_general_y1995;
	2000..2005: random_conts_jrf_red_1_general_y2000;
	2005..2015: random_conts_jrf_red_1_general_y2005;
	random_conts_jrf_red_1_general_y2015;
	}

switch(FEAT_TRAINS, SELF, switch_conts_1_food_year, current_year) {
	0..1970: random_conts_1_reefer_y1960;
	1970..1980: random_conts_1_reefer_y1970;
	1980..1990: random_conts_1_reefer_y1980;
	1990..2001: random_conts_1_reefer_y1990;
    2001..2011: random_conts_1_reefer_y2000;
	random_conts_1_reefer_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_1_liquid_year, current_year) {
	0..1970: random_conts_1_liquid_y1960;
	1970..1980: random_conts_1_liquid_y1970;
	1980..1990: random_conts_1_liquid_y1980;
	1990..2001: random_conts_1_liquid_y1990;
    2001..2011: random_conts_1_liquid_y2000;
	random_conts_1_liquid_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_1_bulk_year, current_year) {
	0..1970: random_conts_1_bulk_y1960;
	1970..1980: random_conts_1_bulk_y1970;
    1980..1990: random_conts_1_bulk_y1980;
    1990..2000: random_conts_1_bulk_y1990;
	2000..2010: random_conts_1_bulk_y2000;
	random_conts_1_bulk_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_1_lidded_year, current_year) {
	0..1970: random_conts_jnr_green_1_general_y1960;
	1970..1980: random_conts_jnr_green_1_general_y1970;
    1980..1990: random_conts_1_lidded_y1980;
    1990..2000: random_conts_1_lidded_y1990;
	random_conts_1_lidded_y2000;
	}
	

switch(FEAT_TRAINS, SELF, switch_conts_1_mixed_private_year, current_year) {
	0..1972: random_conts_1_mixed_y1960;
	1972..1982: random_conts_1_mixed_private_y1970;
    1982..1992: random_conts_1_mixed_private_y1980;
	1992..2002: random_conts_1_mixed_private_y1990;
    2002..2012: random_conts_1_mixed_private_y2000;
	random_conts_1_mixed_private_y2010;
	}
	
switch(FEAT_TRAINS, SELF, switch_conts_1_mixed_food_year, current_year) {
	0..1972: random_conts_1_mixed_food_y1960;
	1972..1982: random_conts_1_mixed_food_y1970;
    1982..1992: random_conts_1_mixed_food_y1980;
	1992..2002: random_conts_1_mixed_food_y1990;
    2002..2012: random_conts_1_mixed_food_y2000;
	random_conts_1_mixed_food_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_1_mixed_liquid_year, current_year) {
	0..1972: random_conts_1_mixed_liquid_y1960;
	1972..1982: random_conts_1_mixed_liquid_y1970;
    1982..1992: random_conts_1_mixed_liquid_y1980;
	1992..2002: random_conts_1_mixed_liquid_y1990;
    2002..2012: random_conts_1_mixed_liquid_y2000;
	random_conts_1_mixed_liquid_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_1_mixed_open_year, current_year) {
	0..1970: random_conts_1_mixed_open_y1960;
	1970..1981: random_conts_1_mixed_open_y1970;
	1981..1991: random_conts_1_mixed_open_y1980;
	1991..2003: random_conts_1_mixed_open_y1990;
    2003..2016: random_conts_1_mixed_open_y2000;
	random_conts_1_mixed_open_y2010;
	}

switch(FEAT_TRAINS, SELF, switch_conts_1_mixed_vented_year, current_year) {
	0..1970: random_conts_1_mixed_vented_y1960;
	1970..1980: random_conts_1_mixed_vented_y1970;
	1980..1990: random_conts_1_mixed_vented_y1980;
	1990..2001: random_conts_1_mixed_vented_y1990;
    2001..2013: random_conts_1_mixed_vented_y2000;
	random_conts_1_mixed_vented_y2010;
	}
//foo

//blank

spriteset(spriteset_conts_blank, "gfx/blank.png") { 
	template_container_1(1, 1)
}




//stack general

switch(FEAT_TRAINS, SELF, switch_conts_general_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_1_general_year;
	2:	switch_conts_2_general_year;
	3:	switch_conts_3_general_year;
	4:	switch_conts_4_general_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_general_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_4_general_year;
	2:	switch_conts_3_general_year;
	3:	switch_conts_2_general_year;
	4:	switch_conts_1_general_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_general_direction, direction) {
	DIRECTION_SOUTHEAST: switch_conts_general_down_loadstack;
	DIRECTION_SOUTH: switch_conts_general_down_loadstack;
	DIRECTION_SOUTHWEST: switch_conts_general_down_loadstack;
	switch_conts_general_up_loadstack;
}

//reversing switch for when containers are ctrl-flipped
switch(FEAT_TRAINS, SELF, switch_conts_general_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_conts_general_down_loadstack;
	DIRECTION_NORTH: switch_conts_general_down_loadstack;
	DIRECTION_NORTHEAST: switch_conts_general_down_loadstack;
	switch_conts_general_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_conts_general_flip, vehicle_is_flipped) {
	1: switch_conts_general_direction_flipped;
	switch_conts_general_direction;
	}


//stack food

switch(FEAT_TRAINS, SELF, switch_conts_food_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_1_food_year;
	2:	switch_conts_2_food_year;
	3:	switch_conts_3_food_year;
	4:	switch_conts_4_food_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_food_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_4_food_year;
	2:	switch_conts_3_food_year;
	3:	switch_conts_2_food_year;
	4:	switch_conts_1_food_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_food_direction, direction) {
	DIRECTION_SOUTHEAST: switch_conts_food_down_loadstack;
	DIRECTION_SOUTH: switch_conts_food_down_loadstack;
	DIRECTION_SOUTHWEST: switch_conts_food_down_loadstack;
	switch_conts_food_up_loadstack;
}

//reversing switch for when containers are ctrl-flipped
switch(FEAT_TRAINS, SELF, switch_conts_food_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_conts_food_down_loadstack;
	DIRECTION_NORTH: switch_conts_food_down_loadstack;
	DIRECTION_NORTHEAST: switch_conts_food_down_loadstack;
	switch_conts_food_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_conts_food_flip, vehicle_is_flipped) {
	1: switch_conts_food_direction_flipped;
	switch_conts_food_direction;
	}



//stack liquid

switch(FEAT_TRAINS, SELF, switch_conts_liquid_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_1_liquid_year;
	2:	switch_conts_2_liquid_year;
	3:	switch_conts_3_liquid_year;
	4:	switch_conts_4_liquid_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_liquid_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_4_liquid_year;
	2:	switch_conts_3_liquid_year;
	3:	switch_conts_2_liquid_year;
	4:	switch_conts_1_liquid_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_liquid_direction, direction) {
	DIRECTION_SOUTHEAST: switch_conts_liquid_down_loadstack;
	DIRECTION_SOUTH: switch_conts_liquid_down_loadstack;
	DIRECTION_SOUTHWEST: switch_conts_liquid_down_loadstack;
	switch_conts_liquid_up_loadstack;
}

//reversing switch for when containers are ctrl-flipped
switch(FEAT_TRAINS, SELF, switch_conts_liquid_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_conts_liquid_down_loadstack;
	DIRECTION_NORTH: switch_conts_liquid_down_loadstack;
	DIRECTION_NORTHEAST: switch_conts_liquid_down_loadstack;
	switch_conts_liquid_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_conts_liquid_flip, vehicle_is_flipped) {
	1: switch_conts_liquid_direction_flipped;
	switch_conts_liquid_direction;
	}



//stack bulk

switch(FEAT_TRAINS, SELF, switch_conts_bulk_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_1_bulk_year;
	2:	switch_conts_2_bulk_year;
	3:	switch_conts_3_bulk_year;
	4:	switch_conts_4_bulk_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_bulk_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_4_bulk_year;
	2:	switch_conts_3_bulk_year;
	3:	switch_conts_2_bulk_year;
	4:	switch_conts_1_bulk_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_bulk_direction, direction) {
	DIRECTION_SOUTHEAST: switch_conts_bulk_down_loadstack;
	DIRECTION_SOUTH: switch_conts_bulk_down_loadstack;
	DIRECTION_SOUTHWEST: switch_conts_bulk_down_loadstack;
	switch_conts_bulk_up_loadstack;
}

//reversing switch for when containers are ctrl-flipped
switch(FEAT_TRAINS, SELF, switch_conts_bulk_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_conts_bulk_down_loadstack;
	DIRECTION_NORTH: switch_conts_bulk_down_loadstack;
	DIRECTION_NORTHEAST: switch_conts_bulk_down_loadstack;
	switch_conts_bulk_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_conts_bulk_flip, vehicle_is_flipped) {
	1: switch_conts_bulk_direction_flipped;
	switch_conts_bulk_direction;
	}

//stack mixed private

switch(FEAT_TRAINS, SELF, switch_conts_mixed_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_1_mixed_private_year;
	2:	switch_conts_2_mixed_private_year;
	3:	switch_conts_3_mixed_private_year;
	4:	switch_conts_4_mixed_private_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_4_mixed_private_year;
	2:	switch_conts_3_mixed_private_year;
	3:	switch_conts_2_mixed_private_year;
	4:	switch_conts_1_mixed_private_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_direction, direction) {
	DIRECTION_SOUTHEAST: switch_conts_mixed_down_loadstack;
	DIRECTION_SOUTH: switch_conts_mixed_down_loadstack;
	DIRECTION_SOUTHWEST: switch_conts_mixed_down_loadstack;
	switch_conts_mixed_up_loadstack;
}

//reversing switch for when containers are ctrl-flipped
switch(FEAT_TRAINS, SELF, switch_conts_mixed_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_conts_mixed_down_loadstack;
	DIRECTION_NORTH: switch_conts_mixed_down_loadstack;
	DIRECTION_NORTHEAST: switch_conts_mixed_down_loadstack;
	switch_conts_mixed_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_flip, vehicle_is_flipped) {
	1: switch_conts_mixed_direction_flipped;
	switch_conts_mixed_direction;
	}


//stack mixed food

switch(FEAT_TRAINS, SELF, switch_conts_mixed_food_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_1_mixed_food_year;
	2:	switch_conts_2_mixed_food_year;
	3:	switch_conts_3_mixed_food_year;
	4:	switch_conts_4_mixed_food_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_food_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_4_mixed_food_year;
	2:	switch_conts_3_mixed_food_year;
	3:	switch_conts_2_mixed_food_year;
	4:	switch_conts_1_mixed_food_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_food_direction, direction) {
	DIRECTION_SOUTHEAST: switch_conts_mixed_food_down_loadstack;
	DIRECTION_SOUTH: switch_conts_mixed_food_down_loadstack;
	DIRECTION_SOUTHWEST: switch_conts_mixed_food_down_loadstack;
	switch_conts_mixed_food_up_loadstack;
}

//reversing switch for when containers are ctrl-flipped
switch(FEAT_TRAINS, SELF, switch_conts_mixed_food_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_conts_mixed_food_down_loadstack;
	DIRECTION_NORTH: switch_conts_mixed_food_down_loadstack;
	DIRECTION_NORTHEAST: switch_conts_mixed_food_down_loadstack;
	switch_conts_mixed_food_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_food_flip, vehicle_is_flipped) {
	1: switch_conts_mixed_food_direction_flipped;
	switch_conts_mixed_food_direction;
	}


//stack mixed liquid

switch(FEAT_TRAINS, SELF, switch_conts_mixed_liquid_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_1_mixed_liquid_year;
	2:	switch_conts_2_mixed_liquid_year;
	3:	switch_conts_3_mixed_liquid_year;
	4:	switch_conts_4_mixed_liquid_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_liquid_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_4_mixed_liquid_year;
	2:	switch_conts_3_mixed_liquid_year;
	3:	switch_conts_2_mixed_liquid_year;
	4:	switch_conts_1_mixed_liquid_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_liquid_direction, direction) {
	DIRECTION_SOUTHEAST: switch_conts_mixed_liquid_down_loadstack;
	DIRECTION_SOUTH: switch_conts_mixed_liquid_down_loadstack;
	DIRECTION_SOUTHWEST: switch_conts_mixed_liquid_down_loadstack;
	switch_conts_mixed_liquid_up_loadstack;
}

//reversing switch for when containers are ctrl-flipped
switch(FEAT_TRAINS, SELF, switch_conts_mixed_liquid_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_conts_mixed_liquid_down_loadstack;
	DIRECTION_NORTH: switch_conts_mixed_liquid_down_loadstack;
	DIRECTION_NORTHEAST: switch_conts_mixed_liquid_down_loadstack;
	switch_conts_mixed_liquid_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_liquid_flip, vehicle_is_flipped) {
	1: switch_conts_mixed_liquid_direction_flipped;
	switch_conts_mixed_liquid_direction;
	}

//stack mixed open

switch(FEAT_TRAINS, SELF, switch_conts_mixed_open_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_1_mixed_open_year;
	2:	switch_conts_2_mixed_open_year;
	3:	switch_conts_3_mixed_open_year;
	4:	switch_conts_4_mixed_open_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_open_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_4_mixed_open_year;
	2:	switch_conts_3_mixed_open_year;
	3:	switch_conts_2_mixed_open_year;
	4:	switch_conts_1_mixed_open_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_open_direction, direction) {
	DIRECTION_SOUTHEAST: switch_conts_mixed_open_down_loadstack;
	DIRECTION_SOUTH: switch_conts_mixed_open_down_loadstack;
	DIRECTION_SOUTHWEST: switch_conts_mixed_open_down_loadstack;
	switch_conts_mixed_open_up_loadstack;
}

//reversing switch for when containers are ctrl-flipped
switch(FEAT_TRAINS, SELF, switch_conts_mixed_open_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_conts_mixed_open_down_loadstack;
	DIRECTION_NORTH: switch_conts_mixed_open_down_loadstack;
	DIRECTION_NORTHEAST: switch_conts_mixed_open_down_loadstack;
	switch_conts_mixed_open_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_open_flip, vehicle_is_flipped) {
	1: switch_conts_mixed_open_direction_flipped;
	switch_conts_mixed_open_direction;
	}


//stack lidded

switch(FEAT_TRAINS, SELF, switch_conts_lidded_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_1_lidded_year;
	2:	switch_conts_2_lidded_year;
	3:	switch_conts_3_lidded_year;
	4:	switch_conts_4_lidded_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_lidded_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_4_lidded_year;
	2:	switch_conts_3_lidded_year;
	3:	switch_conts_2_lidded_year;
	4:	switch_conts_1_lidded_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_lidded_direction, direction) {
	DIRECTION_SOUTHEAST: switch_conts_lidded_down_loadstack;
	DIRECTION_SOUTH: switch_conts_lidded_down_loadstack;
	DIRECTION_SOUTHWEST: switch_conts_lidded_down_loadstack;
	switch_conts_lidded_up_loadstack;
}

//reversing switch for when containers are ctrl-flipped
switch(FEAT_TRAINS, SELF, switch_conts_lidded_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_conts_lidded_down_loadstack;
	DIRECTION_NORTH: switch_conts_lidded_down_loadstack;
	DIRECTION_NORTHEAST: switch_conts_lidded_down_loadstack;
	switch_conts_lidded_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_conts_lidded_flip, vehicle_is_flipped) {
	1: switch_conts_lidded_direction_flipped;
	switch_conts_lidded_direction;
	}


//stack mixed open

switch(FEAT_TRAINS, SELF, switch_conts_mixed_vented_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_1_mixed_vented_year;
	2:	switch_conts_2_mixed_vented_year;
	3:	switch_conts_3_mixed_vented_year;
	4:	switch_conts_4_mixed_vented_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_vented_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    1:  switch_conts_4_mixed_vented_year;
	2:	switch_conts_3_mixed_vented_year;
	3:	switch_conts_2_mixed_vented_year;
	4:	switch_conts_1_mixed_vented_year;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_vented_direction, direction) {
	DIRECTION_SOUTHEAST: switch_conts_mixed_vented_down_loadstack;
	DIRECTION_SOUTH: switch_conts_mixed_vented_down_loadstack;
	DIRECTION_SOUTHWEST: switch_conts_mixed_vented_down_loadstack;
	switch_conts_mixed_vented_up_loadstack;
}

//reversing switch for when containers are ctrl-flipped
switch(FEAT_TRAINS, SELF, switch_conts_mixed_vented_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_conts_mixed_vented_down_loadstack;
	DIRECTION_NORTH: switch_conts_mixed_vented_down_loadstack;
	DIRECTION_NORTHEAST: switch_conts_mixed_vented_down_loadstack;
	switch_conts_mixed_vented_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_conts_mixed_vented_flip, vehicle_is_flipped) {
	1: switch_conts_mixed_vented_direction_flipped;
	switch_conts_mixed_vented_direction;
	}



/////////

//final cargo select

switch(FEAT_TRAINS, SELF, switch_conts_cargo_class, cargo_classes) {
	bitmask(CC_LIQUID): switch_conts_liquid_flip;
	bitmask(CC_REFRIGERATED): switch_conts_food_flip;
	bitmask(CC_EXPRESS): switch_conts_general_flip;
	bitmask(CC_BULK): switch_conts_bulk_flip;
	bitmask(CC_POWDERIZED): switch_conts_bulk_flip;
//	bitmask(CC_PIECE_GOODS): switch_conts_mixed_open_flip;
	switch_conts_mixed_flip;
}

switch(FEAT_TRAINS, SELF, switch_conts_cargo_selection, cargo_type_in_veh) {
	MAIL: switch_conts_general_flip;
	GOOD: switch_conts_general_flip;
	FOOD: switch_conts_food_flip;

	VEHI: switch_conts_general_flip;
	ENSP: switch_conts_general_flip;
	FMSP: switch_conts_general_flip;
	TYRE: switch_conts_general_flip;
	VPTS: switch_conts_general_flip;
	MNSP: switch_conts_general_flip;
	
	PETR: switch_conts_liquid_flip;
	RFPR: switch_conts_liquid_flip;
	H2__: switch_conts_liquid_flip;
	CHLO: switch_conts_liquid_flip;

	ACID: switch_conts_liquid_flip;
	SULP: switch_conts_liquid_flip;

	COAT: switch_conts_mixed_liquid_flip;
	LYE_: switch_conts_mixed_liquid_flip;
	NH3_: switch_conts_mixed_liquid_flip;
	SOAP: switch_conts_mixed_liquid_flip;
	C3H6: switch_conts_mixed_liquid_flip;
	C2H4: switch_conts_mixed_liquid_flip;
	NAPH: switch_conts_mixed_liquid_flip;
	WELD: switch_conts_mixed_liquid_flip;
	
	BEER: switch_conts_mixed_food_flip;
	MILK: switch_conts_mixed_food_flip;
	EOIL: switch_conts_mixed_food_flip;
	FISH: switch_conts_food_flip;

	CMNT: switch_conts_bulk_flip;
	KAOL: switch_conts_bulk_flip;
	CBLK: switch_conts_bulk_flip;
	CLAY: switch_conts_bulk_flip;
	PLAS: switch_conts_bulk_flip;
	NHNO: switch_conts_bulk_flip;


	STEL: switch_conts_mixed_open_flip;
	ALUM: switch_conts_mixed_open_flip;
	CSTI: switch_conts_mixed_open_flip;
	METL: switch_conts_mixed_open_flip;
	COPR: switch_conts_mixed_open_flip;
	WDPR: switch_conts_mixed_open_flip;
	FOCA: switch_conts_mixed_open_flip;
	STAL: switch_conts_mixed_open_flip;
	STSH: switch_conts_mixed_open_flip;
	STSE: switch_conts_mixed_open_flip;
	STST: switch_conts_mixed_open_flip;
	STWR: switch_conts_mixed_open_flip;
	IRON: switch_conts_mixed_open_flip;
	STCB: switch_conts_mixed_open_flip;
	STPP: switch_conts_mixed_open_flip;
	ZINC: switch_conts_mixed_open_flip;


	//more metal cargos if needed


	RCYC: switch_conts_lidded_flip;
	WSTE: switch_conts_lidded_flip;
	SLAG: switch_conts_lidded_flip;
	CTAR: switch_conts_lidded_flip;
	FERT: switch_conts_lidded_flip;

	FRUT: switch_conts_mixed_vented_flip;
	BEAN: switch_conts_mixed_vented_flip;
	FRVG: switch_conts_mixed_vented_flip;
	JAVA: switch_conts_mixed_vented_flip;
	TATO: switch_conts_mixed_vented_flip;


	
	switch_conts_cargo_class;
}


random_switch(FEAT_TRAINS, SELF, random_conts_cargo_load_end_empty) {

	2: spriteset_blank;
    1: switch_conts_cargo_selection;

}

random_switch(FEAT_TRAINS, SELF, random_conts_cargo_load_end_half) {

	1: spriteset_blank;
    3: switch_conts_cargo_selection;

}

switch(FEAT_TRAINS, SELF, switch_conts_cargo_load_end, cargo_count) {
	0..1: random_conts_cargo_load_end_empty;
	1..40: random_conts_cargo_load_end_half;
	switch_conts_cargo_selection;
}

random_switch(FEAT_TRAINS, SELF, random_conts_cargo_load_middle_empty) {

	4: spriteset_blank;
    1: switch_conts_cargo_selection;

}

random_switch(FEAT_TRAINS, SELF, random_conts_cargo_load_middle_half) {

	1: spriteset_blank;
    2: switch_conts_cargo_selection;

}

switch(FEAT_TRAINS, SELF, switch_conts_cargo_load_middle, cargo_count) {
	0..10: spriteset_blank;
	10..30: random_conts_cargo_load_middle_empty;
	30..50: random_conts_cargo_load_middle_half;
	switch_conts_cargo_selection;
}

spriteset(spriteset_dmt_proto_purchase, "gfx/freight/dmt_front.png") {
	template_purchase(1, 416)
}

spriteset(spriteset_dmt_jrf_purchase, "gfx/freight/dmt_front.png") {
	template_purchase(89, 416)
}

spriteset(spriteset_dmt_rear, "gfx/freight/dmt_front.png") {
	template_2cc_dmt(180, 1)
}


spriteset(spriteset_dmt_front_a, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_dmt_front_b, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_dmt_front_c, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_dmt_front_d, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_dmt_front_e, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_dmt_front_f, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_dmt_front_g, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_dmt_front_h, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_dmt_front_i, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_dmt_front_j, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_dmt_front_k, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_dmt_front_l, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 352)
}

spriteset(spriteset_dmt_front_m, "gfx/freight/dmt_front.png") {
	template_2cc_std(1, 384)
}


//mids


spriteset(spriteset_dmt_mid_a, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_dmt_mid_b, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_dmt_mid_c, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_dmt_mid_d, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_dmt_mid_e, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_dmt_mid_f, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_dmt_mid_g, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_dmt_mid_h, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_dmt_mid_i, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_dmt_mid_j, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_dmt_mid_k, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_dmt_mid_l, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 352)
}

spriteset(spriteset_dmt_mid_m, "gfx/freight/dmt_mid.png") {
	template_2cc_std(1, 384)
}





random_switch(FEAT_TRAINS, SELF, switch_dmt_front_random_all) {
	1: spriteset_dmt_front_a;
    1: spriteset_dmt_front_b;
	1: spriteset_dmt_front_c;
    1: spriteset_dmt_front_d;
	1: spriteset_dmt_front_e;
	1: spriteset_dmt_front_f;
	1: spriteset_dmt_front_g;
	1: spriteset_dmt_front_h;
	1: spriteset_dmt_front_i;
	1: spriteset_dmt_front_j;
	1: spriteset_dmt_front_k;
	1: spriteset_dmt_front_l;
	1: spriteset_dmt_front_m;
}

random_switch(FEAT_TRAINS, SELF, switch_dmt_middle_random_all) {
	1: spriteset_dmt_mid_a;
    1: spriteset_dmt_mid_b;
	1: spriteset_dmt_mid_c;
    1: spriteset_dmt_mid_d;
	1: spriteset_dmt_mid_e;
	1: spriteset_dmt_mid_f;
	1: spriteset_dmt_mid_g;
	1: spriteset_dmt_mid_h;
	1: spriteset_dmt_mid_i;
	1: spriteset_dmt_mid_j;
	1: spriteset_dmt_mid_k;
	1: spriteset_dmt_mid_l;
	1: spriteset_dmt_mid_m;
}



random_switch(FEAT_TRAINS, SELF, switch_dmt_front_random_nocc) {
	1: spriteset_dmt_front_a;
    1: spriteset_dmt_front_b;
	1: spriteset_dmt_front_c;
    1: spriteset_dmt_front_d;
	1: spriteset_dmt_front_e;
	1: spriteset_dmt_front_f;
	1: spriteset_dmt_front_g;
}

random_switch(FEAT_TRAINS, SELF, switch_dmt_middle_random_nocc) {
	1: spriteset_dmt_mid_a;
    1: spriteset_dmt_mid_b;
	1: spriteset_dmt_mid_c;
    1: spriteset_dmt_mid_d;
	1: spriteset_dmt_mid_e;
	1: spriteset_dmt_mid_f;
	1: spriteset_dmt_mid_g;
}


random_switch(FEAT_TRAINS, SELF, switch_dmt_front_random_proto) {
	1: spriteset_dmt_front_h;
	1: spriteset_dmt_front_i;
	1: spriteset_dmt_front_j;
}

random_switch(FEAT_TRAINS, SELF, switch_dmt_middle_random_proto) {
	1: spriteset_dmt_mid_h;
	1: spriteset_dmt_mid_i;
	1: spriteset_dmt_mid_j;
}

random_switch(FEAT_TRAINS, SELF, switch_dmt_front_random_cc) {
	1: spriteset_dmt_front_k;
	1: spriteset_dmt_front_l;
	1: spriteset_dmt_front_m;
}

random_switch(FEAT_TRAINS, SELF, switch_dmt_middle_random_cc) {
	1: spriteset_dmt_mid_k;
	1: spriteset_dmt_mid_l;
	1: spriteset_dmt_mid_m;
}


/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_dmt_articulated_part, extra_callback_info1) {
	1: return dmt_middle;
	2: return dmt_middle;
    3: return dmt_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, switch_dmt_front_yeardep, build_year) {
	0..2002: switch_dmt_front_random_proto;
	switch_dmt_front_random_nocc;
}
	
switch (FEAT_TRAINS, SELF, switch_dmt_middle_yeardep, build_year) {
	0..2002: switch_dmt_middle_random_proto;
	switch_dmt_middle_random_nocc;
}


switch(FEAT_TRAINS, SELF, switch_dmt_front_livery, cargo_subtype) {
	1: spriteset_dmt_front_a;
	2: spriteset_dmt_front_b;
	3: spriteset_dmt_front_c;
	4: spriteset_dmt_front_d;
	5: spriteset_dmt_front_e;
	6: spriteset_dmt_front_f;
	7: spriteset_dmt_front_g;
	8: spriteset_dmt_front_h;
	9: switch_dmt_front_random_proto;
	10:  switch_dmt_front_random_cc;
	11: switch_dmt_front_random_all;
	switch_dmt_front_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_dmt_middle_livery, cargo_subtype) {
	1: spriteset_dmt_mid_a;
	2: spriteset_dmt_mid_b;
	3: spriteset_dmt_mid_c;
	4: spriteset_dmt_mid_d;
	5: spriteset_dmt_mid_e;
	6: spriteset_dmt_mid_f;
	7: spriteset_dmt_mid_g;
	8: spriteset_dmt_mid_h;
	9: switch_dmt_middle_random_proto;
	10: switch_dmt_middle_random_cc;
	11: switch_dmt_middle_random_all;
	switch_dmt_middle_yeardep;
}



switch(FEAT_TRAINS, SELF, switch_dmt_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_REFIT_DMT_SAGAWA);
	2: return string(STR_REFIT_DMT_JRF);
	3: return string(STR_REFIT_DMT_YAMATO);
	4: return string(STR_REFIT_DMT_SEINO);
	5: return string(STR_REFIT_DMT_FUKUYAMA);
	6: return string(STR_REFIT_DMT_FISH);
	7: return string(STR_REFIT_DMT_NITTSU);
	8: return string(STR_REFIT_DMT_SEINO);
	9: return string(STR_REFIT_DMT_PROTO);
	10: return string(STR_REFIT_CC);
	11: return string(STR_REFIT_RANDOM);
	   return CB_RESULT_NO_TEXT;
	}





switch (FEAT_TRAINS, SELF, switch_dmt_middle_length, position_in_vehid_chain_from_end) {
	0: return 8;
	return 7;
}

switch (FEAT_TRAINS, SELF, switch_dmt_yeardep_purchase, current_year) {
	0..2002: spriteset_dmt_proto_purchase;
	spriteset_dmt_jrf_purchase;
	}


item (FEAT_TRAINS, dmt_middle, 1408) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_ROADRAILER);
		climates_available: NO_CLIMATE;
		loading_speed: 40;
		cargo_capacity: 90; 
		refit_cost: 0;
		default_cargo_type: MAIL;
		loading_speed: 60;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, VALU, GOLD, DIAM, PAPR, FOOD, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, CTCD, BUBL, PLST, BEER, COPR, FICR, BDMT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PLAS, RCYC, WDPR, WOOL, VEHI, EOIL, JAVA]; 
		cargo_disallow_refit: [PASS, COAL, LVST, WOOD, IORE, CORE, AORE, BRCK, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, RFPR, VEHI];
		weight: 15;
		cost_factor: 11;
		introduction_date: date(1992,1,1);
		length: 7;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
	graphics {
		length: switch_dmt_middle_length;
		default: switch_dmt_middle_livery;
	}
}

item (FEAT_TRAINS, dmt_rear, 1409) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_ROADRAILER);
		climates_available: NO_CLIMATE;
		introduction_date: date(1992,1,1);
		weight: 1;
		length: 1;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
	graphics {
		default: spriteset_dmt_rear;
	}
}



item (FEAT_TRAINS, dmt, 1407) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_ROADRAILER);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1992,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 90; 
		refit_cost: 0;
		default_cargo_type: MAIL;
		loading_speed: 40;
		refittable_cargo_classes: bitmask(CC_MAIL, CC_PIECE_GOODS, CC_EXPRESS, CC_REFRIGERATED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, VALU, GOLD, DIAM, PAPR, FOOD, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, CTCD, BUBL, PLST, BEER, COPR, FICR, BDMT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PLAS, RCYC, WDPR, WOOL, VEHI, EOIL, JAVA]; 
		cargo_disallow_refit: [PASS, COAL, LVST, WOOD, IORE, CORE, AORE, BRCK, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, RFPR, VEHI];
		weight: 15;
		cost_factor: 100;
	running_cost_factor: 15;
	running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_DMT),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JRF)
							)
						);
		speed: switch_speedboost_1;
		cargo_age_period: switch_container_cargo_decay;
//		cargo_capacity: return 50;
		default: switch_dmt_front_livery;
		purchase: switch_dmt_yeardep_purchase;
//		length: switch_dmt_rear_length;
		refit_cost: CB_RESULT_AUTOREFIT;
		articulated_part: switch_dmt_articulated_part;
		cargo_subtype_text: switch_dmt_subtype_text;
	}
}
spriteset(spriteset_koki_5500_purchase, "gfx/freight/koki_test.png") {
	template_purchase(1, 352)
}

//base
spriteset(spriteset_koki_5500_empty_a, "gfx/freight/koki_test.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_koki_5500_empty_b, "gfx/freight/koki_test.png") {
	template_2cc_std(1, 32)
}

//handrail

spriteset(spriteset_koki_5500_handrail, "gfx/freight/koki_test.png") {
	template_2cc_std(1, 320)
}



random_switch (FEAT_TRAINS, SELF, random_koki_5500_brown) {
	2: spriteset_koki_5500_empty_a;
	1: spriteset_koki_5500_empty_b;
}




switch(FEAT_TRAINS, SELF, switch_koki_5500_base_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_5500_brown;
    1:  switch_conts_cargo_load_end;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	switch_conts_cargo_load_end;
	5:  spriteset_koki_5500_handrail;
	6:  switch_taillights_8;
}


item (FEAT_TRAINS, koki_5500, 1412) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_KOKI_5500);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1959,1,1);
		speed: 85 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 60; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 35;
		refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_LIQUID, CC_POWDERIZED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, OIL_, PAPR, FOOD, RUBR, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, BEER, COPR, FICR, BDMT, CERA, CMNT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PETR, PLAS, RCYC, RFPR, SULP, WDPR, WOOL, VEHI, EOIL, ACID, CHLO, SLAG]; 
		cargo_disallow_refit: [PASS, COAL, LVST, GRAI, WOOD, IORE, VALU, WHEA, GOLD, MAIZ, CORE, DIAM, AORE, CERE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, JAVA];
		weight: 20;
		cost_factor: 30;
	running_cost_factor: 5;
	running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CONT),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);
		speed: switch_speedboost_1;
		purchase_speed: return 85;
		cargo_capacity: return 60;
		cargo_age_period: switch_container_cargo_decay;
		default: switch_koki_5500_base_loadstack;
		purchase: spriteset_koki_5500_purchase;
		refit_cost: CB_RESULT_AUTOREFIT;
		reverse_build_probability: return 50;
	}
}
spriteset(spriteset_koki_10000_purchase, "gfx/freight/koki_10000.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_kokifu_10000_purchase, "gfx/freight/koki_10000.png") {
	template_purchase(89, 352)
}

//base
spriteset(spriteset_koki_10000_empty_a, "gfx/freight/koki_10000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_koki_10000_empty_b, "gfx/freight/koki_10000.png") {
	template_2cc_std(1, 32)
}

//handrail

spriteset(spriteset_koki_10000_handrail, "gfx/freight/koki_10000.png") {
	template_2cc_std(1, 320)
}

//brake van

spriteset(spriteset_koki_10000_brakevan_front, "gfx/freight/koki_10000.png") {
	template_container_1(1, 64)
}

spriteset(spriteset_koki_10000_brakevan_rear, "gfx/freight/koki_10000.png") {
	template_container_4(1, 64)
}

random_switch (FEAT_TRAINS, SELF, random_koki_10000_blue) {
	2: spriteset_koki_10000_empty_a;
	1: spriteset_koki_10000_empty_b;
}


//brakevan test


switch(FEAT_TRAINS, SELF, switch_kokifu_10000_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_10000_blue;
    1:  switch_conts_cargo_load_end;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	spriteset_koki_10000_brakevan_rear;
	5:  spriteset_blank;
	6:  switch_taillights_8;
}

switch(FEAT_TRAINS, SELF, switch_kokifu_10000_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_10000_blue;
    1:  spriteset_koki_10000_brakevan_rear;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	switch_conts_cargo_load_end;
	5:  spriteset_blank;
	6:  switch_taillights_8;
}

switch(FEAT_TRAINS, SELF, switch_kokifu_10000_direction, direction) {
	DIRECTION_SOUTHEAST: switch_kokifu_10000_down_loadstack;
	DIRECTION_SOUTH: switch_kokifu_10000_down_loadstack;
	DIRECTION_SOUTHWEST: switch_kokifu_10000_down_loadstack;
	switch_kokifu_10000_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_kokifu_10000_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_kokifu_10000_down_loadstack;
	DIRECTION_NORTH: switch_kokifu_10000_down_loadstack;
	DIRECTION_NORTHEAST: switch_kokifu_10000_down_loadstack;
	switch_kokifu_10000_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_kokifu_10000_flip, vehicle_is_flipped) {
	1: switch_kokifu_10000_direction_flipped;
	switch_kokifu_10000_direction;
	}



switch(FEAT_TRAINS, SELF, switch_koki_10000_base_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_10000_blue;
    1:  switch_conts_cargo_load_end;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	switch_conts_cargo_load_end;
	5:  spriteset_koki_10000_handrail;
	6:  switch_taillights_8;
}


item (FEAT_TRAINS, koki_10000, 1413) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_KOKI_10000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1966,1,1);
		speed: 85 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 60; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 35;
		refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_LIQUID, CC_POWDERIZED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, OIL_, PAPR, FOOD, RUBR, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, BEER, COPR, FICR, BDMT, CERA, CMNT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PETR, PLAS, RCYC, RFPR, SULP, WDPR, WOOL, VEHI, EOIL, ACID, CHLO, SLAG]; 
		cargo_disallow_refit: [PASS, COAL, LVST, GRAI, WOOD, IORE, VALU, WHEA, GOLD, MAIZ, CORE, DIAM, AORE, CERE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, JAVA];
		weight: 20;
		cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CONT),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);
		speed: switch_speedboost_1;
		purchase_speed: return 85;
		cargo_capacity: return 60;
		cargo_age_period: switch_container_cargo_decay;
		default: switch_koki_10000_base_loadstack;
		purchase: spriteset_koki_10000_purchase;
		refit_cost: CB_RESULT_AUTOREFIT;
		reverse_build_probability: return 50;
	}
}

item (FEAT_TRAINS, kokifu_10000, 1433) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_KOKIFU_10000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1966,1,1);
		speed: 100 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 45; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 35;
		refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_LIQUID, CC_POWDERIZED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, OIL_, PAPR, FOOD, RUBR, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, BEER, COPR, FICR, BDMT, CERA, CMNT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PETR, PLAS, RCYC, RFPR, SULP, WDPR, WOOL, VEHI, EOIL, ACID, CHLO, SLAG]; 
		cargo_disallow_refit: [PASS, COAL, LVST, GRAI, WOOD, IORE, VALU, WHEA, GOLD, MAIZ, CORE, DIAM, AORE, CERE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, JAVA];
		weight: 20;
		cost_factor: 50;
	running_cost_factor: 12;
	running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
		bitmask_vehicle_info: bitmask(2);//speed boost 100
		variant_group: 1413;
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_BRAKE),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JNR)
							)
						);
		speed: switch_speedboost_1;
		purchase_speed: return 100;
		cargo_capacity: return 45;
		cargo_age_period: switch_container_cargo_decay;
		default: switch_kokifu_10000_flip;
		purchase: spriteset_kokifu_10000_purchase;
		refit_cost: CB_RESULT_AUTOREFIT;
		reverse_build_probability: return 50;
	}
}
spriteset(spriteset_koki_50000_purchase, "gfx/freight/koki_50000.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_kokifu_50000_purchase, "gfx/freight/koki_50000.png") {
	template_purchase(89, 352)
}

alternative_sprites(spriteset_koki_50000_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/koki_50000.png") {
	template_purchase(1, 352)
}

alternative_sprites(spriteset_kokifu_50000_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/koki_50000.png") {
	template_purchase(89, 352)
}


//base
spriteset(spriteset_koki_50000_empty_a, "gfx/freight/koki_50000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_koki_50000_empty_b, "gfx/freight/koki_50000.png") {
	template_2cc_std(1, 32)
}

//handrail

spriteset(spriteset_koki_50000_handrail, "gfx/freight/koki_50000.png") {
	template_2cc_std(1, 320)
}

//brake van

spriteset(spriteset_koki_50000_brakevan_front, "gfx/freight/koki_50000.png") {
	template_container_1(1, 64)
}

spriteset(spriteset_koki_50000_brakevan_rear, "gfx/freight/koki_50000.png") {
	template_container_4(1, 64)
}

random_switch (FEAT_TRAINS, SELF, random_koki_50000_brown) {
	2: spriteset_koki_50000_empty_a;
	1: spriteset_koki_50000_empty_b;
}




switch(FEAT_TRAINS, SELF, switch_kokifu_50000_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_50000_brown;
    1:  switch_conts_cargo_load_end;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	spriteset_koki_50000_brakevan_rear;
	5:  spriteset_blank;
	6:  switch_taillights_8;
}

switch(FEAT_TRAINS, SELF, switch_kokifu_50000_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_50000_brown;
    1:  spriteset_koki_50000_brakevan_rear;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	switch_conts_cargo_load_end;
	5:  spriteset_blank;
	6:  switch_taillights_8;
}

switch(FEAT_TRAINS, SELF, switch_kokifu_50000_direction, direction) {
	DIRECTION_SOUTHEAST: switch_kokifu_50000_down_loadstack;
	DIRECTION_SOUTH: switch_kokifu_50000_down_loadstack;
	DIRECTION_SOUTHWEST: switch_kokifu_50000_down_loadstack;
	switch_kokifu_50000_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_kokifu_50000_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_kokifu_50000_down_loadstack;
	DIRECTION_NORTH: switch_kokifu_50000_down_loadstack;
	DIRECTION_NORTHEAST: switch_kokifu_50000_down_loadstack;
	switch_kokifu_50000_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_kokifu_50000_flip, vehicle_is_flipped) {
	1: switch_kokifu_50000_direction_flipped;
	switch_kokifu_50000_direction;
	}







switch(FEAT_TRAINS, SELF, switch_koki_50000_base_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_50000_brown;
    1:  switch_conts_cargo_load_end;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	switch_conts_cargo_load_end;
	5:  spriteset_koki_50000_handrail;
	6:  switch_taillights_8;
}


item (FEAT_TRAINS, koki_50000, 1414) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_KOKI_50000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1971,1,1);
		speed: 95 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 70; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 35;
		refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_LIQUID, CC_POWDERIZED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, OIL_, PAPR, FOOD, RUBR, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, BEER, COPR, FICR, BDMT, CERA, CMNT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PETR, PLAS, RCYC, RFPR, SULP, WDPR, WOOL, VEHI, EOIL, ACID, CHLO, SLAG]; 
		cargo_disallow_refit: [PASS, COAL, LVST, GRAI, WOOD, IORE, VALU, WHEA, GOLD, MAIZ, CORE, DIAM, AORE, CERE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, JAVA];
		weight: 20;
		cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CONT),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);
		speed: switch_speedboost_1;
		cargo_capacity: return 70;
		cargo_age_period: switch_container_cargo_decay;
		purchase_speed: return 95;
		default: switch_koki_50000_base_loadstack;
		purchase: spriteset_koki_50000_purchase;
		refit_cost: CB_RESULT_AUTOREFIT;
		reverse_build_probability: return 50;
	}
}

item (FEAT_TRAINS, kokifu_50000, 1434) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_KOKIFU_50000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1971,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 55; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 35;
		refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_LIQUID, CC_POWDERIZED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, OIL_, PAPR, FOOD, RUBR, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, BEER, COPR, FICR, BDMT, CERA, CMNT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PETR, PLAS, RCYC, RFPR, SULP, WDPR, WOOL, VEHI, EOIL, ACID, CHLO, SLAG]; 
		cargo_disallow_refit: [PASS, COAL, LVST, GRAI, WOOD, IORE, VALU, WHEA, GOLD, MAIZ, CORE, DIAM, AORE, CERE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, JAVA];
		weight: 20;
		cost_factor: 50;
	running_cost_factor: 15;
	running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
		bitmask_vehicle_info: bitmask(1);//speed boost 110
		variant_group: 1414;
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_BRAKE),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JNR)
							)
						);
		speed: switch_speedboost_1;
		cargo_capacity: return 55;
		cargo_age_period: switch_container_cargo_decay;
		default: switch_kokifu_50000_flip;
		purchase: spriteset_kokifu_50000_purchase;
		refit_cost: CB_RESULT_AUTOREFIT;
		reverse_build_probability: return 50;
	}
}

//koki 250000

spriteset(spriteset_koki_250000_jnr_purchase, "gfx/freight/koki_250000.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_koki_250000_jrf_purchase, "gfx/freight/koki_250000.png") {
	template_purchase(89, 352)
}

alternative_sprites(spriteset_koki_250000_jnr_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/koki_250000.png") {
	template_purchase(1, 352)
}

alternative_sprites(spriteset_koki_250000_jrf_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/koki_250000.png") {
	template_purchase(89, 352)
}

//base
spriteset(spriteset_koki_250000_empty_a, "gfx/freight/koki_250000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_koki_250000_empty_b, "gfx/freight/koki_250000.png") {
	template_2cc_std(1, 32)
}

alternative_sprites(spriteset_koki_250000_empty_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/koki_250000.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_koki_250000_empty_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/koki_250000.png") {
	template_2cc_std(1, 32)
}

//handrail

spriteset(spriteset_koki_250000_handrail, "gfx/freight/koki_250000.png") {
	template_2cc_std(1, 320)
}

alternative_sprites(spriteset_koki_250000_handrail, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/koki_250000.png") {
	template_2cc_std(1, 320)
}


switch(FEAT_TRAINS, SELF, switch_koki_250000_purchase, current_year) {
	0..1987: spriteset_koki_250000_jnr_purchase;
	spriteset_koki_250000_jrf_purchase;
}


random_switch (FEAT_TRAINS, SELF, random_koki_250000_green) {
	2: spriteset_koki_250000_empty_a;
	1: spriteset_koki_250000_empty_b;
}

//main

switch(FEAT_TRAINS, SELF, switch_koki_250000_base_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_250000_green;
    1:  switch_conts_cargo_load_end;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	switch_conts_cargo_load_end;
	5:  spriteset_koki_250000_handrail;
	6:  switch_taillights_8;
}


item (FEAT_TRAINS, koki_250000, 1415) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_KOKI_250000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1985,1,1);
		speed: 100 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 70; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 35;
		refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_LIQUID, CC_POWDERIZED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, OIL_, PAPR, FOOD, RUBR, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, BEER, COPR, FICR, BDMT, CERA, CMNT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PETR, PLAS, RCYC, RFPR, SULP, WDPR, WOOL, VEHI, EOIL, ACID, CHLO, SLAG]; 
		cargo_disallow_refit: [PASS, COAL, LVST, GRAI, WOOD, IORE, VALU, WHEA, GOLD, MAIZ, CORE, DIAM, AORE, CERE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, JAVA];
		weight: 20;
		cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
		variant_group: 1414;
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CONT),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);
		speed: switch_speedboost_1;
		cargo_capacity: return 70;
		cargo_age_period: switch_container_cargo_decay;
		purchase_speed: return 100;
		default: switch_koki_250000_base_loadstack;
		purchase: switch_koki_250000_purchase;
		refit_cost: CB_RESULT_AUTOREFIT;
		reverse_build_probability: return 50;
	}
}




//koki 350000

spriteset(spriteset_koki_350000_jnr_purchase, "gfx/freight/koki_350000.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_koki_350000_jrf_purchase, "gfx/freight/koki_350000.png") {
	template_purchase(89, 352)
}

//base
spriteset(spriteset_koki_350000_empty_a, "gfx/freight/koki_350000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_koki_350000_empty_b, "gfx/freight/koki_350000.png") {
	template_2cc_std(1, 32)
}

//handrail

spriteset(spriteset_koki_350000_handrail, "gfx/freight/koki_350000.png") {
	template_2cc_std(1, 320)
}


switch(FEAT_TRAINS, SELF, switch_koki_350000_purchase, current_year) {
	0..1987: spriteset_koki_350000_jnr_purchase;
	spriteset_koki_350000_jrf_purchase;
}


random_switch (FEAT_TRAINS, SELF, random_koki_350000_yellow) {
	2: spriteset_koki_350000_empty_a;
	1: spriteset_koki_350000_empty_b;
}

//main

switch(FEAT_TRAINS, SELF, switch_koki_350000_base_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_350000_yellow;
    1:  switch_conts_cargo_load_end;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	switch_conts_cargo_load_end;
	5:  spriteset_koki_350000_handrail;
	6:  switch_taillights_8;
}


item (FEAT_TRAINS, koki_350000, 1416) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_KOKI_350000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1988,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 70; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 35;
		refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_LIQUID, CC_POWDERIZED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, OIL_, PAPR, FOOD, RUBR, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, BEER, COPR, FICR, BDMT, CERA, CMNT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PETR, PLAS, RCYC, RFPR, SULP, WDPR, WOOL, VEHI, EOIL, ACID, CHLO, SLAG]; 
		cargo_disallow_refit: [PASS, COAL, LVST, GRAI, WOOD, IORE, VALU, WHEA, GOLD, MAIZ, CORE, DIAM, AORE, CERE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, JAVA];
		weight: 20;
		cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
		variant_group: 1414;
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CONT),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);
		speed: switch_speedboost_1;
		cargo_capacity: return 70;
		cargo_age_period: switch_container_cargo_decay;
		purchase_speed: return 110;
		default: switch_koki_350000_base_loadstack;
		purchase: switch_koki_350000_purchase;
		refit_cost: CB_RESULT_AUTOREFIT;
		reverse_build_probability: return 50;
	}
}

spriteset(spriteset_koki_100_empty_a, "gfx/freight/koki_100.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_koki_100_empty_b, "gfx/freight/koki_100.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_koki_100_empty_c, "gfx/freight/koki_100.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_koki_100_empty_d, "gfx/freight/koki_100.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_koki_107_empty_a, "gfx/freight/koki_100.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_koki_107_empty_b, "gfx/freight/koki_100.png") {
	template_2cc_std(1, 224)
}

//purchase

spriteset(spriteset_koki_100_purchase, "gfx/freight/koki_100.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_koki_107_purchase, "gfx/freight/koki_100.png") {
	template_purchase(89, 352)
}

//handrail

spriteset(spriteset_koki_100_handrail, "gfx/freight/koki_100.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_koki_107_handrail, "gfx/freight/koki_100.png") {
	template_2cc_std(1, 320)
}

random_switch (FEAT_TRAINS, SELF, random_koki_100_base) {
	1: spriteset_koki_100_empty_a;
	1: spriteset_koki_100_empty_b;
	1: spriteset_koki_100_empty_c;
	1: spriteset_koki_100_empty_d;
}

random_switch (FEAT_TRAINS, SELF, random_koki_100_handrail) {
    dependent: random_koki_100_base;
	1: spriteset_blank;
	1: spriteset_blank;
	1: spriteset_koki_100_handrail;
	1: spriteset_koki_100_handrail;
}



switch(FEAT_TRAINS, SELF, switch_koki_100_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_100_base;
    1:  switch_conts_cargo_load_end;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	switch_conts_cargo_load_end;
	5:  spriteset_blank;
	6:  switch_taillights_8;
}

switch(FEAT_TRAINS, SELF, switch_koki_100_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_100_base;
    1:  switch_conts_cargo_load_end;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	switch_conts_cargo_load_end;
	5:  random_koki_100_handrail;
	6:  switch_taillights_8;
}

switch(FEAT_TRAINS, SELF, switch_koki_100_direction, direction) {
	DIRECTION_SOUTHEAST: switch_koki_100_down_loadstack;
	DIRECTION_SOUTH: switch_koki_100_down_loadstack;
	DIRECTION_SOUTHWEST: switch_koki_100_down_loadstack;
	switch_koki_100_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_koki_100_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_koki_100_down_loadstack;
	DIRECTION_NORTH: switch_koki_100_down_loadstack;
	DIRECTION_NORTHEAST: switch_koki_100_down_loadstack;
	switch_koki_100_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_koki_100_flip, vehicle_is_flipped) {
	1: switch_koki_100_direction_flipped;
	switch_koki_100_direction;
	}



item (FEAT_TRAINS, koki_100, 1400) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_KOKI_100);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1988,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 75; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 35;
		refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_LIQUID, CC_POWDERIZED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, OIL_, PAPR, FOOD, RUBR, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, BEER, COPR, FICR, BDMT, CERA, CMNT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PETR, PLAS, RCYC, RFPR, SULP, WDPR, WOOL, VEHI, EOIL, ACID, CHLO, SLAG]; 
		cargo_disallow_refit: [PASS, COAL, ALO_, LVST, GRAI, WOOD, IORE, VALU, WHEA, GOLD, MAIZ, CORE, DIAM, AORE, CERE, GRVL, LIME, OLSD, SAND, SCMT, SGBT, SGCN, TOUR, JAVA];
		weight: 20;
		cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CONT),
							string(STR_CONCAT_1C, 	
								string(STR_SUFFIX_JRF)
							)
						);
		speed: switch_speedboost_1;
		cargo_capacity: return 75;
		cargo_age_period: switch_container_cargo_decay;
		purchase_speed: return 110;
		default: switch_koki_100_flip;
		purchase: spriteset_koki_100_purchase;
		refit_cost: CB_RESULT_AUTOREFIT;
		reverse_build_probability: return 50;
	}
}

random_switch (FEAT_TRAINS, SELF, random_koki_107_base) {
	1: spriteset_koki_107_empty_a;
	1: spriteset_koki_107_empty_b;
}



switch(FEAT_TRAINS, SELF, switch_koki_107_up_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_107_base;
    1:  switch_conts_cargo_load_end;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	switch_conts_cargo_load_end;
	5:  spriteset_blank;
	6:  switch_taillights_8;
}

switch(FEAT_TRAINS, SELF, switch_koki_107_down_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 7 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_koki_107_base;
    1:  switch_conts_cargo_load_end;
	2:	switch_conts_cargo_load_middle;
	3:	switch_conts_cargo_load_middle;
	4:	switch_conts_cargo_load_end;
	5:  spriteset_koki_107_handrail;
	6:  switch_taillights_8;
}

switch(FEAT_TRAINS, SELF, switch_koki_107_direction, direction) {
	DIRECTION_SOUTHEAST: switch_koki_107_down_loadstack;
	DIRECTION_SOUTH: switch_koki_107_down_loadstack;
	DIRECTION_SOUTHWEST: switch_koki_107_down_loadstack;
	switch_koki_107_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_koki_107_direction_flipped, direction) {
	DIRECTION_NORTHWEST: switch_koki_107_down_loadstack;
	DIRECTION_NORTH: switch_koki_107_down_loadstack;
	DIRECTION_NORTHEAST: switch_koki_107_down_loadstack;
	switch_koki_107_up_loadstack;
}

switch(FEAT_TRAINS, SELF, switch_koki_107_flip, vehicle_is_flipped) {
	1: switch_koki_107_direction_flipped;
	switch_koki_107_direction;
	}




item (FEAT_TRAINS, koki_107, 1417) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_KOKI_107);
		climates_available: ALL_CLIMATES;
		introduction_date: date(2006,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 80; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 35;
		refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_EXPRESS, CC_LIQUID, CC_POWDERIZED); 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [MAIL, GOOD, OIL_, PAPR, FOOD, RUBR, FRUT, WATR, SUGR, TOYS, BATT, STEL, METL, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, BEER, COPR, FICR, BDMT, CERA, CMNT, DYES, ENSP, FERT, FISH, FMSP, FRVG, GLAS, MILK, MNSP, PETR, PLAS, RCYC, RFPR, SULP, WDPR, WOOL, VEHI, EOIL, ACID, CHLO, SLAG]; 
		cargo_disallow_refit: [PASS, COAL, LVST, GRAI, WOOD, IORE, VALU, WHEA, GOLD, MAIZ, CORE, DIAM, AORE, CERE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, JAVA];
		weight: 20;
		cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        variant_group: 1400;
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CONT),
							string(STR_CONCAT_1C, 	
								string(STR_SUFFIX_JRF)
							)
						);
		speed: switch_speedboost_1;
		cargo_age_period: switch_container_cargo_decay;
		cargo_capacity: return 80;
		purchase_speed: return 110;
		default: switch_koki_107_flip;
		purchase: spriteset_koki_107_purchase;
		refit_cost: CB_RESULT_AUTOREFIT;
		reverse_build_probability: return 50;
	}
}



//a

spriteset(spriteset_coilcarrier_a_empty, "gfx/freight/steel_coilcarrier_a.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_coilcarrier_coils_a_half, "gfx/freight/steel_coilcarrier_a.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_coilcarrier_coils_a_full, "gfx/freight/steel_coilcarrier_a.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_coilcarrier_sheets_a_half, "gfx/freight/steel_coilcarrier_a.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_coilcarrier_sheets_a_full, "gfx/freight/steel_coilcarrier_a.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_coilcarrier_rods_a_half, "gfx/freight/steel_coilcarrier_a.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_coilcarrier_rods_a_full, "gfx/freight/steel_coilcarrier_a.png") {
	template_2cc_std(1, 192)
}

//b

spriteset(spriteset_coilcarrier_b_empty, "gfx/freight/steel_coilcarrier_b.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_coilcarrier_coils_b_half, "gfx/freight/steel_coilcarrier_b.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_coilcarrier_coils_b_full, "gfx/freight/steel_coilcarrier_b.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_coilcarrier_sheets_b_half, "gfx/freight/steel_coilcarrier_b.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_coilcarrier_sheets_b_full, "gfx/freight/steel_coilcarrier_b.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_coilcarrier_rods_b_half, "gfx/freight/steel_coilcarrier_b.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_coilcarrier_rods_b_full, "gfx/freight/steel_coilcarrier_b.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_coilcarrier_yawata_purchase, "gfx/freight/steel_coilcarrier_a.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_coilcarrier_nippon_purchase, "gfx/freight/steel_coilcarrier_a.png") {
	template_purchase(89, 256)
}

switch(FEAT_TRAINS, SELF, switch_coilcarrier_purchase, current_year) {
	0..1990: spriteset_coilcarrier_yawata_purchase;
	spriteset_coilcarrier_nippon_purchase;
	}

//coilcarrier spritegroups

spritegroup spritegroup_coilcarrier_coils_a {
    loading: [spriteset_coilcarrier_a_empty, spriteset_coilcarrier_coils_a_half, spriteset_coilcarrier_coils_a_full];
    loaded: [spriteset_coilcarrier_a_empty, spriteset_coilcarrier_coils_a_half, spriteset_coilcarrier_coils_a_full];
}

spritegroup spritegroup_coilcarrier_sheets_a {
    loading: [spriteset_coilcarrier_a_empty, spriteset_coilcarrier_sheets_a_half, spriteset_coilcarrier_sheets_a_full];
    loaded: [spriteset_coilcarrier_a_empty, spriteset_coilcarrier_sheets_a_half, spriteset_coilcarrier_sheets_a_full];
}

spritegroup spritegroup_coilcarrier_rods_a {
    loading: [spriteset_coilcarrier_a_empty, spriteset_coilcarrier_rods_a_half, spriteset_coilcarrier_rods_a_full];
    loaded: [spriteset_coilcarrier_a_empty, spriteset_coilcarrier_rods_a_half, spriteset_coilcarrier_rods_a_full];
}

spritegroup spritegroup_coilcarrier_coils_b {
    loading: [spriteset_coilcarrier_b_empty, spriteset_coilcarrier_coils_b_half, spriteset_coilcarrier_coils_b_full];
    loaded: [spriteset_coilcarrier_b_empty, spriteset_coilcarrier_coils_b_half, spriteset_coilcarrier_coils_b_full];
}

spritegroup spritegroup_coilcarrier_sheets_b {
    loading: [spriteset_coilcarrier_b_empty, spriteset_coilcarrier_sheets_b_half, spriteset_coilcarrier_sheets_b_full];
    loaded: [spriteset_coilcarrier_b_empty, spriteset_coilcarrier_sheets_b_half, spriteset_coilcarrier_sheets_b_full];
}

spritegroup spritegroup_coilcarrier_rods_b {
    loading: [spriteset_coilcarrier_b_empty, spriteset_coilcarrier_rods_b_half, spriteset_coilcarrier_rods_b_full];
    loaded: [spriteset_coilcarrier_b_empty, spriteset_coilcarrier_rods_b_half, spriteset_coilcarrier_rods_b_full];
}


random_switch(FEAT_TRAINS, SELF, random_coilcarrier_coils_livery) {
	1: spritegroup_coilcarrier_coils_a;
    1: spritegroup_coilcarrier_coils_b;
}

random_switch(FEAT_TRAINS, SELF, random_coilcarrier_sheets_livery) {
	1: spritegroup_coilcarrier_sheets_a;
    1: spritegroup_coilcarrier_sheets_b;
}

random_switch(FEAT_TRAINS, SELF, random_coilcarrier_rods_livery) {
	1: spritegroup_coilcarrier_rods_a;
    1: spritegroup_coilcarrier_rods_b;
}

random_switch(FEAT_TRAINS, SELF, random_coilcarrier_sections) {
	1: random_coilcarrier_sheets_livery;
    1: random_coilcarrier_rods_livery;
}

random_switch(FEAT_TRAINS, SELF, random_coilcarrier_metals) {
	1: random_coilcarrier_coils_livery;
    1: random_coilcarrier_sheets_livery;
}

random_switch(FEAT_TRAINS, SELF, random_coilcarrier_all) {
	1: random_coilcarrier_coils_livery;
    1: random_coilcarrier_sheets_livery;
    1: random_coilcarrier_rods_livery;
}




switch(FEAT_TRAINS, SELF, switch_coilcarrier_cargo_selection, cargo_type_in_veh) {
	STEL: random_coilcarrier_coils_livery;
	ALUM: random_coilcarrier_coils_livery;
	METL: random_coilcarrier_metals;
	ZINC: random_coilcarrier_metals;
	COPR: random_coilcarrier_metals;
	IRON: random_coilcarrier_sheets_livery;
	NICK: random_coilcarrier_metals;
	STST: random_coilcarrier_metals;
	STAL: random_coilcarrier_metals;
	STCB: random_coilcarrier_metals;
	STSE: random_coilcarrier_sections;
	STSH: random_coilcarrier_sheets_livery;
	STWR: random_coilcarrier_rods_livery;
	
	random_coilcarrier_all;
}


item (FEAT_TRAINS, coil_carrier, 1402) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_COIL_CARRIER);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1920,1,1);
		speed: 65 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 42; 
		refit_cost: 0;
		default_cargo_type: STEL;
		loading_speed: 20;
		refittable_cargo_classes: 0; 
		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [STEL, METL, COPR, ALUM, ZINC, IRON, NICK, STAL, STCB, STSE, STSH, STST, STWR, COBL]; 
		cargo_disallow_refit: [PASS, COAL, LVST, GRAI, WOOD, IORE, VALU, WHEA, GOLD, MAIZ, CORE, DIAM, AORE, BRCK, CERE, CLAY, GRVL, LIME, OLSD, POTA, SAND, SCMT, SGBT, SGCN, TOUR, JAVA, MAIL, OIL_, PAPR, FOOD, RUBR, FRUT, WATR, SUGR, TOYS, BATT, SWET, TOFF, COLA, CTCD, BUBL, PLST, FZDR, BEER, FICR, BDMT, CERA, CMNT, DYES, FERT, FISH, FRVG, GLAS, MILK, MNSP, PETR, PLAS, RCYC, RFPR, SULP, WDPR, WOOL, EOIL, ACID, CHLO];
		weight: 10;
		cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
		length: 6;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
	graphics {
		additional_text:	string(STR_CONCAT_4S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_FRT_STEL),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_YAWATA),
									string(STR_SUFFIX_PRIVATE)
								)
							);

		speed: switch_speedboost_1;
		purchase_speed: return 65;
		cargo_capacity: return 42;
		default: switch_coilcarrier_cargo_selection;
		purchase: switch_coilcarrier_purchase;
		colour_mapping: switch_generic_recolour;
		refit_cost: CB_RESULT_AUTOREFIT;
	}
}

// CHIKI loads, separate later

spriteset(spriteset_flatbed_5_blank, "gfx/blank.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_flatbed_5_tarp_a, "gfx/containers/flatbed_5.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_flatbed_5_tarp_b, "gfx/containers/flatbed_5.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_flatbed_5_tarp_c, "gfx/containers/flatbed_5.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_flatbed_5_logs_half, "gfx/containers/flatbed_5.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_flatbed_5_logs_full, "gfx/containers/flatbed_5.png") {
	template_2cc_std(1, 128)
}


spriteset(spriteset_flatbed_5_rods_half, "gfx/containers/flatbed_5.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_flatbed_5_rods_full, "gfx/containers/flatbed_5.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_flatbed_5_beams_half, "gfx/containers/flatbed_5.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_flatbed_5_beams_full, "gfx/containers/flatbed_5.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_flatbed_5_fmsp, "gfx/containers/flatbed_5.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_flatbed_5_ensp, "gfx/containers/flatbed_5.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_flatbed_5_pipes_half, "gfx/containers/flatbed_5.png") {
	template_2cc_std(180, 1)
}


spriteset(spriteset_flatbed_5_pipes_full, "gfx/containers/flatbed_5.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_flatbed_5_slabs_half, "gfx/containers/flatbed_5.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_flatbed_5_slabs_full, "gfx/containers/flatbed_5.png") {
	template_2cc_std(180, 96)
}


spriteset(spriteset_flatbed_5_coils_half, "gfx/containers/flatbed_5.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_flatbed_5_coils_full, "gfx/containers/flatbed_5.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_flatbed_5_vehi, "gfx/containers/flatbed_5.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_flatbed_5_cars_a, "gfx/containers/flatbed_5.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_flatbed_5_cars_b, "gfx/containers/flatbed_5.png") {
	template_2cc_std(180, 256)
}

spriteset(spriteset_flatbed_5_cars_c, "gfx/containers/flatbed_5.png") {
	template_2cc_std(180, 288)
}

spriteset(spriteset_flatbed_5_cars_d, "gfx/containers/flatbed_5.png") {
	template_2cc_std(180, 320)
}


//loads spritegroups


spritegroup spritegroup_flatbed_5_tarp_a {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_tarp_a];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_tarp_a];
}

spritegroup spritegroup_flatbed_5_tarp_b {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_tarp_b];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_tarp_b];
}

spritegroup spritegroup_flatbed_5_tarp_c {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_tarp_c];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_tarp_c];
}

spritegroup spritegroup_flatbed_5_fmsp {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_fmsp];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_fmsp];
}

spritegroup spritegroup_flatbed_5_ensp {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_ensp];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_ensp];
}

spritegroup spritegroup_flatbed_5_vehi {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_vehi];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_vehi];
}


spritegroup spritegroup_flatbed_5_cars_a {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_cars_a];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_cars_a];
}

spritegroup spritegroup_flatbed_5_cars_b {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_cars_b];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_cars_b];
}

spritegroup spritegroup_flatbed_5_cars_c {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_cars_c];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_cars_c];
}

spritegroup spritegroup_flatbed_5_cars_d {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_cars_d];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_cars_d];
}


spritegroup spritegroup_flatbed_5_logs {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_logs_half, spriteset_flatbed_5_logs_full];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_logs_half, spriteset_flatbed_5_logs_full];
}

spritegroup spritegroup_flatbed_5_rods {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_rods_half, spriteset_flatbed_5_rods_full];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_rods_half, spriteset_flatbed_5_rods_full];
}

spritegroup spritegroup_flatbed_5_beams {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_beams_half, spriteset_flatbed_5_beams_full];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_beams_half, spriteset_flatbed_5_beams_full];
}

spritegroup spritegroup_flatbed_5_pipes {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_pipes_half, spriteset_flatbed_5_pipes_full];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_pipes_half, spriteset_flatbed_5_pipes_full];
}

spritegroup spritegroup_flatbed_5_slabs {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_slabs_half, spriteset_flatbed_5_slabs_full];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_slabs_half, spriteset_flatbed_5_slabs_full];
}

spritegroup spritegroup_flatbed_5_coils {
    loading: [spriteset_flatbed_5_blank, spriteset_flatbed_5_coils_half, spriteset_flatbed_5_coils_full];
    loaded:  [spriteset_flatbed_5_blank, spriteset_flatbed_5_coils_half, spriteset_flatbed_5_coils_full];
}


//random cargos

random_switch (FEAT_TRAINS, SELF, random_flatbed_5_tarp) {
	1: spritegroup_flatbed_5_tarp_a;
	1: spritegroup_flatbed_5_tarp_b;
	1: spritegroup_flatbed_5_tarp_c;
}


random_switch (FEAT_TRAINS, SELF, random_flatbed_5_metal) {
	3: spritegroup_flatbed_5_coils;
	1: spritegroup_flatbed_5_rods;
	1: spritegroup_flatbed_5_slabs;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_5_metal_prod) {
	3: spritegroup_flatbed_5_rods;
	1: spritegroup_flatbed_5_pipes;
	2: spritegroup_flatbed_5_slabs;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_5_bdmt) {
	3: spritegroup_flatbed_5_beams;
	1: spritegroup_flatbed_5_pipes;
	1: spritegroup_flatbed_5_slabs;
	2: random_flatbed_5_tarp;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_5_wdpr) {
	3: spritegroup_flatbed_5_rods;
	1: spritegroup_flatbed_5_beams;
	1: spritegroup_flatbed_5_slabs;
	2: random_flatbed_5_tarp;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_5_ensp) {
	2: spritegroup_flatbed_5_ensp;
	1: spritegroup_flatbed_5_vehi;
	2: random_flatbed_5_tarp;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_5_fmsp) {
	2: spritegroup_flatbed_5_fmsp;
	1: spritegroup_flatbed_5_vehi;
	2: random_flatbed_5_tarp;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_5_cars) {
	1: spritegroup_flatbed_5_cars_a;
	1: spritegroup_flatbed_5_cars_b;
	1: spritegroup_flatbed_5_cars_c;
	1: spritegroup_flatbed_5_cars_d;
}

//main cargo switch

switch(FEAT_TRAINS, SELF, switch_flatbed_5_cargo_type, cargo_type_in_veh) {
	IRON: random_flatbed_5_metal;
	STEL: spritegroup_flatbed_5_coils;
	METL: spritegroup_flatbed_5_coils;
	ALUM: spritegroup_flatbed_5_coils;
	ZINC: random_flatbed_5_metal;
	COPR: random_flatbed_5_metal;
	CSTI: spritegroup_flatbed_5_slabs;
	STST: random_flatbed_5_metal;
	STSH: spritegroup_flatbed_5_slabs;
	STAL: random_flatbed_5_metal;
	STCB: spritegroup_flatbed_5_coils;
	STWR: random_flatbed_5_metal_prod;
	STSE: random_flatbed_5_metal_prod;
	NICK: random_flatbed_5_metal;
	COBL: random_flatbed_5_metal;
	
	ENSP: random_flatbed_5_ensp;
	FMSP: random_flatbed_5_fmsp;
	MNSP: random_flatbed_5_tarp;
	POWR: random_flatbed_5_tarp;
	VPTS: random_flatbed_5_tarp;
	MPTS: random_flatbed_5_tarp;
	GOOD: random_flatbed_5_wdpr;
	
	BDMT: random_flatbed_5_bdmt;
	WDPR: random_flatbed_5_wdpr;
	GLAS: random_flatbed_5_wdpr;
	BRCK: random_flatbed_5_bdmt;

	
	PAPR: random_flatbed_5_tarp;
	TYRE: random_flatbed_5_tarp;
	WOOL: random_flatbed_5_tarp;
	TEXT: random_flatbed_5_tarp;
	
	WOOD: spritegroup_flatbed_5_logs;
	TWOD: spritegroup_flatbed_5_logs;
	
	VEHI: random_flatbed_5_cars;
	
	
	random_flatbed_5_tarp;
}

//rungs spriteset


spriteset(spriteset_flatbed_5_rungs_a_back, "gfx/freight/chisa_1.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_flatbed_5_rungs_a_front, "gfx/freight/chisa_1.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_flatbed_5_rungs_b_back, "gfx/freight/chisa_1.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_flatbed_5_rungs_b_front, "gfx/freight/chisa_1.png") {
	template_2cc_std(1, 160)
}


//rungs random
random_switch(FEAT_TRAINS, SELF, random_flatbed_5_rungs_all_back) {
	1: spriteset_flatbed_5_rungs_a_back;
    1: spriteset_flatbed_5_rungs_b_back;
}

random_switch(FEAT_TRAINS, SELF, random_flatbed_5_rungs_all_front) {
	1: spriteset_flatbed_5_rungs_a_front;
    1: spriteset_flatbed_5_rungs_b_front;
	dependent: random_flatbed_5_rungs_all_back;
}


random_switch(FEAT_TRAINS, SELF, random_flatbed_5_rungs_some_back) {
	1: spriteset_flatbed_5_rungs_a_back;
    1: spriteset_flatbed_5_rungs_b_back;
	2: spriteset_flatbed_5_blank;
}

random_switch(FEAT_TRAINS, SELF, random_flatbed_5_rungs_some_front) {
	1: spriteset_flatbed_5_rungs_a_front;
    1: spriteset_flatbed_5_rungs_b_front;
	2: spriteset_flatbed_5_blank;
	dependent: random_flatbed_5_rungs_some_back;
}


switch(FEAT_TRAINS, SELF, switch_flatbed_5_rungs_back, cargo_type_in_veh) {
	IRON: random_flatbed_5_rungs_all_back;
	STEL: random_flatbed_5_rungs_all_back;
	METL: random_flatbed_5_rungs_all_back;
	ALUM: random_flatbed_5_rungs_all_back;
	ZINC: random_flatbed_5_rungs_all_back;
	COPR: random_flatbed_5_rungs_all_back;
	CSTI: random_flatbed_5_rungs_all_back;
	STST: random_flatbed_5_rungs_all_back;
	STSH: random_flatbed_5_rungs_some_back;
	STAL: random_flatbed_5_rungs_all_back;
	STCB: random_flatbed_5_rungs_all_back;
	STWR: random_flatbed_5_rungs_some_back;
	STSE: random_flatbed_5_rungs_some_back;
	
	ENSP: spriteset_flatbed_5_blank;
	FMSP: spriteset_flatbed_5_blank;
	POWR: spriteset_flatbed_5_blank;
	VPTS: spriteset_flatbed_5_blank;
	MPTS: spriteset_flatbed_5_blank;
	
	BDMT: random_flatbed_5_rungs_all_back;
	WDPR: random_flatbed_5_rungs_all_back;
	GLAS: random_flatbed_5_rungs_all_back;
	BRCK: random_flatbed_5_rungs_all_back;

	
	PAPR: spriteset_flatbed_5_blank;
	TYRE: spriteset_flatbed_5_blank;
	WOOL: random_flatbed_5_rungs_all_back;
	TEXT: random_flatbed_5_rungs_all_back;
	
	WOOD: random_flatbed_5_rungs_all_back;
	TWOD: random_flatbed_5_rungs_all_back;
	
	VEHI: spriteset_flatbed_5_blank;
	
	random_flatbed_5_rungs_some_back;
}

switch(FEAT_TRAINS, SELF, switch_flatbed_5_rungs_front, cargo_type_in_veh) {
	IRON: random_flatbed_5_rungs_all_front;
	STEL: random_flatbed_5_rungs_all_front;
	METL: random_flatbed_5_rungs_all_front;
	ALUM: random_flatbed_5_rungs_all_front;
	ZINC: random_flatbed_5_rungs_all_front;
	COPR: random_flatbed_5_rungs_all_front;
	CSTI: random_flatbed_5_rungs_all_front;
	STST: random_flatbed_5_rungs_all_front;
	STSH: random_flatbed_5_rungs_some_front;
	STAL: random_flatbed_5_rungs_all_front;
	STCB: random_flatbed_5_rungs_all_front;
	STWR: random_flatbed_5_rungs_some_front;
	STSE: random_flatbed_5_rungs_some_front;
	
	ENSP: spriteset_flatbed_5_blank;
	FMSP: spriteset_flatbed_5_blank;
	POWR: spriteset_flatbed_5_blank;
	VPTS: spriteset_flatbed_5_blank;
	MPTS: spriteset_flatbed_5_blank;
	
	BDMT: random_flatbed_5_rungs_all_front;
	WDPR: random_flatbed_5_rungs_all_front;
	GLAS: random_flatbed_5_rungs_all_front;
	BRCK: random_flatbed_5_rungs_all_front;

	
	PAPR: spriteset_flatbed_5_blank;
	TYRE: spriteset_flatbed_5_blank;
	WOOL: random_flatbed_5_rungs_all_front;
	TEXT: random_flatbed_5_rungs_all_front;
	
	WOOD: random_flatbed_5_rungs_all_front;
	TWOD: random_flatbed_5_rungs_all_front;
	
	VEHI: spriteset_flatbed_5_blank;
	
	random_flatbed_5_rungs_some_front;
}


//CHISA 1 main

spriteset(spriteset_chisa_1_a, "gfx/freight/chisa_1.png") {
	template_2cc_std(1, 1)
}



spriteset(spriteset_chisa_1_jgr_purchase, "gfx/freight/chisa_1.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_chisa_1_jnr_purchase, "gfx/freight/chisa_1.png") {
	template_purchase(89, 192)
}

switch(FEAT_TRAINS, SELF, switch_chisa_1_purchase, current_year) {
	0..1949: spriteset_chisa_1_jgr_purchase;
	spriteset_chisa_1_jnr_purchase;
}




switch(FEAT_TRAINS, SELF, stack_chisa_1, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  spriteset_chisa_1_a;
    1:  switch_flatbed_5_rungs_back;
	2:  switch_flatbed_5_cargo_type;
	3:  switch_flatbed_5_rungs_front;
}



//main item
item (FEAT_TRAINS, chisa_1, 1934) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_CHISA_1);
	introduction_date: date(1906,1,1);
	cargo_capacity: 30;
	power: 0;
	refit_cost: 0;
	default_cargo_type: WOOD;
	loading_speed: 20;
	speed: 65 km/h;
	weight: 12;
	cost_factor: 18;
		running_cost_factor: 3;
		running_cost_base: RUNNING_COST_STEAM;
	length: 5;
	refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_NON_POURABLE, CC_OVERSIZED);
	non_refittable_cargo_classes: 0; 
	cargo_disallow_refit: [LVST, BEER, BOOM, FRUT, EOIL, RCYC, FERT, SCMT, CBLK, SOAP, COAT, PLAS, WSTE, SCPR, CIGR, TBCO, JAVA];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_FLAT),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 65;
	default: stack_chisa_1;
	purchase: switch_chisa_1_purchase;
	colour_mapping: switch_generic_recolour;
	}
}


//CHIKI 7000 main

spriteset(spriteset_chisa_1600_a, "gfx/freight/chisa_1600.png") {
	template_2cc_std(1, 1)
}



spriteset(spriteset_chisa_1600_jrf_purchase, "gfx/freight/chisa_1600.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_chisa_1600_jnr_purchase, "gfx/freight/chisa_1600.png") {
	template_purchase(89, 192)
}

switch(FEAT_TRAINS, SELF, switch_chisa_1600_purchase, current_year) {
	0..1987: spriteset_chisa_1600_jnr_purchase;
	spriteset_chisa_1600_jrf_purchase;
}




switch(FEAT_TRAINS, SELF, stack_chisa_1600, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  spriteset_chisa_1600_a;
    1:  switch_flatbed_5_rungs_back;
	2:  switch_flatbed_5_cargo_type;
	3:  switch_flatbed_5_rungs_front;
}



//main item TODO FIX

item (FEAT_TRAINS, chi_1000, 1526) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	climates_available: NO_CLIMATE;
	name: string(STR_NAME_CHI_1000);
	introduction_date: date(1957,1,1);
	cargo_capacity: 40;
	power: 0;
	refit_cost: 0;
	default_cargo_type: WOOD;
	loading_speed: 20;
	speed: 65 km/h;
	weight: 12;
	cost_factor: 6;
	running_cost_factor: 5;
	length: 5;
	refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_NON_POURABLE, CC_OVERSIZED);
	non_refittable_cargo_classes: 0; 
	cargo_disallow_refit: [LVST, BEER, BOOM, FRUT, EOIL, RCYC, FERT, SCMT, CBLK, SOAP, COAT, PLAS, WSTE, SCPR];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_FLAT),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 65;
	default: stack_chisa_1600;
	purchase: switch_chisa_1600_purchase;
	colour_mapping: switch_generic_recolour;
	}
}

// CHIKI loads, separate later

spriteset(spriteset_flatbed_7_blank, "gfx/blank.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_flatbed_7_tarp_a, "gfx/containers/flatbed_7.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_flatbed_7_tarp_b, "gfx/containers/flatbed_7.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_flatbed_7_tarp_c, "gfx/containers/flatbed_7.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_flatbed_7_logs_half, "gfx/containers/flatbed_7.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_flatbed_7_logs_full, "gfx/containers/flatbed_7.png") {
	template_2cc_std(1, 128)
}


spriteset(spriteset_flatbed_7_rods_half, "gfx/containers/flatbed_7.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_flatbed_7_rods_full, "gfx/containers/flatbed_7.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_flatbed_7_beams_half, "gfx/containers/flatbed_7.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_flatbed_7_beams_full, "gfx/containers/flatbed_7.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_flatbed_7_fmsp, "gfx/containers/flatbed_7.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_flatbed_7_ensp, "gfx/containers/flatbed_7.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_flatbed_7_pipes_half, "gfx/containers/flatbed_7.png") {
	template_2cc_std(180, 1)
}


spriteset(spriteset_flatbed_7_pipes_full, "gfx/containers/flatbed_7.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_flatbed_7_slabs_half, "gfx/containers/flatbed_7.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_flatbed_7_slabs_full, "gfx/containers/flatbed_7.png") {
	template_2cc_std(180, 96)
}


spriteset(spriteset_flatbed_7_coils_half, "gfx/containers/flatbed_7.png") {
	template_2cc_std(180, 128)
}

spriteset(spriteset_flatbed_7_coils_full, "gfx/containers/flatbed_7.png") {
	template_2cc_std(180, 160)
}

spriteset(spriteset_flatbed_7_vehi, "gfx/containers/flatbed_7.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_flatbed_7_cars_a, "gfx/containers/flatbed_7.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_flatbed_7_cars_b, "gfx/containers/flatbed_7.png") {
	template_2cc_std(180, 256)
}

spriteset(spriteset_flatbed_7_cars_c, "gfx/containers/flatbed_7.png") {
	template_2cc_std(180, 288)
}

spriteset(spriteset_flatbed_7_cars_d, "gfx/containers/flatbed_7.png") {
	template_2cc_std(180, 320)
}


//loads spritegroups


spritegroup spritegroup_flatbed_7_tarp_a {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_tarp_a];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_tarp_a];
}

spritegroup spritegroup_flatbed_7_tarp_b {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_tarp_b];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_tarp_b];
}

spritegroup spritegroup_flatbed_7_tarp_c {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_tarp_c];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_tarp_c];
}

spritegroup spritegroup_flatbed_7_fmsp {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_fmsp];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_fmsp];
}

spritegroup spritegroup_flatbed_7_ensp {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_ensp];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_ensp];
}

spritegroup spritegroup_flatbed_7_vehi {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_vehi];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_vehi];
}


spritegroup spritegroup_flatbed_7_cars_a {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_cars_a];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_cars_a];
}

spritegroup spritegroup_flatbed_7_cars_b {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_cars_b];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_cars_b];
}

spritegroup spritegroup_flatbed_7_cars_c {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_cars_c];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_cars_c];
}

spritegroup spritegroup_flatbed_7_cars_d {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_cars_d];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_cars_d];
}


spritegroup spritegroup_flatbed_7_logs {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_logs_half, spriteset_flatbed_7_logs_full];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_logs_half, spriteset_flatbed_7_logs_full];
}

spritegroup spritegroup_flatbed_7_rods {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_rods_half, spriteset_flatbed_7_rods_full];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_rods_half, spriteset_flatbed_7_rods_full];
}

spritegroup spritegroup_flatbed_7_beams {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_beams_half, spriteset_flatbed_7_beams_full];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_beams_half, spriteset_flatbed_7_beams_full];
}

spritegroup spritegroup_flatbed_7_pipes {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_pipes_half, spriteset_flatbed_7_pipes_full];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_pipes_half, spriteset_flatbed_7_pipes_full];
}

spritegroup spritegroup_flatbed_7_slabs {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_slabs_half, spriteset_flatbed_7_slabs_full];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_slabs_half, spriteset_flatbed_7_slabs_full];
}

spritegroup spritegroup_flatbed_7_coils {
    loading: [spriteset_flatbed_7_blank, spriteset_flatbed_7_coils_half, spriteset_flatbed_7_coils_full];
    loaded:  [spriteset_flatbed_7_blank, spriteset_flatbed_7_coils_half, spriteset_flatbed_7_coils_full];
}


//random cargos

random_switch (FEAT_TRAINS, SELF, random_flatbed_7_tarp) {
	1: spritegroup_flatbed_7_tarp_a;
	1: spritegroup_flatbed_7_tarp_b;
	1: spritegroup_flatbed_7_tarp_c;
}


random_switch (FEAT_TRAINS, SELF, random_flatbed_7_metal) {
	3: spritegroup_flatbed_7_coils;
	1: spritegroup_flatbed_7_rods;
	1: spritegroup_flatbed_7_slabs;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_7_metal_prod) {
	3: spritegroup_flatbed_7_rods;
	1: spritegroup_flatbed_7_pipes; 
	2: spritegroup_flatbed_7_slabs;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_7_bdmt) {
	3: spritegroup_flatbed_7_beams;
	1: spritegroup_flatbed_7_pipes;
	1: spritegroup_flatbed_7_slabs;
	2: random_flatbed_7_tarp;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_7_wdpr) {
	3: spritegroup_flatbed_7_rods;
	1: spritegroup_flatbed_7_beams;
	1: spritegroup_flatbed_7_slabs;
	2: random_flatbed_7_tarp;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_7_ensp) {
	2: spritegroup_flatbed_7_ensp;
	1: spritegroup_flatbed_7_vehi;
	2: random_flatbed_7_tarp;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_7_fmsp) {
	2: spritegroup_flatbed_7_fmsp;
	1: spritegroup_flatbed_7_vehi;
	2: random_flatbed_7_tarp;
}

random_switch (FEAT_TRAINS, SELF, random_flatbed_7_cars) {
	1: spritegroup_flatbed_7_cars_a;
	1: spritegroup_flatbed_7_cars_b;
	1: spritegroup_flatbed_7_cars_c;
	1: spritegroup_flatbed_7_cars_d;
}

//main cargo switch

switch(FEAT_TRAINS, SELF, switch_flatbed_7_cargo_type, cargo_type_in_veh) {
	IRON: random_flatbed_7_metal;
	STEL: spritegroup_flatbed_7_coils;
	METL: spritegroup_flatbed_7_coils;
	ALUM: spritegroup_flatbed_7_coils;
	ZINC: random_flatbed_7_metal;
	COPR: random_flatbed_7_metal;
	CSTI: spritegroup_flatbed_7_slabs;
	STST: random_flatbed_7_metal;
	STSH: spritegroup_flatbed_7_slabs;
	STAL: random_flatbed_7_metal;
	STCB: spritegroup_flatbed_7_coils;
	STWR: random_flatbed_7_metal_prod;
	STSE: random_flatbed_7_metal_prod;
	NICK: random_flatbed_7_metal;
	COBL: random_flatbed_7_metal;
	
	ENSP: random_flatbed_7_ensp;
	FMSP: random_flatbed_7_fmsp;
	MNSP: random_flatbed_7_tarp;
	POWR: random_flatbed_7_tarp;
	VPTS: random_flatbed_7_tarp;
	MPTS: random_flatbed_7_tarp;
	GOOD: random_flatbed_7_wdpr;
	
	BDMT: random_flatbed_7_bdmt;
	WDPR: random_flatbed_7_wdpr;
	GLAS: random_flatbed_7_wdpr;
	BRCK: random_flatbed_7_bdmt;
	PIPE: spritegroup_flatbed_7_pipes;
	
	PAPR: random_flatbed_7_tarp;
	TYRE: random_flatbed_7_tarp;
	WOOL: random_flatbed_7_tarp;
	TEXT: random_flatbed_7_tarp;
	
	WOOD: spritegroup_flatbed_7_logs;
	TWOD: spritegroup_flatbed_7_logs;
	
	VEHI: random_flatbed_7_cars;
	
	
	random_flatbed_7_tarp;
}

//rungs spriteset


spriteset(spriteset_flatbed_7_rungs_a_back, "gfx/freight/chiki_1500.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_flatbed_7_rungs_a_front, "gfx/freight/chiki_1500.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_flatbed_7_rungs_b_back, "gfx/freight/chiki_1500.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_flatbed_7_rungs_b_front, "gfx/freight/chiki_1500.png") {
	template_2cc_std(1, 160)
}


//rungs random
random_switch(FEAT_TRAINS, SELF, random_flatbed_7_rungs_all_back) {
	1: spriteset_flatbed_7_rungs_a_back;
    1: spriteset_flatbed_7_rungs_b_back;
}

random_switch(FEAT_TRAINS, SELF, random_flatbed_7_rungs_all_front) {
	1: spriteset_flatbed_7_rungs_a_front;
    1: spriteset_flatbed_7_rungs_b_front;
	dependent: random_flatbed_7_rungs_all_back;
}


random_switch(FEAT_TRAINS, SELF, random_flatbed_7_rungs_some_back) {
	1: spriteset_flatbed_7_rungs_a_back;
    1: spriteset_flatbed_7_rungs_b_back;
	2: spriteset_flatbed_7_blank;
}

random_switch(FEAT_TRAINS, SELF, random_flatbed_7_rungs_some_front) {
	1: spriteset_flatbed_7_rungs_a_front;
    1: spriteset_flatbed_7_rungs_b_front;
	2: spriteset_flatbed_7_blank;
	dependent: random_flatbed_7_rungs_some_back;
}


switch(FEAT_TRAINS, SELF, switch_flatbed_7_rungs_back, cargo_type_in_veh) {
	IRON: random_flatbed_7_rungs_all_back;
	STEL: random_flatbed_7_rungs_all_back;
	METL: random_flatbed_7_rungs_all_back;
	ALUM: random_flatbed_7_rungs_all_back;
	ZINC: random_flatbed_7_rungs_all_back;
	COPR: random_flatbed_7_rungs_all_back;
	CSTI: random_flatbed_7_rungs_all_back;
	STST: random_flatbed_7_rungs_all_back;
	STSH: random_flatbed_7_rungs_some_back;
	STAL: random_flatbed_7_rungs_all_back;
	STCB: random_flatbed_7_rungs_all_back;
	STWR: random_flatbed_7_rungs_some_back;
	STSE: random_flatbed_7_rungs_some_back;
	
	ENSP: spriteset_flatbed_7_blank;
	FMSP: spriteset_flatbed_7_blank;
	POWR: spriteset_flatbed_7_blank;
	VPTS: spriteset_flatbed_7_blank;
	MPTS: spriteset_flatbed_7_blank;
	
	BDMT: random_flatbed_7_rungs_all_back;
	WDPR: random_flatbed_7_rungs_all_back;
	GLAS: random_flatbed_7_rungs_all_back;
	BRCK: random_flatbed_7_rungs_all_back;

	
	PAPR: spriteset_flatbed_7_blank;
	TYRE: spriteset_flatbed_7_blank;
	WOOL: random_flatbed_7_rungs_all_back;
	TEXT: random_flatbed_7_rungs_all_back;
	
	WOOD: random_flatbed_7_rungs_all_back;
	TWOD: random_flatbed_7_rungs_all_back;
	
	VEHI: spriteset_flatbed_7_blank;
	
	random_flatbed_7_rungs_some_back;
}

switch(FEAT_TRAINS, SELF, switch_flatbed_7_rungs_front, cargo_type_in_veh) {
	IRON: random_flatbed_7_rungs_all_front;
	STEL: random_flatbed_7_rungs_all_front;
	METL: random_flatbed_7_rungs_all_front;
	ALUM: random_flatbed_7_rungs_all_front;
	ZINC: random_flatbed_7_rungs_all_front;
	COPR: random_flatbed_7_rungs_all_front;
	CSTI: random_flatbed_7_rungs_all_front;
	STST: random_flatbed_7_rungs_all_front;
	STSH: random_flatbed_7_rungs_some_front;
	STAL: random_flatbed_7_rungs_all_front;
	STCB: random_flatbed_7_rungs_all_front;
	STWR: random_flatbed_7_rungs_some_front;
	STSE: random_flatbed_7_rungs_some_front;
	
	ENSP: spriteset_flatbed_7_blank;
	FMSP: spriteset_flatbed_7_blank;
	POWR: spriteset_flatbed_7_blank;
	VPTS: spriteset_flatbed_7_blank;
	MPTS: spriteset_flatbed_7_blank;
	
	BDMT: random_flatbed_7_rungs_all_front;
	WDPR: random_flatbed_7_rungs_all_front;
	GLAS: random_flatbed_7_rungs_all_front;
	BRCK: random_flatbed_7_rungs_all_front;

	
	PAPR: spriteset_flatbed_7_blank;
	TYRE: spriteset_flatbed_7_blank;
	WOOL: random_flatbed_7_rungs_all_front;
	TEXT: random_flatbed_7_rungs_all_front;
	
	WOOD: random_flatbed_7_rungs_all_front;
	TWOD: random_flatbed_7_rungs_all_front;
	
	VEHI: spriteset_flatbed_7_blank;
	
	random_flatbed_7_rungs_some_front;
}


//CHIKI 1500 main

spriteset(spriteset_chiki_1500_a, "gfx/freight/chiki_1500.png") {
	template_2cc_std(1, 1)
}



spriteset(spriteset_chiki_1500_jgr_purchase, "gfx/freight/chiki_1500.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_chiki_1500_jnr_purchase, "gfx/freight/chiki_1500.png") {
	template_purchase(89, 192)
}

switch(FEAT_TRAINS, SELF, switch_chiki_1500_purchase, current_year) {
	0..1949: spriteset_chiki_1500_jgr_purchase;
	spriteset_chiki_1500_jnr_purchase;
}




switch(FEAT_TRAINS, SELF, stack_chiki_1500, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  spriteset_chiki_1500_a;
    1:  switch_flatbed_7_rungs_back;
	2:  switch_flatbed_7_cargo_type;
	3:  switch_flatbed_7_rungs_front;
}



//main item
item (FEAT_TRAINS, chiki_1500, 1941) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_CHIKI_1500);
	introduction_date: date(1934,1,1);
	cargo_capacity: 45;
	speed: 75 km/h;
	air_drag_coefficient: 0;
	power: 0;
	weight: 16;
	length: 7;
	dual_headed: 0;
	cargo_capacity: 35; 
	refit_cost: 0;
	refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_NON_POURABLE, CC_OVERSIZED);
	non_refittable_cargo_classes: 0; 
	default_cargo_type: WOOD;
	cargo_disallow_refit: [LVST, BEER, BOOM, FRUT, EOIL, RCYC, FERT, SCMT, CBLK, SOAP, COAT, PLAS, WSTE, SCPR, CIGR, TBCO, JAVA];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	cost_factor: 30;
	running_cost_factor: 10;
	running_cost_base: RUNNING_COST_STEAM;
	loading_speed: 20;
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_FLAT),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 75;
	default: stack_chiki_1500;
	purchase: switch_chiki_1500_purchase;
	colour_mapping: switch_generic_recolour;
	}
}


//CHIKI 7000 main

spriteset(spriteset_chiki_7000_a, "gfx/freight/chiki_7000.png") {
	template_2cc_std(1, 1)
}



spriteset(spriteset_chiki_7000_jrf_purchase, "gfx/freight/chiki_7000.png") {
	template_purchase(1, 192)
}

spriteset(spriteset_chiki_7000_jnr_purchase, "gfx/freight/chiki_7000.png") {
	template_purchase(89, 192)
}

switch(FEAT_TRAINS, SELF, switch_chiki_7000_purchase, current_year) {
	0..1987: spriteset_chiki_7000_jnr_purchase;
	spriteset_chiki_7000_jrf_purchase;
}




switch(FEAT_TRAINS, SELF, stack_chiki_7000, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 4 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  spriteset_chiki_7000_a;
    1:  switch_flatbed_7_rungs_back;
	2:  switch_flatbed_7_cargo_type;
	3:  switch_flatbed_7_rungs_front;
}



//main item
item (FEAT_TRAINS, chiki_7000, 1529) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_CHIKI_7000);
	introduction_date: date(1975,1,1);
	cargo_capacity: 60;
	power: 0;
	refit_cost: 0;
	default_cargo_type: WOOD;
	loading_speed: 20;
	speed: 100 km/h;
	weight: 16;
	cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
	length: 7;
	refittable_cargo_classes: bitmask(CC_PIECE_GOODS, CC_NON_POURABLE, CC_OVERSIZED);
	non_refittable_cargo_classes: 0; 
	cargo_disallow_refit: [LVST, BEER, BOOM, FRUT, EOIL, RCYC, FERT, SCMT, CBLK, SOAP, COAT, PLAS, WSTE, SCPR, CIGR, TBCO, JAVA];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_FLAT),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 100;
	default: stack_chiki_7000;
	purchase: switch_chiki_7000_purchase;
	colour_mapping: switch_generic_recolour;
	}
}

spriteset(spriteset_slag_ladle_old_empty, "gfx/freight/steel_wagons.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_slag_ladle_old_half, "gfx/freight/steel_wagons.png") {
	template_2cc_anim(1, 192)
}

spriteset(spriteset_slag_ladle_old_full, "gfx/freight/steel_wagons.png") {
	template_2cc_anim(1, 224)
}


spriteset(spriteset_slag_ladle_new_empty, "gfx/freight/steel_wagons.png") {
	template_2cc_anim(180, 160)
}

spriteset(spriteset_slag_ladle_new_half, "gfx/freight/steel_wagons.png") {
	template_2cc_anim(180, 192)
}

spriteset(spriteset_slag_ladle_new_full, "gfx/freight/steel_wagons.png") {
	template_2cc_anim(180, 224)
}


spriteset(spriteset_slag_ladle_yawata_old_purchase, "gfx/freight/steel_wagons.png") {
	template_purchase_anim(1, 288)
}

spriteset(spriteset_slag_ladle_yawata_new_purchase, "gfx/freight/steel_wagons.png") {
	template_purchase_anim(180, 288)
}

spriteset(spriteset_slag_ladle_nippon_purchase, "gfx/freight/steel_wagons.png") {
	template_purchase_anim(89, 288)
}

spritegroup spritegroup_slag_ladle_old {
    loading: [spriteset_slag_ladle_old_empty, spriteset_slag_ladle_old_half, spriteset_slag_ladle_old_full];
    loaded:  [spriteset_slag_ladle_old_empty, spriteset_slag_ladle_old_half, spriteset_slag_ladle_old_full];
}

spritegroup spritegroup_slag_ladle_new {
    loading: [spriteset_slag_ladle_new_empty, spriteset_slag_ladle_new_half, spriteset_slag_ladle_new_full];
    loaded:  [spriteset_slag_ladle_new_empty, spriteset_slag_ladle_new_half, spriteset_slag_ladle_new_full];
}

switch(FEAT_TRAINS, SELF, switch_slag_ladle_yeardep, build_year) {
	0..1950: spritegroup_slag_ladle_old;
	spritegroup_slag_ladle_new;
}

switch(FEAT_TRAINS, SELF, switch_slag_ladle_purchase, current_year) {
	0..1950: spriteset_slag_ladle_yawata_old_purchase;
	1950..1990: spriteset_slag_ladle_yawata_new_purchase;
	spriteset_slag_ladle_nippon_purchase;
	}

item (FEAT_TRAINS, slag_ladle, 1420) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_SLAG_LADLE);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1900,1,1);
		speed: 60 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 38; 
		refit_cost: 0;
		default_cargo_type: SLAG;
		loading_speed: 20;
		cargo_age_period: 320;
		cargo_allow_refit: [SLAG, IRON, METL]; 
		weight: 30;
		cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
		length: 4;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_4S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_FRT_STEL),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_YAWATA),
									string(STR_SUFFIX_PRIVATE)
								),
								string(STR_DESC_BRAKE_NA)
							);

		cargo_capacity: return 38;
		default: switch_slag_ladle_yeardep;
		purchase: switch_slag_ladle_purchase;
	}
}
spriteset(spriteset_torpedo_old_front, "gfx/freight/steel_wagons.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_torpedo_old_rear, "gfx/freight/steel_wagons.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_torpedo_new_front, "gfx/freight/steel_wagons.png") {
	template_2cc_std(180, 1)
}

spriteset(spriteset_torpedo_new_rear, "gfx/freight/steel_wagons.png") {
	template_2cc_std(180, 32)
}


spriteset(spriteset_torpedo_empty, "gfx/freight/steel_wagons.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_torpedo_half, "gfx/freight/steel_wagons.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_torpedo_full, "gfx/freight/steel_wagons.png") {
	template_2cc_anim(1, 128)
}



spriteset(spriteset_torpedo_yawata_old_purchase, "gfx/freight/steel_wagons.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_torpedo_yawata_new_purchase, "gfx/freight/steel_wagons.png") {
	template_purchase(180, 256)
}

spriteset(spriteset_torpedo_nippon_purchase, "gfx/freight/steel_wagons.png") {
	template_purchase(89, 256)
}

switch(FEAT_TRAINS, SELF, switch_torpedo_purchase, current_year) {
	0..1950: spriteset_torpedo_yawata_old_purchase;
	1950..1990: spriteset_torpedo_yawata_new_purchase;
	spriteset_torpedo_nippon_purchase;
	}

/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_torpedo_articulated_part, extra_callback_info1) {
	1: return torpedo_car_middle;
    2: return torpedo_car_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch(FEAT_TRAINS, SELF, switch_torpedo_front_yeardep, build_year) {
	0..1950: spriteset_torpedo_old_front;
	spriteset_torpedo_new_front;
}

switch(FEAT_TRAINS, SELF, switch_torpedo_rear_yeardep, build_year) {
	0..1950: spriteset_torpedo_old_rear;
	spriteset_torpedo_new_rear;
}



switch(FEAT_TRAINS, SELF, switch_torpedo_loading, cargo_count) {
	0..19: spriteset_torpedo_empty;
	20..39: spriteset_torpedo_half;
	40..60: spriteset_torpedo_full;
	CB_FAILED;
}

item (FEAT_TRAINS, torpedo_car_middle, 1422) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_TORPEDO);
		climates_available: NO_CLIMATE;
		cargo_capacity: 59; 
		refit_cost: 0;
		default_cargo_type: IRON;
		loading_speed: 40;
		cargo_age_period: 320;
//		refittable_cargo_classes: bitmask(CC_COVERED, CC_BULK); 
//		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [IRON, METL]; 
		introduction_date: date(1920,1,1);
		length: 6;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
	}
	graphics {
		cargo_capacity: return 59;
		default: switch_torpedo_loading;
	}
}

item (FEAT_TRAINS, torpedo_car_rear, 1423) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_TORPEDO);
		climates_available: NO_CLIMATE;
		introduction_date: date(1920,1,1);
		length: 3;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
	}
	graphics {
		default: switch_torpedo_rear_yeardep;
	}
}



item (FEAT_TRAINS, torpedo_car, 1421) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_TORPEDO);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1920,1,1);
		speed: 65 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 1; 
		refit_cost: 0;
		default_cargo_type: IRON;
		loading_speed: 20;
//		refittable_cargo_classes: bitmask(CC_COVERED, CC_BULK); 
//		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [IRON, METL]; 
//		cargo_disallow_refit: [WDPR, WOOL];
		weight: 120;
		cost_factor: 100;
	running_cost_factor: 10;
	running_cost_base: RUNNING_COST_STEAM;
		length: 3;
//		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_2CC);
	}
	graphics {
		additional_text:	string(STR_CONCAT_4S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_FRT_STEL),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_YAWATA),
									string(STR_SUFFIX_PRIVATE)
								),
								string(STR_DESC_BRAKE_NA)
							);

		cargo_capacity: return 1;
		default: switch_torpedo_front_yeardep;
		purchase: switch_torpedo_purchase;
		articulated_part: switch_torpedo_articulated_part;
	}
}
spriteset(spriteset_shiki_800_black_front, "gfx/freight/superheavy.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_shiki_800_black_rear, "gfx/freight/superheavy.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_shiki_800_blue_front, "gfx/freight/superheavy.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_shiki_800_blue_rear, "gfx/freight/superheavy.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_shiki_800_black_filler, "gfx/freight/superheavy.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_shiki_800_blue_filler, "gfx/freight/superheavy.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_shiki_800_load, "gfx/freight/superheavy.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_shiki_800_blank, "gfx/freight/superheavy.png") {
	template_2cc_std(1, 224)
}


spriteset(spriteset_shiki_800_jnr_purchase, "gfx/freight/superheavy.png") {
	template_purchase(1, 256)
}

spriteset(spriteset_shiki_800_jrf_purchase, "gfx/freight/superheavy.png") {
	template_purchase(89, 256)
}

spriteset(spriteset_shiki_800_nippon_purchase, "gfx/freight/superheavy.png") {
	template_purchase(1, 288)
}


spritegroup spritegroup_shiki_800_load {
    loading: [spriteset_shiki_800_blank];
    loaded:  [spriteset_shiki_800_load];
}



/* --- Articulated part callback  --- */
switch(FEAT_TRAINS, SELF, switch_shiki_800_articulated_part, extra_callback_info1) {
	1: return shiki_800_rear;
    2: return shiki_800_rear;
	3: return shiki_800_rear;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

//livery and yeardep switches

switch(FEAT_TRAINS, SELF, switch_shiki_800_front_yeardep, build_year) {
	1987..2008: spriteset_shiki_800_blue_front;
	spriteset_shiki_800_black_front;
}

switch(FEAT_TRAINS, SELF, switch_shiki_800_front_livery, cargo_subtype) {
	1: spriteset_shiki_800_black_front;
	2: spriteset_shiki_800_blue_front;
	switch_shiki_800_front_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_shiki_800_rear_yeardep, build_year) {
	1987..2008: spriteset_shiki_800_blue_rear;
	spriteset_shiki_800_black_rear;
}

switch(FEAT_TRAINS, SELF, switch_shiki_800_rear_livery, cargo_subtype) {
	1: spriteset_shiki_800_black_rear;
	2: spriteset_shiki_800_blue_rear;
	switch_shiki_800_rear_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_shiki_800_filler_yeardep, build_year) {
	1987..2008: spriteset_shiki_800_blue_filler;
	spriteset_shiki_800_black_filler;
}

switch(FEAT_TRAINS, SELF, switch_shiki_800_filler_livery, cargo_subtype) {
	1: spriteset_shiki_800_black_filler;
	2: spriteset_shiki_800_blue_filler;
	switch_shiki_800_filler_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_shiki_8000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_YEARDEP);
	1: return string(STR_CONCAT_2, string(STR_SUFFIX_NIPPON), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLACK)
                                    )
                                 );
	2: return string(STR_CONCAT_2, string(STR_SUFFIX_TOSHIBA), 
                                    string(STR_CONCAT_1F, 
                                     string(STR_COLOUR_BLUE)
                                    )
                                 );
	   return CB_RESULT_NO_TEXT;
}

//make brake van invisible if it's the last wagon

switch(FEAT_TRAINS, SELF, switch_shiki_800_blank_end, position_in_consist_from_end) {
	0: spriteset_shiki_800_blank;
	switch_shiki_800_filler_livery;
}


//switch to read cargo count of lead vehicle

switch (FEAT_TRAINS, SELF, switch_read_shiki_800_cargo_count, 
                                            [STORE_TEMP(-1 * position_in_articulated_veh, 0x10F), var[0x61, 0, 0x0000FFFF, 0xBC]]) {
    return;
}

//shift graphics depending on cargo count

switch(FEAT_TRAINS, SELF, switch_shiki_800_part_1, switch_read_shiki_800_cargo_count() ) {
	0: switch_shiki_800_rear_livery;
	1..50: spritegroup_shiki_800_load;
	spriteset_shiki_800_load; 
}

switch(FEAT_TRAINS, SELF, switch_shiki_800_part_2, switch_read_shiki_800_cargo_count() ) {
	0: spriteset_shiki_800_blank;
	switch_shiki_800_rear_livery;
}

switch(FEAT_TRAINS, SELF, switch_shiki_800_part_3, switch_read_shiki_800_cargo_count() ) {
	0: switch_shiki_800_blank_end;
	spriteset_shiki_800_blank; 
}

//articulated vehicle parts

switch(FEAT_TRAINS, SELF, switch_shiki_800_position, position_in_articulated_veh) {
	1: switch_shiki_800_part_1;
	2: switch_shiki_800_part_2;
	3: switch_shiki_800_part_3;
	switch_shiki_800_front_livery;
}

//purchase
switch(FEAT_TRAINS, SELF, switch_shiki_800_purchase, current_year) {
	0..1987: spriteset_shiki_800_jnr_purchase;
	1987..2008: spriteset_shiki_800_jrf_purchase;
	spriteset_shiki_800_nippon_purchase;
	}

//articulated part

item (FEAT_TRAINS, shiki_800_rear, 1651) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_SHIKI_800);
		climates_available: NO_CLIMATE;
		introduction_date: date(1920,1,1);
		cargo_capacity: 1; 
		default_cargo_type: GOOD;
		cargo_allow_refit: [GOOD, POWR, ENSP, VPTS, MPTS, SESP, URAN, NUKF, NUKW, NWST];
		length: 4;
		visual_effect_and_powered: (VISUAL_EFFECT_DISABLE);
	}
	graphics {
		cargo_capacity: return 0;
		default: switch_shiki_800_position;
	}
}

//main item

item (FEAT_TRAINS, shiki_800, 1950) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_SHIKI_800);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1973,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 155; 
		refit_cost: 0;
		default_cargo_type: GOOD;
		loading_speed: 10;
//		refittable_cargo_classes: bitmask(CC_COVERED, CC_BULK); 
//		non_refittable_cargo_classes: 0; 
		cargo_allow_refit: [GOOD, POWR, ENSP, VPTS, MPTS, SESP, URAN, NUKF, NUKW, NWST]; 
//		cargo_disallow_refit: [WDPR, WOOL];
		weight: 100;
		cost_factor: 100;
	running_cost_factor: 15;
	running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
	graphics {
		additional_text:	string(STR_CONCAT_4S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_FRT_HVY),
								string(STR_CONCAT_2C, 
									string(STR_SUFFIX_NIPPON),
									string(STR_SUFFIX_TOSHIBA)
								),
								string(STR_DESC_BRAKE_NA)
							);

		cargo_capacity: return 155;
		default: switch_shiki_800_front_livery;
		purchase: switch_shiki_800_purchase;
		articulated_part: switch_shiki_800_articulated_part;
		cargo_subtype_text: switch_shiki_8000_subtype_text;
	}
}


spriteset(spriteset_to_1_a_empty, "gfx/freight/to_1.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_to_1_a_bulk_quarter, "gfx/freight/to_1.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_to_1_a_bulk_half, "gfx/freight/to_1.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_to_1_a_bulk_full, "gfx/freight/to_1.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_to_1_a_piece_half, "gfx/freight/to_1.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_to_1_a_piece_full, "gfx/freight/to_1.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_to_1_a_crates_full, "gfx/freight/to_1.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_to_1_a_tarpa, "gfx/freight/to_1.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_to_1_a_tarpb, "gfx/freight/to_1.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_to_1_a_tarpc, "gfx/freight/to_1.png") {
	template_2cc_std(1, 288)
}



spriteset(spriteset_to_1_purchase, "gfx/freight/to_1.png") {
	template_purchase(1, 320)
}




spritegroup spritegroup_to_1_a_bulk {
    loading: [spriteset_to_1_a_empty, spriteset_to_1_a_bulk_quarter, spriteset_to_1_a_bulk_half, spriteset_to_1_a_bulk_full];
    loaded:  [spriteset_to_1_a_empty, spriteset_to_1_a_bulk_quarter, spriteset_to_1_a_bulk_half, spriteset_to_1_a_bulk_full];
}

spritegroup spritegroup_to_1_a_bulk_covered_a {
    loading: [spriteset_to_1_a_empty, spriteset_to_1_a_bulk_quarter, spriteset_to_1_a_bulk_half, spriteset_to_1_a_bulk_full];
    loaded:  [spriteset_to_1_a_empty, spriteset_to_1_a_tarpa];
}

spritegroup spritegroup_to_1_a_bulk_covered_b {
    loading: [spriteset_to_1_a_empty, spriteset_to_1_a_bulk_quarter, spriteset_to_1_a_bulk_half, spriteset_to_1_a_bulk_full];
    loaded:  [spriteset_to_1_a_empty, spriteset_to_1_a_tarpb];
}

spritegroup spritegroup_to_1_a_bulk_covered_c {
    loading: [spriteset_to_1_a_empty, spriteset_to_1_a_bulk_quarter, spriteset_to_1_a_bulk_half, spriteset_to_1_a_bulk_full];
    loaded:  [spriteset_to_1_a_empty, spriteset_to_1_a_tarpc];
}

spritegroup spritegroup_to_1_a_piece {
    loading: [spriteset_to_1_a_empty, spriteset_to_1_a_piece_half, spriteset_to_1_a_piece_full];
    loaded:  [spriteset_to_1_a_empty, spriteset_to_1_a_piece_half, spriteset_to_1_a_piece_full];
}

spritegroup spritegroup_to_1_a_piece_covered_a {
    loading: [spriteset_to_1_a_empty, spriteset_to_1_a_piece_half, spriteset_to_1_a_piece_full];
    loaded:  [spriteset_to_1_a_empty, spriteset_to_1_a_tarpa];
}

spritegroup spritegroup_to_1_a_piece_covered_b {
    loading: [spriteset_to_1_a_empty, spriteset_to_1_a_piece_half, spriteset_to_1_a_piece_full];
    loaded:  [spriteset_to_1_a_empty, spriteset_to_1_a_tarpb];
}

spritegroup spritegroup_to_1_a_piece_covered_c {
    loading: [spriteset_to_1_a_empty, spriteset_to_1_a_piece_half, spriteset_to_1_a_piece_full];
    loaded:  [spriteset_to_1_a_empty, spriteset_to_1_a_tarpc];
}


spritegroup spritegroup_to_1_a_crates {
    loading: [spriteset_to_1_a_empty, spriteset_to_1_a_crates_full];
    loaded:  [spriteset_to_1_a_empty, spriteset_to_1_a_crates_full];
}



//b 


//random switches




random_switch (FEAT_TRAINS, SELF, random_to_1_metal) {
 4: spritegroup_to_1_a_piece;
 1: spritegroup_to_1_a_piece_covered_a;
 1: spritegroup_to_1_a_piece_covered_b;
 1: spritegroup_to_1_a_piece_covered_c;
}

random_switch (FEAT_TRAINS, SELF, random_to_1_supplies) {
 1: spritegroup_to_1_a_piece;
 4: spritegroup_to_1_a_crates;
 1: spritegroup_to_1_a_piece_covered_a;
 1: spritegroup_to_1_a_piece_covered_b;
 1: spritegroup_to_1_a_piece_covered_c;
}

random_switch (FEAT_TRAINS, SELF, random_to_1_piece) {
 4: spritegroup_to_1_a_piece;
 2: spritegroup_to_1_a_crates;
 1: spritegroup_to_1_a_piece_covered_a;
 1: spritegroup_to_1_a_piece_covered_b;
 1: spritegroup_to_1_a_piece_covered_c;
}


random_switch (FEAT_TRAINS, SELF, random_to_1_covered) {
 1: spritegroup_to_1_a_bulk_covered_a;
 1: spritegroup_to_1_a_bulk_covered_b;
 1: spritegroup_to_1_a_bulk_covered_c;
}



switch(FEAT_TRAINS, SELF, switch_to_1_cargo_class, cargo_classes) {
	bitmask(CC_BULK): spritegroup_to_1_a_bulk;
	bitmask(CC_BULK, CC_COVERED): random_to_1_covered;
	bitmask(CC_COVERED): random_to_1_covered;
	bitmask(CC_PIECE_GOODS): random_to_1_piece;
	random_to_1_covered;
}

switch(FEAT_TRAINS, SELF, switch_to_1_cargo_type, cargo_type_in_veh) {
	IRON: random_to_1_metal;
	STEL: random_to_1_metal;
	METL: random_to_1_metal;
	ALUM: random_to_1_metal;
	ZINC: random_to_1_metal;
	COPR: random_to_1_metal;
	STST: random_to_1_metal;
	STSH: random_to_1_metal;
	STAL: random_to_1_metal;
	STCB: random_to_1_metal;
	
	ENSP: random_to_1_supplies;
	FMSP: random_to_1_supplies;
	MNSP: random_to_1_supplies;
	POWR: random_to_1_supplies;
	VPTS: random_to_1_supplies;
	MPTS: random_to_1_supplies;
	GOOD: random_to_1_supplies;
	
	BDMT: random_to_1_piece;
	WDPR: random_to_1_piece;
	GLAS: random_to_1_piece;
	BRCK: random_to_1_piece;
	STWR: random_to_1_piece;
	STSE: random_to_1_piece;
	
	PAPR: random_to_1_supplies;
	TYRE: random_to_1_supplies;
	WOOL: random_to_1_supplies;
	TEXT: random_to_1_supplies;
	
	SCMT: spritegroup_to_1_a_bulk;
	RCYC: spritegroup_to_1_a_bulk;
	WSTE: spritegroup_to_1_a_bulk;
	SGCN: spritegroup_to_1_a_bulk;

	SULP: random_to_1_covered;
	SEED: random_to_1_covered;
	FERT: random_to_1_covered;
	SASH: random_to_1_covered;
	FRUT: random_to_1_covered;
	FRVG: random_to_1_covered;
	TATO: random_to_1_covered;
	GRAI: random_to_1_covered;
	CMNT: random_to_1_covered;
	COCO: random_to_1_covered;
	SALT: random_to_1_covered;
	NHNO: random_to_1_covered;
	FECR: random_to_1_covered;
	QLME: random_to_1_covered;
	CBLK: random_to_1_covered;

	FICR: spritegroup_to_1_a_crates;
	
	switch_to_1_cargo_class;
}


item (FEAT_TRAINS, to_1, 1469) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1870,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_TO_1);
	speed: 60 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 15; 
	refit_cost: 0;
//	default_cargo_type: COAL;
	loading_speed: 10;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED, CC_PIECE_GOODS); 
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [BAKE, PCL_, BEER, CHSE, MEAT, OYST, EOIL, LVST, BOOM, VBOD, VEHI];
	weight: 9;
	cost_factor: 14;
	running_cost_factor: 2;
	running_cost_base: RUNNING_COST_STEAM;
	length: 4;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OPEN),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 60;
	cargo_capacity: return 15;
	default: switch_to_1_cargo_type;
	purchase: spriteset_to_1_purchase;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_toki_900_black_empty, "gfx/freight/toki_900.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_toki_900_black_bulk_quarter, "gfx/freight/toki_900.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_toki_900_black_bulk_half, "gfx/freight/toki_900.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_toki_900_black_bulk_full, "gfx/freight/toki_900.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_toki_900_black_piece_half, "gfx/freight/toki_900.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_toki_900_black_piece_full, "gfx/freight/toki_900.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_toki_900_black_crates_full, "gfx/freight/toki_900.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_toki_900_black_coils_full, "gfx/freight/toki_900.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_toki_900_black_tarpa, "gfx/freight/toki_900.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_toki_900_black_tarpb, "gfx/freight/toki_900.png") {
	template_2cc_std(1, 288)
}



spriteset(spriteset_toki_900_purchase, "gfx/freight/toki_900.png") {
	template_purchase(1, 320)
}




spritegroup spritegroup_toki_900_black_bulk {
    loading: [spriteset_toki_900_black_empty, spriteset_toki_900_black_bulk_quarter, spriteset_toki_900_black_bulk_half, spriteset_toki_900_black_bulk_full];
    loaded:  [spriteset_toki_900_black_empty, spriteset_toki_900_black_bulk_quarter, spriteset_toki_900_black_bulk_half, spriteset_toki_900_black_bulk_full];
}

spritegroup spritegroup_toki_900_black_bulk_covered_a {
    loading: [spriteset_toki_900_black_empty, spriteset_toki_900_black_bulk_quarter, spriteset_toki_900_black_bulk_half, spriteset_toki_900_black_bulk_full];
    loaded:  [spriteset_toki_900_black_empty, spriteset_toki_900_black_tarpa];
}

spritegroup spritegroup_toki_900_black_bulk_covered_b {
    loading: [spriteset_toki_900_black_empty, spriteset_toki_900_black_bulk_quarter, spriteset_toki_900_black_bulk_half, spriteset_toki_900_black_bulk_full];
    loaded:  [spriteset_toki_900_black_empty, spriteset_toki_900_black_tarpb];
}

spritegroup spritegroup_toki_900_black_piece {
    loading: [spriteset_toki_900_black_empty, spriteset_toki_900_black_piece_half, spriteset_toki_900_black_piece_full];
    loaded:  [spriteset_toki_900_black_empty, spriteset_toki_900_black_piece_half, spriteset_toki_900_black_piece_full];
}

spritegroup spritegroup_toki_900_black_piece_covered_a {
    loading: [spriteset_toki_900_black_empty, spriteset_toki_900_black_piece_half, spriteset_toki_900_black_piece_full];
    loaded:  [spriteset_toki_900_black_empty, spriteset_toki_900_black_piece_half, spriteset_toki_900_black_tarpa];
}

spritegroup spritegroup_toki_900_black_piece_covered_b {
    loading: [spriteset_toki_900_black_empty, spriteset_toki_900_black_piece_half, spriteset_toki_900_black_piece_full];
    loaded:  [spriteset_toki_900_black_empty, spriteset_toki_900_black_piece_half, spriteset_toki_900_black_tarpb];
}



spritegroup spritegroup_toki_900_black_crates {
    loading: [spriteset_toki_900_black_empty, spriteset_toki_900_black_crates_full];
    loaded:  [spriteset_toki_900_black_empty, spriteset_toki_900_black_crates_full];
}

spritegroup spritegroup_toki_900_black_coils {
    loading: [spriteset_toki_900_black_empty, spriteset_toki_900_black_coils_full];
    loaded:  [spriteset_toki_900_black_empty, spriteset_toki_900_black_coils_full];
}

spritegroup spritegroup_toki_900_black_paper {
    loading: [spriteset_toki_900_black_empty, spriteset_toki_900_black_coils_full];
    loaded:  [spriteset_toki_900_black_empty, spriteset_toki_900_black_coils_full, spriteset_toki_900_black_tarpa];
}


spritegroup spritegroup_toki_900_black_wool {
    loading: [spriteset_toki_900_black_empty, spriteset_toki_900_black_crates_full];
    loaded:  [spriteset_toki_900_black_empty, spriteset_toki_900_black_crates_full, spriteset_toki_900_black_tarpa];
}

//wood 

spriteset(spriteset_toki_900_wood_empty, "gfx/freight/toki_900_wood.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_toki_900_wood_bulk_quarter, "gfx/freight/toki_900_wood.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_toki_900_wood_bulk_half, "gfx/freight/toki_900_wood.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_toki_900_wood_bulk_full, "gfx/freight/toki_900_wood.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_toki_900_wood_piece_half, "gfx/freight/toki_900_wood.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_toki_900_wood_piece_full, "gfx/freight/toki_900_wood.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_toki_900_wood_crates_full, "gfx/freight/toki_900_wood.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_toki_900_wood_coils_full, "gfx/freight/toki_900_wood.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_toki_900_wood_tarpa, "gfx/freight/toki_900_wood.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_toki_900_wood_tarpb, "gfx/freight/toki_900_wood.png") {
	template_2cc_std(1, 288)
}



spritegroup spritegroup_toki_900_wood_bulk {
    loading: [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_bulk_quarter, spriteset_toki_900_wood_bulk_half, spriteset_toki_900_wood_bulk_full];
    loaded:  [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_bulk_quarter, spriteset_toki_900_wood_bulk_half, spriteset_toki_900_wood_bulk_full];
}

spritegroup spritegroup_toki_900_wood_bulk_covered_a {
    loading: [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_bulk_quarter, spriteset_toki_900_wood_bulk_half, spriteset_toki_900_wood_bulk_full];
    loaded:  [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_tarpa];
}

spritegroup spritegroup_toki_900_wood_bulk_covered_b {
    loading: [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_bulk_quarter, spriteset_toki_900_wood_bulk_half, spriteset_toki_900_wood_bulk_full];
    loaded:  [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_tarpb];
}

spritegroup spritegroup_toki_900_wood_piece {
    loading: [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_piece_half, spriteset_toki_900_wood_piece_full];
    loaded:  [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_piece_half, spriteset_toki_900_wood_piece_full];
}

spritegroup spritegroup_toki_900_wood_piece_covered_a {
    loading: [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_piece_half, spriteset_toki_900_wood_piece_full];
    loaded:  [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_piece_half, spriteset_toki_900_wood_tarpa];
}
spritegroup spritegroup_toki_900_wood_piece_covered_b {
    loading: [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_piece_half, spriteset_toki_900_wood_piece_full];
    loaded:  [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_piece_half, spriteset_toki_900_wood_tarpb];
}



spritegroup spritegroup_toki_900_wood_crates {
    loading: [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_crates_full];
    loaded:  [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_crates_full];
}

spritegroup spritegroup_toki_900_wood_coils {
    loading: [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_coils_full];
    loaded:  [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_coils_full];
}

spritegroup spritegroup_toki_900_wood_paper {
    loading: [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_coils_full];
    loaded:  [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_coils_full, spriteset_toki_900_wood_tarpa];
}


spritegroup spritegroup_toki_900_wood_wool {
    loading: [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_crates_full];
    loaded:  [spriteset_toki_900_wood_empty, spriteset_toki_900_wood_crates_full, spriteset_toki_900_wood_tarpa];
}


//todo open sides



//random switches

//todo refits?

random_switch (FEAT_TRAINS, SELF, random_toki_900_metal) {
 1: spritegroup_toki_900_black_piece;
 3: spritegroup_toki_900_black_coils;
 1: spritegroup_toki_900_black_piece_covered_a;
 1: spritegroup_toki_900_black_piece_covered_b;
 1: spritegroup_toki_900_wood_piece;
 2: spritegroup_toki_900_wood_coils;
 1: spritegroup_toki_900_wood_piece_covered_a;
 1: spritegroup_toki_900_wood_piece_covered_b;
}

random_switch (FEAT_TRAINS, SELF, random_toki_900_supplies) {
 1: spritegroup_toki_900_black_piece;
 2: spritegroup_toki_900_black_crates;
 1: spritegroup_toki_900_black_piece_covered_a;
 1: spritegroup_toki_900_black_piece_covered_b;
 1: spritegroup_toki_900_wood_piece;
 2: spritegroup_toki_900_wood_crates;
 1: spritegroup_toki_900_wood_piece_covered_a;
 1: spritegroup_toki_900_wood_piece_covered_b;
}

random_switch (FEAT_TRAINS, SELF, random_toki_900_piece) {
 3: spritegroup_toki_900_black_piece;
 2: spritegroup_toki_900_black_crates;
 1: spritegroup_toki_900_black_piece_covered_a;
 1: spritegroup_toki_900_black_piece_covered_b;
 3: spritegroup_toki_900_wood_piece;
 2: spritegroup_toki_900_wood_crates;
 1: spritegroup_toki_900_wood_piece_covered_a;
 1: spritegroup_toki_900_wood_piece_covered_b;
}

random_switch (FEAT_TRAINS, SELF, random_toki_900_wool) {
 2: spritegroup_toki_900_black_wool;
 1: spritegroup_toki_900_wood_wool;
}

random_switch (FEAT_TRAINS, SELF, random_toki_900_paper) {
 2: spritegroup_toki_900_black_paper;
 1: spritegroup_toki_900_wood_paper;
}

random_switch (FEAT_TRAINS, SELF, random_toki_900_rods) {
 2: spritegroup_toki_900_black_piece;
 1: spritegroup_toki_900_wood_piece;
}

random_switch (FEAT_TRAINS, SELF, random_toki_900_bulk) {
 2: spritegroup_toki_900_black_bulk;
 1: spritegroup_toki_900_wood_bulk;
}

random_switch (FEAT_TRAINS, SELF, random_toki_900_covered) {
 2: spritegroup_toki_900_black_bulk_covered_a;
 1: spritegroup_toki_900_wood_bulk_covered_a;
 2: spritegroup_toki_900_black_bulk_covered_b;
 1: spritegroup_toki_900_wood_bulk_covered_b;
}



switch(FEAT_TRAINS, SELF, switch_toki_900_cargo_class, cargo_classes) {
	bitmask(CC_BULK): random_toki_900_bulk;
	bitmask(CC_BULK, CC_COVERED): random_toki_900_covered;
	bitmask(CC_COVERED): random_toki_900_covered;
	bitmask(CC_PIECE_GOODS): random_toki_900_piece;
	random_toki_900_covered;
}

switch(FEAT_TRAINS, SELF, switch_toki_900_cargo_type, cargo_type_in_veh) {
	IRON: random_toki_900_metal;
	STEL: random_toki_900_metal;
	METL: random_toki_900_metal;
	ALUM: random_toki_900_metal;
	ZINC: random_toki_900_metal;
	COPR: random_toki_900_metal;
	STST: random_toki_900_metal;
	STSH: random_toki_900_metal;
	STAL: random_toki_900_metal;
	STCB: random_toki_900_metal;
	
	ENSP: random_toki_900_supplies;
	FMSP: random_toki_900_supplies;
	MNSP: random_toki_900_supplies;
	POWR: random_toki_900_supplies;
	VPTS: random_toki_900_supplies;
	MPTS: random_toki_900_supplies;
	GOOD: random_toki_900_supplies;
	
	BDMT: random_toki_900_piece;
	WDPR: random_toki_900_piece;
	GLAS: random_toki_900_piece;
	BRCK: random_toki_900_piece;
	STWR: random_toki_900_piece;
	STSE: random_toki_900_piece;
	
	PAPR: random_toki_900_paper;
	TYRE: random_toki_900_paper;
	WOOL: random_toki_900_wool;
	TEXT: random_toki_900_wool;
	
	SCMT: random_toki_900_bulk;
	RCYC: random_toki_900_bulk;
	WSTE: random_toki_900_bulk;
	SGCN: random_toki_900_bulk;

	SULP: random_toki_900_covered;
	SEED: random_toki_900_covered;
	FERT: random_toki_900_covered;
	SASH: random_toki_900_covered;
	FRUT: random_toki_900_covered;
	FRVG: random_toki_900_covered;
	TATO: random_toki_900_covered;
	GRAI: random_toki_900_covered;
	CMNT: random_toki_900_covered;
	COCO: random_toki_900_covered;
	SALT: random_toki_900_covered;
	NHNO: random_toki_900_covered;
	FECR: random_toki_900_covered;
	QLME: random_toki_900_covered;
	CBLK: random_toki_900_covered;

	WOOD: random_toki_900_rods;
	PIPE: random_toki_900_rods;
	
	switch_toki_900_cargo_class;
}




item (FEAT_TRAINS, toki_900, 1284) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1940,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_TOKI_900);
	speed: 65 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 45; 
	refit_cost: 0;
//	default_cargo_type: COAL;
	loading_speed: 10;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED, CC_PIECE_GOODS); 
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [BAKE, PCL_, BEER, CHSE, MEAT, OYST, EOIL, LVST, BOOM, VBOD, VEHI];
	weight: 11;
	cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
	length: 6;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OPEN),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 65;
	cargo_capacity: return 45;
	default: switch_toki_900_cargo_type;
	purchase: spriteset_toki_900_purchase;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_tomu_1_a_empty, "gfx/freight/tomu_1_a.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_tomu_1_a_bulk_quarter, "gfx/freight/tomu_1_a.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_tomu_1_a_bulk_half, "gfx/freight/tomu_1_a.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_tomu_1_a_bulk_full, "gfx/freight/tomu_1_a.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_tomu_1_a_piece_half, "gfx/freight/tomu_1_a.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_tomu_1_a_piece_full, "gfx/freight/tomu_1_a.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_tomu_1_a_crates_full, "gfx/freight/tomu_1_a.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_tomu_1_a_coils_full, "gfx/freight/tomu_1_a.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_tomu_1_a_tarpa, "gfx/freight/tomu_1_a.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_tomu_1_a_tarpb, "gfx/freight/tomu_1_a.png") {
	template_2cc_std(1, 288)
}



spriteset(spriteset_tomu_1_purchase, "gfx/freight/tomu_1_a.png") {
	template_purchase(1, 320)
}




spritegroup spritegroup_tomu_1_a_bulk {
    loading: [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_bulk_quarter, spriteset_tomu_1_a_bulk_half, spriteset_tomu_1_a_bulk_full];
    loaded:  [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_bulk_quarter, spriteset_tomu_1_a_bulk_half, spriteset_tomu_1_a_bulk_full];
}

spritegroup spritegroup_tomu_1_a_bulk_covered_a {
    loading: [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_bulk_quarter, spriteset_tomu_1_a_bulk_half, spriteset_tomu_1_a_bulk_full];
    loaded:  [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_tarpa];
}

spritegroup spritegroup_tomu_1_a_bulk_covered_b {
    loading: [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_bulk_quarter, spriteset_tomu_1_a_bulk_half, spriteset_tomu_1_a_bulk_full];
    loaded:  [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_tarpb];
}

spritegroup spritegroup_tomu_1_a_piece {
    loading: [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_piece_half, spriteset_tomu_1_a_piece_full];
    loaded:  [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_piece_half, spriteset_tomu_1_a_piece_full];
}

spritegroup spritegroup_tomu_1_a_piece_covered {
    loading: [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_piece_half, spriteset_tomu_1_a_piece_full];
    loaded:  [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_piece_half, spriteset_tomu_1_a_tarpa];
}


spritegroup spritegroup_tomu_1_a_crates {
    loading: [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_crates_full];
    loaded:  [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_crates_full];
}

spritegroup spritegroup_tomu_1_a_coils {
    loading: [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_coils_full];
    loaded:  [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_coils_full];
}

spritegroup spritegroup_tomu_1_a_paper {
    loading: [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_coils_full];
    loaded:  [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_coils_full, spriteset_tomu_1_a_tarpa];
}


spritegroup spritegroup_tomu_1_a_wool {
    loading: [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_crates_full];
    loaded:  [spriteset_tomu_1_a_empty, spriteset_tomu_1_a_crates_full, spriteset_tomu_1_a_tarpa];
}

//b 

spriteset(spriteset_tomu_1_b_empty, "gfx/freight/tomu_1_b.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_tomu_1_b_bulk_quarter, "gfx/freight/tomu_1_b.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_tomu_1_b_bulk_half, "gfx/freight/tomu_1_b.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_tomu_1_b_bulk_full, "gfx/freight/tomu_1_b.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_tomu_1_b_piece_half, "gfx/freight/tomu_1_b.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_tomu_1_b_piece_full, "gfx/freight/tomu_1_b.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_tomu_1_b_crates_full, "gfx/freight/tomu_1_b.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_tomu_1_b_coils_full, "gfx/freight/tomu_1_b.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_tomu_1_b_tarpa, "gfx/freight/tomu_1_b.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_tomu_1_b_tarpb, "gfx/freight/tomu_1_b.png") {
	template_2cc_std(1, 288)
}



spritegroup spritegroup_tomu_1_b_bulk {
    loading: [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_bulk_quarter, spriteset_tomu_1_b_bulk_half, spriteset_tomu_1_b_bulk_full];
    loaded:  [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_bulk_quarter, spriteset_tomu_1_b_bulk_half, spriteset_tomu_1_b_bulk_full];
}

spritegroup spritegroup_tomu_1_b_bulk_covered_a {
    loading: [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_bulk_quarter, spriteset_tomu_1_b_bulk_half, spriteset_tomu_1_b_bulk_full];
    loaded:  [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_tarpa];
}

spritegroup spritegroup_tomu_1_b_bulk_covered_b {
    loading: [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_bulk_quarter, spriteset_tomu_1_b_bulk_half, spriteset_tomu_1_b_bulk_full];
    loaded:  [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_tarpb];
}

spritegroup spritegroup_tomu_1_b_piece {
    loading: [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_piece_half, spriteset_tomu_1_b_piece_full];
    loaded:  [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_piece_half, spriteset_tomu_1_b_piece_full];
}

spritegroup spritegroup_tomu_1_b_piece_covered {
    loading: [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_piece_half, spriteset_tomu_1_b_piece_full];
    loaded:  [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_piece_half, spriteset_tomu_1_b_tarpa];
}


spritegroup spritegroup_tomu_1_b_crates {
    loading: [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_crates_full];
    loaded:  [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_crates_full];
}

spritegroup spritegroup_tomu_1_b_coils {
    loading: [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_coils_full];
    loaded:  [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_coils_full];
}

spritegroup spritegroup_tomu_1_b_paper {
    loading: [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_coils_full];
    loaded:  [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_coils_full, spriteset_tomu_1_b_tarpa];
}


spritegroup spritegroup_tomu_1_b_wool {
    loading: [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_crates_full];
    loaded:  [spriteset_tomu_1_b_empty, spriteset_tomu_1_b_crates_full, spriteset_tomu_1_b_tarpa];
}


//todo open sides



//random switches




random_switch (FEAT_TRAINS, SELF, random_tomu_1_a_metal) {
 1: spritegroup_tomu_1_a_piece;
 2: spritegroup_tomu_1_a_coils;
 1: spritegroup_tomu_1_a_piece_covered;
}

random_switch (FEAT_TRAINS, SELF, random_tomu_1_a_supplies) {
 1: spritegroup_tomu_1_a_piece;
 2: spritegroup_tomu_1_a_crates;
 1: spritegroup_tomu_1_a_piece_covered;
}

random_switch (FEAT_TRAINS, SELF, random_tomu_1_a_piece) {
 2: spritegroup_tomu_1_a_piece;
 1: spritegroup_tomu_1_a_crates;
 2: spritegroup_tomu_1_a_piece_covered;
}


random_switch (FEAT_TRAINS, SELF, random_tomu_1_b_metal) {
 1: spritegroup_tomu_1_b_piece;
 2: spritegroup_tomu_1_b_coils;
 1: spritegroup_tomu_1_b_piece_covered;
}

random_switch (FEAT_TRAINS, SELF, random_tomu_1_b_supplies) {
 1: spritegroup_tomu_1_b_piece;
 2: spritegroup_tomu_1_b_crates;
 1: spritegroup_tomu_1_b_piece_covered;
}

random_switch (FEAT_TRAINS, SELF, random_tomu_1_b_piece) {
 2: spritegroup_tomu_1_b_piece;
 1: spritegroup_tomu_1_b_crates;
 2: spritegroup_tomu_1_b_piece_covered;
}



random_switch (FEAT_TRAINS, SELF, random_tomu_1_metal) {
 2: random_tomu_1_a_metal;
 1: random_tomu_1_b_metal;
}

random_switch (FEAT_TRAINS, SELF, random_tomu_1_supplies) {
 2: random_tomu_1_a_supplies;
 1: random_tomu_1_b_supplies;
}

random_switch (FEAT_TRAINS, SELF, random_tomu_1_piece) {
 2: random_tomu_1_a_piece;
 1: random_tomu_1_b_piece;
}

random_switch (FEAT_TRAINS, SELF, random_tomu_1_wool) {
 2: spritegroup_tomu_1_a_wool;
 1: spritegroup_tomu_1_b_wool;
}

random_switch (FEAT_TRAINS, SELF, random_tomu_1_paper) {
 2: spritegroup_tomu_1_a_paper;
 1: spritegroup_tomu_1_b_paper;
}

random_switch (FEAT_TRAINS, SELF, random_tomu_1_rods) {
 2: spritegroup_tomu_1_a_piece;
 1: spritegroup_tomu_1_b_piece;
}

random_switch (FEAT_TRAINS, SELF, random_tomu_1_bulk) {
 2: spritegroup_tomu_1_a_bulk;
 1: spritegroup_tomu_1_b_bulk;
}

random_switch (FEAT_TRAINS, SELF, random_tomu_1_covered) {
 2: spritegroup_tomu_1_a_bulk_covered_a;
 1: spritegroup_tomu_1_b_bulk_covered_a;
 2: spritegroup_tomu_1_a_bulk_covered_b;
 1: spritegroup_tomu_1_b_bulk_covered_b;
}


switch(FEAT_TRAINS, SELF, switch_tomu_1_cargo_class, cargo_classes) {
	bitmask(CC_BULK): random_tomu_1_bulk;
	bitmask(CC_BULK, CC_COVERED): random_tomu_1_covered;
	bitmask(CC_COVERED): random_tomu_1_covered;
	bitmask(CC_PIECE_GOODS): random_tomu_1_piece;
	random_tomu_1_covered;
}

switch(FEAT_TRAINS, SELF, switch_tomu_1_cargo_type, cargo_type_in_veh) {
	IRON: random_tomu_1_metal;
	STEL: random_tomu_1_metal;
	METL: random_tomu_1_metal;
	ALUM: random_tomu_1_metal;
	ZINC: random_tomu_1_metal;
	COPR: random_tomu_1_metal;
	STST: random_tomu_1_metal;
	STSH: random_tomu_1_metal;
	STAL: random_tomu_1_metal;
	STCB: random_tomu_1_metal;
	
	ENSP: random_tomu_1_supplies;
	FMSP: random_tomu_1_supplies;
	MNSP: random_tomu_1_supplies;
	POWR: random_tomu_1_supplies;
	VPTS: random_tomu_1_supplies;
	MPTS: random_tomu_1_supplies;
	GOOD: random_tomu_1_supplies;
	
	BDMT: random_tomu_1_piece;
	WDPR: random_tomu_1_piece;
	GLAS: random_tomu_1_piece;
	BRCK: random_tomu_1_piece;
	STWR: random_tomu_1_piece;
	STSE: random_tomu_1_piece;
	
	PAPR: random_tomu_1_paper;
	TYRE: random_tomu_1_paper;
	WOOL: random_tomu_1_wool;
	TEXT: random_tomu_1_wool;
	
	SCMT: random_tomu_1_bulk;
	RCYC: random_tomu_1_bulk;
	WSTE: random_tomu_1_bulk;
	SGCN: random_tomu_1_bulk;

	SULP: random_tomu_1_covered;
	SEED: random_tomu_1_covered;
	FERT: random_tomu_1_covered;
	SASH: random_tomu_1_covered;
	FRUT: random_tomu_1_covered;
	FRVG: random_tomu_1_covered;
	TATO: random_tomu_1_covered;
	GRAI: random_tomu_1_covered;
	CMNT: random_tomu_1_covered;
	COCO: random_tomu_1_covered;
	SALT: random_tomu_1_covered;
	NHNO: random_tomu_1_covered;
	FECR: random_tomu_1_covered;
	QLME: random_tomu_1_covered;
	CBLK: random_tomu_1_covered;

	WOOD: random_tomu_1_rods;
	PIPE: random_tomu_1_rods;
	
	switch_tomu_1_cargo_class;
}


item (FEAT_TRAINS, tomu_1, 1929) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1911,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_TOMU_1);
	speed: 65 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 30; 
	refit_cost: 0;
//	default_cargo_type: COAL;
	loading_speed: 10;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED, CC_PIECE_GOODS); 
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [BAKE, PCL_, BEER, CHSE, MEAT, OYST, EOIL, LVST, BOOM, VBOD, VEHI];
	weight: 10;
	cost_factor: 18;
	running_cost_factor: 3;
	running_cost_base: RUNNING_COST_STEAM;
	length: 5;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OPEN),
							string(STR_CONCAT_3C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 65;
	cargo_capacity: return 30;
	default: switch_tomu_1_cargo_type;
	purchase: spriteset_tomu_1_purchase;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_tora_5000_a_empty, "gfx/freight/tora_5000_a.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_tora_5000_a_bulk_quarter, "gfx/freight/tora_5000_a.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_tora_5000_a_bulk_half, "gfx/freight/tora_5000_a.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_tora_5000_a_bulk_full, "gfx/freight/tora_5000_a.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_tora_5000_a_piece_half, "gfx/freight/tora_5000_a.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_tora_5000_a_piece_full, "gfx/freight/tora_5000_a.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_tora_5000_a_crates_full, "gfx/freight/tora_5000_a.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_tora_5000_a_coils_full, "gfx/freight/tora_5000_a.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_tora_5000_a_tarpa, "gfx/freight/tora_5000_a.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_tora_5000_a_tarpb, "gfx/freight/tora_5000_a.png") {
	template_2cc_std(1, 288)
}



spriteset(spriteset_tora_5000_purchase, "gfx/freight/tora_5000_a.png") {
	template_purchase(1, 320)
}




spritegroup spritegroup_tora_5000_a_bulk {
    loading: [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_bulk_quarter, spriteset_tora_5000_a_bulk_half, spriteset_tora_5000_a_bulk_full];
    loaded:  [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_bulk_quarter, spriteset_tora_5000_a_bulk_half, spriteset_tora_5000_a_bulk_full];
}

spritegroup spritegroup_tora_5000_a_bulk_covered_a {
    loading: [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_bulk_quarter, spriteset_tora_5000_a_bulk_half, spriteset_tora_5000_a_bulk_full];
    loaded:  [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_tarpa];
}

spritegroup spritegroup_tora_5000_a_bulk_covered_b {
    loading: [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_bulk_quarter, spriteset_tora_5000_a_bulk_half, spriteset_tora_5000_a_bulk_full];
    loaded:  [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_tarpb];
}

spritegroup spritegroup_tora_5000_a_piece {
    loading: [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_piece_half, spriteset_tora_5000_a_piece_full];
    loaded:  [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_piece_half, spriteset_tora_5000_a_piece_full];
}

spritegroup spritegroup_tora_5000_a_piece_covered {
    loading: [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_piece_half, spriteset_tora_5000_a_piece_full];
    loaded:  [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_piece_half, spriteset_tora_5000_a_tarpa];
}


spritegroup spritegroup_tora_5000_a_crates {
    loading: [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_crates_full];
    loaded:  [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_crates_full];
}

spritegroup spritegroup_tora_5000_a_coils {
    loading: [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_coils_full];
    loaded:  [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_coils_full];
}

spritegroup spritegroup_tora_5000_a_paper {
    loading: [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_coils_full];
    loaded:  [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_coils_full, spriteset_tora_5000_a_tarpa];
}


spritegroup spritegroup_tora_5000_a_wool {
    loading: [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_crates_full];
    loaded:  [spriteset_tora_5000_a_empty, spriteset_tora_5000_a_crates_full, spriteset_tora_5000_a_tarpa];
}

//b 

spriteset(spriteset_tora_5000_b_empty, "gfx/freight/tora_5000_b.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_tora_5000_b_bulk_quarter, "gfx/freight/tora_5000_b.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_tora_5000_b_bulk_half, "gfx/freight/tora_5000_b.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_tora_5000_b_bulk_full, "gfx/freight/tora_5000_b.png") {
	template_2cc_anim(1, 96)
}

spriteset(spriteset_tora_5000_b_piece_half, "gfx/freight/tora_5000_b.png") {
	template_2cc_anim(1, 128)
}

spriteset(spriteset_tora_5000_b_piece_full, "gfx/freight/tora_5000_b.png") {
	template_2cc_anim(1, 160)
}

spriteset(spriteset_tora_5000_b_crates_full, "gfx/freight/tora_5000_b.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_tora_5000_b_coils_full, "gfx/freight/tora_5000_b.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_tora_5000_b_tarpa, "gfx/freight/tora_5000_b.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_tora_5000_b_tarpb, "gfx/freight/tora_5000_b.png") {
	template_2cc_std(1, 288)
}



spritegroup spritegroup_tora_5000_b_bulk {
    loading: [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_bulk_quarter, spriteset_tora_5000_b_bulk_half, spriteset_tora_5000_b_bulk_full];
    loaded:  [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_bulk_quarter, spriteset_tora_5000_b_bulk_half, spriteset_tora_5000_b_bulk_full];
}

spritegroup spritegroup_tora_5000_b_bulk_covered_a {
    loading: [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_bulk_quarter, spriteset_tora_5000_b_bulk_half, spriteset_tora_5000_b_bulk_full];
    loaded:  [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_tarpa];
}

spritegroup spritegroup_tora_5000_b_bulk_covered_b {
    loading: [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_bulk_quarter, spriteset_tora_5000_b_bulk_half, spriteset_tora_5000_b_bulk_full];
    loaded:  [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_tarpb];
}

spritegroup spritegroup_tora_5000_b_piece {
    loading: [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_piece_half, spriteset_tora_5000_b_piece_full];
    loaded:  [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_piece_half, spriteset_tora_5000_b_piece_full];
}

spritegroup spritegroup_tora_5000_b_piece_covered {
    loading: [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_piece_half, spriteset_tora_5000_b_piece_full];
    loaded:  [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_piece_half, spriteset_tora_5000_b_tarpa];
}


spritegroup spritegroup_tora_5000_b_crates {
    loading: [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_crates_full];
    loaded:  [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_crates_full];
}

spritegroup spritegroup_tora_5000_b_coils {
    loading: [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_coils_full];
    loaded:  [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_coils_full];
}

spritegroup spritegroup_tora_5000_b_paper {
    loading: [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_coils_full];
    loaded:  [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_coils_full, spriteset_tora_5000_b_tarpa];
}


spritegroup spritegroup_tora_5000_b_wool {
    loading: [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_crates_full];
    loaded:  [spriteset_tora_5000_b_empty, spriteset_tora_5000_b_crates_full, spriteset_tora_5000_b_tarpa];
}


//todo open sides



//random switches




random_switch (FEAT_TRAINS, SELF, random_tora_5000_a_metal) {
 1: spritegroup_tora_5000_a_piece;
 2: spritegroup_tora_5000_a_coils;
 1: spritegroup_tora_5000_a_piece_covered;
}

random_switch (FEAT_TRAINS, SELF, random_tora_5000_a_supplies) {
 1: spritegroup_tora_5000_a_piece;
 2: spritegroup_tora_5000_a_crates;
 1: spritegroup_tora_5000_a_piece_covered;
}

random_switch (FEAT_TRAINS, SELF, random_tora_5000_a_piece) {
 2: spritegroup_tora_5000_a_piece;
 1: spritegroup_tora_5000_a_crates;
 2: spritegroup_tora_5000_a_piece_covered;
}


random_switch (FEAT_TRAINS, SELF, random_tora_5000_b_metal) {
 1: spritegroup_tora_5000_b_piece;
 2: spritegroup_tora_5000_b_coils;
 1: spritegroup_tora_5000_b_piece_covered;
}

random_switch (FEAT_TRAINS, SELF, random_tora_5000_b_supplies) {
 1: spritegroup_tora_5000_b_piece;
 2: spritegroup_tora_5000_b_crates;
 1: spritegroup_tora_5000_b_piece_covered;
}

random_switch (FEAT_TRAINS, SELF, random_tora_5000_b_piece) {
 2: spritegroup_tora_5000_b_piece;
 1: spritegroup_tora_5000_b_crates;
 2: spritegroup_tora_5000_b_piece_covered;
}



random_switch (FEAT_TRAINS, SELF, random_tora_5000_metal) {
 2: random_tora_5000_a_metal;
 1: random_tora_5000_b_metal;
}

random_switch (FEAT_TRAINS, SELF, random_tora_5000_supplies) {
 2: random_tora_5000_a_supplies;
 1: random_tora_5000_b_supplies;
}

random_switch (FEAT_TRAINS, SELF, random_tora_5000_piece) {
 2: random_tora_5000_a_piece;
 1: random_tora_5000_b_piece;
}

random_switch (FEAT_TRAINS, SELF, random_tora_5000_wool) {
 2: spritegroup_tora_5000_a_wool;
 1: spritegroup_tora_5000_b_wool;
}

random_switch (FEAT_TRAINS, SELF, random_tora_5000_paper) {
 2: spritegroup_tora_5000_a_paper;
 1: spritegroup_tora_5000_b_paper;
}

random_switch (FEAT_TRAINS, SELF, random_tora_5000_rods) {
 2: spritegroup_tora_5000_a_piece;
 1: spritegroup_tora_5000_b_piece;
}

random_switch (FEAT_TRAINS, SELF, random_tora_5000_bulk) {
 2: spritegroup_tora_5000_a_bulk;
 1: spritegroup_tora_5000_b_bulk;
}

random_switch (FEAT_TRAINS, SELF, random_tora_5000_covered) {
 2: spritegroup_tora_5000_a_bulk_covered_a;
 1: spritegroup_tora_5000_b_bulk_covered_a;
 2: spritegroup_tora_5000_a_bulk_covered_b;
 1: spritegroup_tora_5000_b_bulk_covered_b;
}



switch(FEAT_TRAINS, SELF, switch_tora_5000_cargo_class, cargo_classes) {
	bitmask(CC_BULK): random_tora_5000_bulk;
	bitmask(CC_BULK, CC_COVERED): random_tora_5000_covered;
	bitmask(CC_COVERED): random_tora_5000_covered;
	bitmask(CC_PIECE_GOODS): random_tora_5000_piece;
	random_tora_5000_covered;
}

switch(FEAT_TRAINS, SELF, switch_tora_5000_cargo_type, cargo_type_in_veh) {
	IRON: random_tora_5000_metal;
	STEL: random_tora_5000_metal;
	METL: random_tora_5000_metal;
	ALUM: random_tora_5000_metal;
	ZINC: random_tora_5000_metal;
	COPR: random_tora_5000_metal;
	STST: random_tora_5000_metal;
	STSH: random_tora_5000_metal;
	STAL: random_tora_5000_metal;
	STCB: random_tora_5000_metal;
	
	ENSP: random_tora_5000_supplies;
	FMSP: random_tora_5000_supplies;
	MNSP: random_tora_5000_supplies;
	POWR: random_tora_5000_supplies;
	VPTS: random_tora_5000_supplies;
	MPTS: random_tora_5000_supplies;
	GOOD: random_tora_5000_supplies;
	
	BDMT: random_tora_5000_piece;
	WDPR: random_tora_5000_piece;
	GLAS: random_tora_5000_piece;
	BRCK: random_tora_5000_piece;
	STWR: random_tora_5000_piece;
	STSE: random_tora_5000_piece;
	
	PAPR: random_tora_5000_paper;
	TYRE: random_tora_5000_paper;
	WOOL: random_tora_5000_wool;
	TEXT: random_tora_5000_wool;
	
	SCMT: random_tora_5000_bulk;
	WSTE: random_tora_5000_bulk;
	RCYC: random_tora_5000_bulk;
	SGCN: random_tora_5000_bulk;

	SULP: random_tora_5000_covered;
	SEED: random_tora_5000_covered;
	FERT: random_tora_5000_covered;
	SASH: random_tora_5000_covered;
	FRUT: random_tora_5000_covered;
	FRVG: random_tora_5000_covered;
	TATO: random_tora_5000_covered;
	GRAI: random_tora_5000_covered;
	CMNT: random_tora_5000_covered;
	COCO: random_tora_5000_covered;
	SALT: random_tora_5000_covered;
	NHNO: random_tora_5000_covered;
	FECR: random_tora_5000_covered;
	QLME: random_tora_5000_covered;
	CBLK: random_tora_5000_covered;

	WOOD: random_tora_5000_rods;
	PIPE: random_tora_5000_rods;

	switch_tora_5000_cargo_class;
}




item (FEAT_TRAINS, tora_5000, 1933) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1930,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_TOMU_1);
	speed: 75 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 40; 
	refit_cost: 0;
//	default_cargo_type: COAL;
	loading_speed: 10;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED, CC_PIECE_GOODS); 
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [BAKE, PCL_, BEER, CHSE, MEAT, OYST, EOIL, LVST, BOOM, VBOD, VEHI];
	weight: 10;
	cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
	length: 6;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OPEN),
							string(STR_CONCAT_3C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 75;
	cargo_capacity: return 40;
	default: switch_tora_5000_cargo_type;
	purchase: spriteset_tora_5000_purchase;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_tora_90000_empty, "gfx/freight/tora_90000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_tora_90000_half, "gfx/freight/tora_90000.png") {
	template_2cc_anim(1, 32)
}

spriteset(spriteset_tora_90000_full, "gfx/freight/tora_90000.png") {
	template_2cc_anim(1, 64)
}

spriteset(spriteset_tora_90000_tarp, "gfx/freight/tora_90000.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_tora_90000_purchase, "gfx/freight/tora_90000.png") {
	template_purchase(1, 128)
}



spritegroup spritegroup_tora_90000_bulk {
    loading: [spriteset_tora_90000_empty, spriteset_tora_90000_half, spriteset_tora_90000_full];
    loaded:  [spriteset_tora_90000_empty, spriteset_tora_90000_half, spriteset_tora_90000_full];
}

spritegroup spritegroup_tora_90000_covered {
    loading: [spriteset_tora_90000_empty, spriteset_tora_90000_half, spriteset_tora_90000_full];
    loaded:  [spriteset_tora_90000_empty, spriteset_tora_90000_tarp];
}



switch(FEAT_TRAINS, SELF, switch_tora_90000_cargo_class, cargo_classes) {
	bitmask(CC_BULK): spritegroup_tora_90000_bulk;
	bitmask(CC_COVERED): spritegroup_tora_90000_covered;
	spritegroup_tora_90000_covered;
}


item (FEAT_TRAINS, tora_90000, 1280) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	introduction_date: date(1950,1,1);
	climates_available: ALL_CLIMATES;
	name: string(STR_NAME_TORA_90000);
	speed: 75 km/h;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 35; 
	refit_cost: 0;
//	default_cargo_type: COAL;
	loading_speed: 10;
//	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED, CC_PIECE_GOODS); 
	non_refittable_cargo_classes: 0;
	cargo_allow_refit: [GRAI, FICR, WOOD, WOOL, BEAN, SGCN, SGBT, OLSD, MAIZ, PEAT, SEED, FRUT, FRVG, TATO, WDCH, TBCO];
	cargo_disallow_refit: [COAL, IORE, CORE, PORE, CMNT];
	weight: 11;
	cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
	length: 5;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT);
	variant_group: 1929;
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CHIP),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 75;
	cargo_capacity: return 35;
	default: switch_tora_90000_cargo_class;
	purchase: spriteset_tora_90000_purchase;
	colour_mapping: switch_generic_recolour;
	}
}
spriteset(spriteset_toki_25000_brown_a, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_toki_25000_brown_b, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_toki_25000_green, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_toki_25000_black, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 96)
}

//15000
spriteset(spriteset_toki_15000_black, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 128)
}

//loads
spriteset(spriteset_toki_25000_tarp_brown, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_toki_25000_tarp_green, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_toki_25000_tarp_grey, "gfx/freight/toki_25000.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_toki_25000_bulk_quarter, "gfx/freight/toki_25000.png") {
	template_2cc_anim(1, 256)
}

spriteset(spriteset_toki_25000_bulk_half, "gfx/freight/toki_25000.png") {
	template_2cc_anim(1, 288)
}

spriteset(spriteset_toki_25000_bulk_full, "gfx/freight/toki_25000.png") {
	template_2cc_anim(1, 320)
}

spriteset(spriteset_toki_25000_blank, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 1)
}

/* for future loads
spriteset(spriteset_toki_25000_, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 32)
}

spriteset(spriteset_toki_25000_, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 64)
}

spriteset(spriteset_toki_25000_, "gfx/freight/toki_25000.png") {
	template_2cc_stdm(180, 96)
}
*/

spriteset(spriteset_toki_25000_coils_half, "gfx/freight/toki_25000.png") {
	template_2cc_anim(180, 128)
}

spriteset(spriteset_toki_25000_coils_full, "gfx/freight/toki_25000.png") {
	template_2cc_anim(180, 160)
}

spriteset(spriteset_toki_25000_rods_half, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 192)
}

spriteset(spriteset_toki_25000_rods_full, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 224)
}

spriteset(spriteset_toki_25000_conts_a, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 256)
}

spriteset(spriteset_toki_25000_conts_b, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 288)
}

spriteset(spriteset_toki_25000_conts_c, "gfx/freight/toki_25000.png") {
	template_2cc_std(180, 320)
}



//purchase
spriteset(spriteset_toki_15000_jgr_purchase, "gfx/freight/toki_25000.png") {
	template_purchase(1, 352)
}

spriteset(spriteset_toki_15000_jnr_purchase, "gfx/freight/toki_25000.png") {
	template_purchase(89, 352)
}

spriteset(spriteset_toki_25000_jnr_purchase, "gfx/freight/toki_25000.png") {
	template_purchase(180, 352)
}

spriteset(spriteset_toki_25000_jrf_purchase, "gfx/freight/toki_25000.png") {
	template_purchase(268, 352)
}





spritegroup spritegroup_toki_25000_bulk {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_bulk_quarter, spriteset_toki_25000_bulk_half, spriteset_toki_25000_bulk_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_bulk_quarter, spriteset_toki_25000_bulk_half, spriteset_toki_25000_bulk_full];
}

spritegroup spritegroup_toki_25000_bulk_tarp_brown {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_bulk_quarter, spriteset_toki_25000_bulk_half, spriteset_toki_25000_bulk_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_brown];
}

spritegroup spritegroup_toki_25000_bulk_tarp_green {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_bulk_quarter, spriteset_toki_25000_bulk_half, spriteset_toki_25000_bulk_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_green];
}

spritegroup spritegroup_toki_25000_bulk_tarp_grey {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_bulk_quarter, spriteset_toki_25000_bulk_half, spriteset_toki_25000_bulk_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_grey];
}


spritegroup spritegroup_toki_25000_rods {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_rods_half, spriteset_toki_25000_rods_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_rods_half, spriteset_toki_25000_rods_full];
}

spritegroup spritegroup_toki_25000_rods_tarp_brown {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_rods_half, spriteset_toki_25000_rods_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_brown];
}

spritegroup spritegroup_toki_25000_rods_tarp_green {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_rods_half, spriteset_toki_25000_rods_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_green];
}

spritegroup spritegroup_toki_25000_rods_tarp_grey {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_rods_half, spriteset_toki_25000_rods_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_tarp_grey];
}


spritegroup spritegroup_toki_25000_coils {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_coils_half, spriteset_toki_25000_coils_full];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_coils_half, spriteset_toki_25000_coils_full];
}

spritegroup spritegroup_toki_25000_conts_a {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_conts_a];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_conts_a];
}

spritegroup spritegroup_toki_25000_conts_b {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_conts_b];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_conts_b];
}

spritegroup spritegroup_toki_25000_conts_c {
    loading: [spriteset_toki_25000_blank, spriteset_toki_25000_conts_c];
    loaded:  [spriteset_toki_25000_blank, spriteset_toki_25000_conts_c];
}

//random loads

random_switch (FEAT_TRAINS, SELF, random_toki_25000_conts) {
 1: spritegroup_toki_25000_conts_a;
 1: spritegroup_toki_25000_conts_b;
 1: spritegroup_toki_25000_conts_c;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_bulk_tarp) {
 1: spritegroup_toki_25000_bulk_tarp_brown;
 1: spritegroup_toki_25000_bulk_tarp_green;
 1: spritegroup_toki_25000_bulk_tarp_grey;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_rods_tarp) {
 1: spritegroup_toki_25000_rods_tarp_brown;
 1: spritegroup_toki_25000_rods_tarp_green;
 1: spritegroup_toki_25000_rods_tarp_grey;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_rods_covered) {
 1: random_toki_25000_rods_tarp;
 1: spritegroup_toki_25000_rods;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_metal) {
 2: spritegroup_toki_25000_coils;
 1: spritegroup_toki_25000_rods;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_supplies) {
 2: random_toki_25000_conts;
 1: random_toki_25000_rods_tarp;
}


switch(FEAT_TRAINS, SELF, switch_toki_25000_tarp_yeardep, current_year) {
	0..1990: random_toki_25000_bulk_tarp;
	spritegroup_toki_25000_bulk_tarp_green;
}



//cargo type switches

switch(FEAT_TRAINS, SELF, switch_toki_25000_cargo_class, cargo_classes) {
	bitmask(CC_BULK): spritegroup_toki_25000_bulk;
	bitmask(CC_BULK, CC_COVERED): switch_toki_25000_tarp_yeardep;
	bitmask(CC_COVERED): switch_toki_25000_tarp_yeardep;
	bitmask(CC_PIECE_GOODS): random_toki_25000_conts;
	random_toki_25000_rods_covered;
}

switch(FEAT_TRAINS, SELF, switch_toki_25000_cargo_type, cargo_type_in_veh) {
	IRON: random_toki_25000_metal;
	STEL: spritegroup_toki_25000_coils;
	METL: spritegroup_toki_25000_coils;
	ALUM: spritegroup_toki_25000_coils;
	ZINC: random_toki_25000_metal;
	COPR: random_toki_25000_metal;
	STST: random_toki_25000_metal;
	STSH: random_toki_25000_metal;
	STAL: random_toki_25000_metal;
	STCB: spritegroup_toki_25000_coils;
	
	ENSP: random_toki_25000_supplies;
	FMSP: random_toki_25000_supplies;
	MNSP: random_toki_25000_supplies;
	POWR: random_toki_25000_supplies;
	VPTS: random_toki_25000_supplies;
	MPTS: random_toki_25000_supplies;
	GOOD: random_toki_25000_supplies;
	
	BDMT: random_toki_25000_supplies;
	WDPR: random_toki_25000_rods_covered;
	GLAS: random_toki_25000_rods_tarp;
	BRCK: random_toki_25000_rods_covered;
	STWR: random_toki_25000_rods_covered;
	STSE: random_toki_25000_rods_covered;
	
	PAPR: random_toki_25000_conts;
	TYRE: random_toki_25000_conts;
	WOOL: random_toki_25000_conts;
	TEXT: random_toki_25000_conts;
	
	SCMT: spritegroup_toki_25000_bulk;
	RCYC: spritegroup_toki_25000_bulk;
	WSTE: spritegroup_toki_25000_bulk;
	SGCN: spritegroup_toki_25000_bulk;
	SULP: switch_toki_25000_tarp_yeardep;
	SEED: switch_toki_25000_tarp_yeardep;
	FERT: switch_toki_25000_tarp_yeardep;
	SASH: switch_toki_25000_tarp_yeardep;
	FRUT: switch_toki_25000_tarp_yeardep;
	FRVG: switch_toki_25000_tarp_yeardep;
	TATO: switch_toki_25000_tarp_yeardep;
	GRAI: switch_toki_25000_tarp_yeardep;
	CMNT: switch_toki_25000_tarp_yeardep;
	COCO: switch_toki_25000_tarp_yeardep;
	SALT: switch_toki_25000_tarp_yeardep;
	NHNO: switch_toki_25000_tarp_yeardep;
	FECR: switch_toki_25000_tarp_yeardep;
	QLME: switch_toki_25000_tarp_yeardep;
	CBLK: switch_toki_25000_tarp_yeardep;

	WOOD: spritegroup_toki_25000_rods;
	PIPE: spritegroup_toki_25000_rods;
	
	switch_toki_25000_cargo_class;
}


//random livery


random_switch (FEAT_TRAINS, SELF, random_toki_25000_all) {
 6: spriteset_toki_25000_brown_a;
 4: spriteset_toki_25000_brown_b;
 2: spriteset_toki_25000_black;
 1: spriteset_toki_25000_green;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_old) {
 8: spriteset_toki_25000_brown_a;
 4: spriteset_toki_25000_black;
 1: spriteset_toki_25000_green;
}

random_switch (FEAT_TRAINS, SELF, random_toki_25000_brown) {
 2: spriteset_toki_25000_brown_a;
 1: spriteset_toki_25000_brown_b;
}





switch(FEAT_TRAINS, SELF, switch_toki_25000_all_yeardep, build_year) {
	0..1975: random_toki_25000_old;
	random_toki_25000_all;
}

switch(FEAT_TRAINS, SELF, switch_toki_25000_brown_yeardep, build_year) {
	0..1975: spriteset_toki_25000_brown_a;
	random_toki_25000_brown;
}


switch(FEAT_TRAINS, SELF, switch_toki_25000_livery, cargo_subtype) {
	1: switch_toki_25000_brown_yeardep;
	2: spriteset_toki_25000_green;
	3: spriteset_toki_25000_black;
	switch_toki_25000_all_yeardep;
}

switch(FEAT_TRAINS, SELF, switch_toki_25000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDYEAR);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_BROWN));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_GREEN));
	3: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	   return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_toki_25000_purchase, current_year) {
	0..1987: spriteset_toki_25000_jnr_purchase;
	spriteset_toki_25000_jrf_purchase;
	}


//stacking

switch(FEAT_TRAINS, SELF, switch_toki_25000_all_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_toki_25000_livery;
    1:  switch_toki_25000_cargo_type;
}


item (FEAT_TRAINS, toki_25000, 1471) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	climates_available: ALL_CLIMATES;
	introduction_date: date(1966,1,1);
	speed: 100 km/h;
	name: string(STR_NAME_TOKI_25000);
	refit_cost: 0;
	power: 0;
	cargo_capacity: 60;
	loading_speed: 10;
	length: 7;
	weight: 17;
	cost_factor: 40;
	running_cost_factor: 6;
	running_cost_base: RUNNING_COST_STEAM;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED, CC_PIECE_GOODS); 
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [BAKE, PCL_, BEER, CHSE, MEAT, OYST, EOIL, LVST, BOOM, VBOD, VEHI];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OPEN),
							string(STR_CONCAT_3C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF),
								string(STR_SUFFIX_PRIVATE)
							)
						);
	speed: switch_speedboost_1;
	purchase_speed: return 100;
	cargo_capacity: return 60;
	default: switch_toki_25000_all_loadstack;
	purchase: switch_toki_25000_purchase;
	cargo_subtype_text: switch_toki_25000_subtype_text;
	colour_mapping: switch_generic_recolour;
	}
}

//toki 15000

switch(FEAT_TRAINS, SELF, switch_toki_15000_purchase, current_year) {
	0..1949: spriteset_toki_15000_jgr_purchase;
	spriteset_toki_15000_jnr_purchase;
	}



switch(FEAT_TRAINS, SELF, switch_toki_15000_all_loadstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  spriteset_toki_15000_black;
    1:  switch_toki_25000_cargo_type; //todo give its own class switch
}


item (FEAT_TRAINS, toki_15000, 1470) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	climates_available: ALL_CLIMATES;
	introduction_date: date(1943,1,1);
	speed: 75 km/h;
	name: string(STR_NAME_TOKI_15000);
	refit_cost: 0;
	power: 0;
	cargo_capacity: 50;
	loading_speed: 40;
	length: 7;
	weight: 16;
	cost_factor: 30;
	running_cost_factor: 5;
	running_cost_base: RUNNING_COST_STEAM;
	refittable_cargo_classes: bitmask(CC_BULK, CC_COVERED, CC_PIECE_GOODS); 
	non_refittable_cargo_classes: 0;
	cargo_disallow_refit: [BAKE, PCL_, BEER, CHSE, MEAT, OYST, EOIL, LVST, BOOM, VBOD, VEHI];
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OPEN),
							string(STR_CONCAT_3C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 75;
	cargo_capacity: return 50;
	default: switch_toki_15000_all_loadstack;
	purchase: switch_toki_15000_purchase;
	colour_mapping: switch_generic_recolour;
	}
}


spriteset(spriteset_ta_1_a, "gfx/freight/ta_1.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_ta_1_b, "gfx/freight/ta_1.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_ta_1_c, "gfx/freight/ta_1.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_ta_1_overlay_blank, "gfx/freight/ta_1.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ta_1_overlay_a, "gfx/freight/ta_1.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_ta_1_overlay_b, "gfx/freight/ta_1.png") {
	template_2cc_std(1, 96)
}

//purchase
spriteset(spriteset_ta_1_purchase, "gfx/freight/ta_1.png") {
	template_purchase(1, 448)
}

//overlays

alternative_sprites(spriteset_ta_1_overlay_blank, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/ta_overlay.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_ta_1_overlay_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/ta_overlay.png") {
	template_2cc_std(1, 32)
}

alternative_sprites(spriteset_ta_1_overlay_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/ta_overlay.png") {
	template_2cc_std(1, 64)
}

//randoms
random_switch(FEAT_TRAINS, SELF, random_ta_1_livery) {
	1: spriteset_ta_1_a;
	1: spriteset_ta_1_b;
	1: spriteset_ta_1_c;
}

//wear overlay
random_switch(FEAT_TRAINS, SELF, random_ta_1_wear) {
	1: spriteset_ta_1_overlay_a;
	1: spriteset_ta_1_overlay_b;
	1: spriteset_ta_1_overlay_blank;
}

switch(FEAT_TRAINS, SELF, switch_ta_1_wearstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_ta_1_livery;
    1:  random_ta_1_wear;
}

item (FEAT_TRAINS, ta_1, 1480) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_TA_1);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1870,1,1);
		speed: 60 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 15; 
		refit_cost: 0;
		refittable_cargo_classes: bitmask (CC_LIQUID);
		loading_speed: 30;
		weight: 8;
		cost_factor: 14;
		running_cost_factor: 2;
		running_cost_base: RUNNING_COST_STEAM;
		length: 4;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_TANK),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_PRIVATE)
							)
						);

		speed: switch_speedboost_1;
		purchase_speed: return 60;
//		cargo_capacity: return 0;
		default: switch_ta_1_wearstack;
		purchase: spriteset_ta_1_purchase;
//		cargo_subtype_text: switch_taki_1000_subtype_text;
		
	}
}
spriteset(spriteset_tasa_500_black_a, "gfx/freight/tasa_500.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_tasa_500_black_b, "gfx/freight/tasa_500.png") {
	template_2cc_std(1, 32)
}


spriteset(spriteset_tasa_500_silver_a, "gfx/freight/tasa_500.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_tasa_500_silver_b, "gfx/freight/tasa_500.png") {
	template_2cc_std(1, 160)
}



//overlay dummies

spriteset(spriteset_tasa_500_overlay_blank, "gfx/freight/tasa_500.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_tasa_500_overlay_a, "gfx/freight/tasa_500.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_tasa_500_overlay_b, "gfx/freight/tasa_500.png") {
	template_2cc_std(1, 256)
}



//purchase
spriteset(spriteset_tasa_500_jgr_purchase, "gfx/freight/tasa_500.png") {
	template_purchase(1, 448)
}

spriteset(spriteset_tasa_500_jnr_purchase, "gfx/freight/tasa_500.png") {
	template_purchase(1, 480)
}

//overlays

alternative_sprites(spriteset_tasa_500_overlay_blank, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/ta_overlay.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_tasa_500_overlay_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/ta_overlay.png") {
	template_2cc_std(1, 128)
}



alternative_sprites(spriteset_tasa_500_overlay_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/ta_overlay.png") {
	template_2cc_std(1, 192)
}



//forward

random_switch(FEAT_TRAINS, SELF, random_tasa_500_all_livery) {
	3: spriteset_tasa_500_black_a;
	3: spriteset_tasa_500_black_b;
	1: spriteset_tasa_500_silver_a;
	1: spriteset_tasa_500_silver_b;
}

random_switch(FEAT_TRAINS, SELF, random_tasa_500_black_livery) {
	1: spriteset_tasa_500_black_a;
	1: spriteset_tasa_500_black_b;
}

random_switch(FEAT_TRAINS, SELF, random_tasa_500_silver_livery) {
	1: spriteset_tasa_500_silver_a;
	1: spriteset_tasa_500_silver_b;
}

switch(FEAT_TRAINS, SELF, switch_tasa_500_livery, cargo_subtype) {
	1: random_tasa_500_black_livery;
	2: random_tasa_500_silver_livery;
	random_tasa_500_all_livery;
}


//wear overlay
random_switch(FEAT_TRAINS, SELF, random_tasa_500_wear) {
	1: spriteset_tasa_500_overlay_a;
	1: spriteset_tasa_500_overlay_b;
	1: spriteset_tasa_500_overlay_blank;
}

switch(FEAT_TRAINS, SELF, switch_tasa_500_wearstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_tasa_500_livery;
    1:  random_tasa_500_wear;
}



switch(FEAT_TRAINS, SELF, switch_tasa_500_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_SILVER));
	   return CB_RESULT_NO_TEXT;
}


switch(FEAT_TRAINS, SELF, switch_tasa_500_purchase, current_year) {
	0..1949: spriteset_tasa_500_jgr_purchase;
	spriteset_tasa_500_jnr_purchase;
	}


item (FEAT_TRAINS, tasa_500, 1481) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_TASA_500);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1915,1,1);
		speed: 65 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 25; 
		refit_cost: 0;
		refittable_cargo_classes: bitmask (CC_LIQUID);
		loading_speed: 30;
		weight: 11;
		cost_factor: 18;
		running_cost_factor: 3;
		running_cost_base: RUNNING_COST_STEAM;
		length: 5;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_FRT_TANK),
								string(STR_CONCAT_2C, 									
									string(STR_SUFFIX_JGR),
									string(STR_SUFFIX_JNR)
								)
							);

		speed: switch_speedboost_1;
		purchase_speed: return 65;
//		cargo_capacity: return 0;
		default: switch_tasa_500_wearstack;
		purchase: switch_tasa_500_purchase;
		cargo_subtype_text: switch_tasa_500_subtype_text;
		reverse_build_probability: return 50;
	}
}
spriteset(spriteset_taki_25000_silver_a, "gfx/freight/tasa_5700.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_taki_25000_silver_b, "gfx/freight/tasa_5700.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_taki_25000_white_a, "gfx/freight/tasa_5700.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_taki_25000_white_b, "gfx/freight/tasa_5700.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_tasa_5700_silver_a, "gfx/freight/tasa_5700.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_tasa_5700_silver_b, "gfx/freight/tasa_5700.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_tasa_5700_white_a, "gfx/freight/tasa_5700.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_tasa_5700_white_b, "gfx/freight/tasa_5700.png") {
	template_2cc_std(1, 224)
}

//overlay dummies
spriteset(spriteset_tasa_5700_overlay_blank, "gfx/freight/tasa_5700.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_tasa_5700_overlay_a, "gfx/freight/tasa_5700.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_tasa_5700_overlay_b, "gfx/freight/tasa_5700.png") {
	template_2cc_std(1, 416)
}

//overlays
alternative_sprites(spriteset_tasa_5700_overlay_blank, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_overlay.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_tasa_5700_overlay_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_overlay.png") {
	template_2cc_std(1, 160)
}

alternative_sprites(spriteset_tasa_5700_overlay_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_overlay.png") {
	template_2cc_std(1, 192)
}

//purchase

spriteset(spriteset_tasa_5700_jnr_purchase, "gfx/freight/tasa_5700.png") {
	template_purchase(1, 480)
}

spriteset(spriteset_tasa_5700_jrf_purchase, "gfx/freight/tasa_5700.png") {
	template_purchase(89, 480)
}



//forward

random_switch(FEAT_TRAINS, SELF, random_tasa_5700_all_livery) {
	2: spriteset_tasa_5700_white_a;
	2: spriteset_tasa_5700_white_b;
	6: spriteset_tasa_5700_silver_a;
	6: spriteset_tasa_5700_silver_b;
	1: spriteset_taki_25000_white_a;
	1: spriteset_taki_25000_white_b;
	2: spriteset_taki_25000_silver_a;
	2: spriteset_taki_25000_silver_b;
}

random_switch(FEAT_TRAINS, SELF, random_tasa_5700_white_livery) {
	2: spriteset_tasa_5700_white_a;
	2: spriteset_tasa_5700_white_b;
	1: spriteset_taki_25000_white_a;
	1: spriteset_taki_25000_white_b;
}

random_switch(FEAT_TRAINS, SELF, random_tasa_5700_silver_livery) {
	2: spriteset_tasa_5700_silver_a;
	2: spriteset_tasa_5700_silver_b;
	1: spriteset_taki_25000_silver_a;
	1: spriteset_taki_25000_silver_b;
}

switch(FEAT_TRAINS, SELF, switch_tasa_5700_livery, cargo_subtype) {
	1: random_tasa_5700_white_livery;
	2: random_tasa_5700_silver_livery;
	random_tasa_5700_all_livery;
}



switch(FEAT_TRAINS, SELF, switch_tasa_5700_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_WHITE));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_SILVER));
	   return CB_RESULT_NO_TEXT;
}

//wear overlay
random_switch(FEAT_TRAINS, SELF, random_tasa_5700_wear) {
	1: spriteset_tasa_5700_overlay_a;
	1: spriteset_tasa_5700_overlay_b;
	1: spriteset_tasa_5700_overlay_blank;
}

switch(FEAT_TRAINS, SELF, switch_tasa_5700_wearstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_tasa_5700_livery;
    1:  random_tasa_5700_wear;
}

switch(FEAT_TRAINS, SELF, switch_tasa_5700_purchase, current_year) {
	0..1987: spriteset_tasa_5700_jnr_purchase;
	spriteset_tasa_5700_jrf_purchase;
	}


item (FEAT_TRAINS, tasa_5700, 1485) {
property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_TASA_5700);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1963,1,1);
		speed: 85 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 25; 
		refit_cost: 0;
		cargo_disallow_refit: [OIL_, PETR, FUEL, EOIL, MILK, SULP, WATR, BEER, KAOL, RUBR];
		refittable_cargo_classes: bitmask (CC_LIQUID);
		loading_speed: 30;
		weight: 11;
		cost_factor: 40;
		running_cost_factor: 6;
		running_cost_base: RUNNING_COST_STEAM;
		length: 8;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
								string(STR_DESC_NARROWGAUGE),
								string(STR_DESC_USAGE_FRT_GAS),
								string(STR_CONCAT_2C, 									
									string(STR_SUFFIX_JNR),
									string(STR_SUFFIX_JRF)
								)
							);

		speed: switch_speedboost_1;
		purchase_speed: return 85;
		cargo_capacity: return 50;
		default: switch_tasa_5700_wearstack;
		purchase: switch_tasa_5700_purchase;
		cargo_subtype_text: switch_tasa_5700_subtype_text;
		
	}
}
spriteset(spriteset_tamu_500_black_a, "gfx/freight/tamu_500.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_tamu_500_black_b, "gfx/freight/tamu_500.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_tamu_500_black_c, "gfx/freight/tamu_500.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_tamu_500_black_d, "gfx/freight/tamu_500.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_tamu_500_silver_a, "gfx/freight/tamu_500.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_tamu_500_silver_b, "gfx/freight/tamu_500.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_tamu_500_silver_c, "gfx/freight/tamu_500.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_tamu_500_silver_d, "gfx/freight/tamu_500.png") {
	template_2cc_std(1, 224)
}

//overlay dummies
spriteset(spriteset_tamu_500_overlay_blank, "gfx/freight/tamu_500.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_tamu_500_overlay_a, "gfx/freight/tamu_500.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_tamu_500_overlay_b, "gfx/freight/tamu_500.png") {
	template_2cc_std(1, 416)
}

//overlays
alternative_sprites(spriteset_tamu_500_overlay_blank, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/ta_overlay.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_tamu_500_overlay_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/ta_overlay.png") {
	template_2cc_std(1, 256)
}

alternative_sprites(spriteset_tamu_500_overlay_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/ta_overlay.png") {
	template_2cc_std(1, 288)
}


//purchase
spriteset(spriteset_tamu_500_jgr_purchase, "gfx/freight/tamu_500.png") {
	template_purchase(1, 448)
}

spriteset(spriteset_tamu_500_jnr_purchase, "gfx/freight/tamu_500.png") {
	template_purchase(1, 480)
}

spriteset(spriteset_tamu_500_jrf_purchase, "gfx/freight/tamu_500.png") {
	template_purchase(89, 480)
}




//randoms
random_switch(FEAT_TRAINS, SELF, random_tamu_500_all_livery) {
	3: spriteset_tamu_500_black_a;
	3: spriteset_tamu_500_black_b;
	3: spriteset_tamu_500_black_c;
	3: spriteset_tamu_500_black_d;
	1: spriteset_tamu_500_silver_a;
	1: spriteset_tamu_500_silver_b;
	1: spriteset_tamu_500_silver_c;
	1: spriteset_tamu_500_silver_d;
}

random_switch(FEAT_TRAINS, SELF, random_tamu_500_black_livery) {
	1: spriteset_tamu_500_black_a;
	1: spriteset_tamu_500_black_b;
	1: spriteset_tamu_500_black_c;
	1: spriteset_tamu_500_black_d;
}

random_switch(FEAT_TRAINS, SELF, random_tamu_500_silver_livery) {
	1: spriteset_tamu_500_silver_a;
	1: spriteset_tamu_500_silver_b;
	1: spriteset_tamu_500_silver_c;
	1: spriteset_tamu_500_silver_d;
}

switch(FEAT_TRAINS, SELF, switch_tamu_500_livery, cargo_subtype) {
	1: random_tamu_500_black_livery;
	2: random_tamu_500_silver_livery;
	random_tamu_500_all_livery;
}


//wear overlay
random_switch(FEAT_TRAINS, SELF, random_tamu_500_wear) {
	1: spriteset_tamu_500_overlay_a;
	1: spriteset_tamu_500_overlay_b;
	1: spriteset_tamu_500_overlay_blank;
}



switch(FEAT_TRAINS, SELF, switch_tamu_500_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_SILVER));
	   return CB_RESULT_NO_TEXT;
}

switch(FEAT_TRAINS, SELF, switch_tamu_500_wearstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_tamu_500_livery;
    1:  random_tamu_500_wear;
}


switch(FEAT_TRAINS, SELF, switch_tamu_500_purchase, current_year) {
	0..1949: spriteset_tamu_500_jgr_purchase;
	1949..1987: spriteset_tamu_500_jnr_purchase;
	spriteset_tamu_500_jrf_purchase;
	}

item (FEAT_TRAINS, tamu_500, 1482) {

property {
	sprite_id: SPRITE_ID_NEW_TRAIN;
	track_type: TR_1067_NE;
	name: string(STR_NAME_TAMU_500);
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	introduction_date: date(1930,1,1);
	speed: 75 km/h;
	climates_available: ALL_CLIMATES;
	air_drag_coefficient: 0;
	power: 0;
	dual_headed: 0;
	cargo_capacity: 30; 
	refit_cost: 0;
	refittable_cargo_classes: bitmask (CC_LIQUID);
	loading_speed: 30;
	weight: 10;
	cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
	length: 5;
	misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
graphics {
	additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_TANK),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR)
							)
						);

	speed: switch_speedboost_1;
	purchase_speed: return 75;
	cargo_capacity: return 30;
	default: switch_tamu_500_wearstack;
	purchase: switch_tamu_500_purchase;
	cargo_subtype_text: switch_tamu_500_subtype_text;
		
	}
}
spriteset(spriteset_taki_1000_green_a, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 1)
}


spriteset(spriteset_taki_1000_green_b, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_taki_1000_blue_a, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_taki_1000_blue_b, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_taki_1000_blue_c, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_taki_1000_silver, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_taki_1000_black_a, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_taki_1000_black_b, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_taki_1000_overlay_a, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_taki_1000_overlay_b, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_taki_1000_overlay_c, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 320)
}

spriteset(spriteset_taki_1000_overlay_blank, "gfx/freight/taki_1000.png") {
	template_2cc_std(1, 352)
}

//alt sprites
alternative_sprites(spriteset_taki_1000_green_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_1000.png") {
	template_2cc_std(1, 1)
}


alternative_sprites(spriteset_taki_1000_green_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_1000.png") {
	template_2cc_std(1, 32)
}

alternative_sprites(spriteset_taki_1000_blue_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_1000.png") {
	template_2cc_std(1, 64)
}

alternative_sprites(spriteset_taki_1000_blue_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_1000.png") {
	template_2cc_std(1, 96)
}

alternative_sprites(spriteset_taki_1000_blue_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_1000.png") {
	template_2cc_std(1, 128)
}




alternative_sprites(spriteset_taki_1000_overlay_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_1000.png") {
	template_2cc_std(1, 256)
}

alternative_sprites(spriteset_taki_1000_overlay_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_1000.png") {
	template_2cc_std(1, 288)
}

alternative_sprites(spriteset_taki_1000_overlay_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_1000.png") {
	template_2cc_std(1, 320)
}


//purchase
spriteset(spriteset_taki_1000_purchase, "gfx/freight/taki_1000.png") {
	template_purchase(89, 480)
}

spriteset(spriteset_taki_43000_jnr_purchase, "gfx/freight/taki_1000.png") {
	template_purchase(1, 448)
}

spriteset(spriteset_taki_43000_jrf_purchase, "gfx/freight/taki_1000.png") {
	template_purchase(89, 448)
}

alternative_sprites(spriteset_taki_1000_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_1000.png") {
	template_purchase(89, 480)
}

alternative_sprites(spriteset_taki_43000_jrf_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_1000.png") {
	template_purchase(89, 448)
}

//randoms
random_switch(FEAT_TRAINS, SELF, random_taki_1000_green) {
	1: spriteset_taki_1000_green_a;
	1: spriteset_taki_1000_green_b;
}

random_switch(FEAT_TRAINS, SELF, random_taki_1000_blue) {
	3: spriteset_taki_1000_blue_a;
	1: spriteset_taki_1000_blue_b;
	1: spriteset_taki_1000_blue_c;
}

random_switch(FEAT_TRAINS, SELF, random_taki_1000_black) {
	1: spriteset_taki_1000_black_a;
	1: spriteset_taki_1000_black_b;
}


random_switch(FEAT_TRAINS, SELF, random_taki_1000) {
	2: spriteset_taki_1000_green_a;
	2: spriteset_taki_1000_green_b;
	3: spriteset_taki_1000_blue_a;
	1: spriteset_taki_1000_blue_b;
	1: spriteset_taki_1000_blue_c;
}


switch(FEAT_TRAINS, SELF, switch_taki_1000_livery, cargo_subtype) {
	1: random_taki_1000_green;
	2: random_taki_1000_blue;
	random_taki_1000;
}

switch(FEAT_TRAINS, SELF, switch_taki_1000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2F, string(STR_COLOUR_LTGREEN), string(STR_COLOUR_GREY));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_BLUE));
	   return CB_RESULT_NO_TEXT;
}

//wear overlay
random_switch(FEAT_TRAINS, SELF, random_taki_1000_wear) {
	1: spriteset_taki_1000_overlay_a;
	1: spriteset_taki_1000_overlay_b;
	1: spriteset_taki_1000_overlay_c;
	1: spriteset_taki_1000_overlay_blank;
}

switch(FEAT_TRAINS, SELF, switch_taki_1000_wearstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_taki_1000_livery;
    1:  random_taki_1000_wear;
}


item (FEAT_TRAINS, taki_1000, 1490) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_TAKI_1000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1993,1,1);
		speed: 110 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 55; 
		refit_cost: 0;
		refittable_cargo_classes: bitmask (CC_LIQUID);
		loading_speed: 50;
		weight: 20;
		cost_factor: 50;
	running_cost_factor: 8;
	running_cost_base: RUNNING_COST_STEAM;
		length: 6;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OIL),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JRF)
							)
						);
		speed: switch_speedboost_1;
		purchase_speed: return 110;
		default: switch_taki_1000_wearstack;
		purchase: spriteset_taki_1000_purchase;
		cargo_subtype_text: switch_taki_1000_subtype_text;
		reverse_build_probability: return 50;
	}
}


//taki 43000


switch(FEAT_TRAINS, SELF, switch_taki_43000_purchase, current_year) {
	0..1987: spriteset_taki_43000_jnr_purchase;
	spriteset_taki_43000_jrf_purchase;
	}



random_switch(FEAT_TRAINS, SELF, random_taki_43000) {
	1: spriteset_taki_1000_green_a;
	1: spriteset_taki_1000_green_b;
	2: spriteset_taki_1000_blue_a;
	2: spriteset_taki_1000_silver;
	1: spriteset_taki_1000_black_a;
	1: spriteset_taki_1000_black_b;	
}


switch(FEAT_TRAINS, SELF, switch_taki_43000_livery, cargo_subtype) {
	1: random_taki_1000_green;
	2: spriteset_taki_1000_blue_a;
	3: spriteset_taki_1000_silver;
	4: random_taki_1000_black;
	random_taki_43000;
}

switch(FEAT_TRAINS, SELF, switch_taki_43000_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_2F, string(STR_COLOUR_LTGREEN), string(STR_COLOUR_GREY));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_BLUE));
	3: return string(STR_CONCAT_1F, string(STR_COLOUR_SILVER));
	4: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	   return CB_RESULT_NO_TEXT;
}


switch(FEAT_TRAINS, SELF, switch_taki_43000_wearstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_taki_43000_livery;
    1:  random_taki_1000_wear;
}


item (FEAT_TRAINS, taki_43000, 1496) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_TAKI_43000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1967,1,1);
		speed: 85 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 50; 
		refit_cost: 0;
		refittable_cargo_classes: bitmask (CC_LIQUID);
		loading_speed: 30;
		weight: 20;
		cost_factor: 40;
	running_cost_factor: 6;
	running_cost_base: RUNNING_COST_STEAM;
		length: 6;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OIL),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF)
							)
						);

		speed: switch_speedboost_1;
		purchase_speed: return 85;
//		cargo_capacity: return 0;
		default: switch_taki_43000_wearstack;
		purchase: switch_taki_43000_purchase;
		cargo_subtype_text: switch_taki_43000_subtype_text;
		reverse_build_probability: return 50;
	}
}
spriteset(spriteset_taki_3000_a, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_taki_3000_b, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_taki_3000_c, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_taki_3000_d, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_taki_3000_e, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_taki_3000_f, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 160)
}

spriteset(spriteset_taki_3000_g, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 192)
}

spriteset(spriteset_taki_3000_h, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 224)
}

spriteset(spriteset_taki_3000_i, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_taki_3000_j, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 288)
}




spriteset(spriteset_taki_3000_overlay_blank, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_taki_3000_overlay_a, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_taki_3000_overlay_b, "gfx/freight/taki_3000.png") {
	template_2cc_std(1, 416)
}

//purchase
spriteset(spriteset_taki_3000_jgr_purchase, "gfx/freight/taki_3000.png") {
	template_purchase(1, 448)
}

spriteset(spriteset_taki_3000_jnr_purchase, "gfx/freight/taki_3000.png") {
	template_purchase(1, 480)
}

spriteset(spriteset_taki_3000_jrf_purchase, "gfx/freight/taki_3000.png") {
	template_purchase(89, 480)
}
//overlays

alternative_sprites(spriteset_taki_3000_overlay_blank, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/ta_overlay.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_taki_3000_overlay_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_overlay.png") {
	template_2cc_std(1, 32)
}

alternative_sprites(spriteset_taki_3000_overlay_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_overlay.png") {
	template_2cc_std(1, 64)
}

//randoms
random_switch(FEAT_TRAINS, SELF, random_taki_3000_livery) {
	1: spriteset_taki_3000_a;
	1: spriteset_taki_3000_b;
	1: spriteset_taki_3000_d;
	1: spriteset_taki_3000_e;
	1: spriteset_taki_3000_f;
	1: spriteset_taki_3000_g;
	1: spriteset_taki_3000_h;
	1: spriteset_taki_3000_i;
	1: spriteset_taki_3000_j;
	
}

//wear overlay
random_switch(FEAT_TRAINS, SELF, random_taki_3000_wear) {
	1: spriteset_taki_3000_overlay_a;
	1: spriteset_taki_3000_overlay_b;
	1: spriteset_taki_3000_overlay_blank;
}

switch(FEAT_TRAINS, SELF, switch_taki_3000_wearstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  random_taki_3000_livery;
    1:  random_taki_3000_wear;
}

switch(FEAT_TRAINS, SELF, switch_taki_3000_purchase, current_year) {
	0..1949: spriteset_taki_3000_jgr_purchase;
	1949..1987: spriteset_taki_3000_jnr_purchase;
	spriteset_taki_3000_jrf_purchase;
	}

item (FEAT_TRAINS, taki_3000, 1489) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_TAKI_3000);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1947,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 48; 
		refit_cost: 0;
		refittable_cargo_classes: bitmask (CC_LIQUID);
		loading_speed: 30;
		weight: 20;
		cost_factor: 30;
	running_cost_factor: 5;
	running_cost_base: RUNNING_COST_STEAM;
		length: 7;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_OIL),
							string(STR_CONCAT_2C, 									
								string(STR_SUFFIX_JGR),
								string(STR_SUFFIX_JNR)
							)
						);

		speed: switch_speedboost_1;
		purchase_speed: return 75;
//		cargo_capacity: return 0;
		default: switch_taki_3000_wearstack;
		purchase: switch_taki_3000_purchase;
//		cargo_subtype_text: switch_taki_1000_subtype_text;
		
	}
}
spriteset(spriteset_taki_5450_yellow_a, "gfx/freight/taki_5450.png") {
	template_2cc_std(1, 1)
}

spriteset(spriteset_taki_5450_yellow_b, "gfx/freight/taki_5450.png") {
	template_2cc_std(1, 32)
}

spriteset(spriteset_taki_5450_silver_a, "gfx/freight/taki_5450.png") {
	template_2cc_std(1, 64)
}

spriteset(spriteset_taki_5450_silver_b, "gfx/freight/taki_5450.png") {
	template_2cc_std(1, 96)
}

spriteset(spriteset_taki_5450_black_a, "gfx/freight/taki_5450.png") {
	template_2cc_std(1, 128)
}

spriteset(spriteset_taki_5450_black_b, "gfx/freight/taki_5450.png") {
	template_2cc_std(1, 160)
}

//overlay dummies
spriteset(spriteset_taki_5450_overlay_blank, "gfx/freight/taki_5450.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_taki_5450_overlay_a, "gfx/freight/taki_5450.png") {
	template_2cc_std(1, 416)
}

spriteset(spriteset_taki_5450_overlay_b, "gfx/freight/taki_5450.png") {
	template_2cc_std(1, 416)
}

//overlays
alternative_sprites(spriteset_taki_5450_overlay_blank, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_overlay.png") {
	template_2cc_std(1, 1)
}

alternative_sprites(spriteset_taki_5450_overlay_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_overlay.png") {
	template_2cc_std(1, 96)
}

alternative_sprites(spriteset_taki_5450_overlay_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/freight/32bpp/taki_overlay.png") {
	template_2cc_std(1, 128)
}

//purchase

spriteset(spriteset_taki_5450_jnr_purchase, "gfx/freight/taki_5450.png") {
	template_purchase(1, 480)
}

spriteset(spriteset_taki_5450_jrf_purchase, "gfx/freight/taki_5450.png") {
	template_purchase(89, 480)
}



//forward

random_switch(FEAT_TRAINS, SELF, random_taki_5450_all_livery) {
	6: spriteset_taki_5450_yellow_a;
	6: spriteset_taki_5450_yellow_b;
	1: spriteset_taki_5450_black_a;
	1: spriteset_taki_5450_black_b;
	1: spriteset_taki_5450_silver_a;
	1: spriteset_taki_5450_silver_b;
}

random_switch(FEAT_TRAINS, SELF, random_taki_5450_yellow_livery) {
	1: spriteset_taki_5450_yellow_a;
	2: spriteset_taki_5450_yellow_b;
}

random_switch(FEAT_TRAINS, SELF, random_taki_5450_black_livery) {
	2: spriteset_taki_5450_black_a;
	1: spriteset_taki_5450_black_b;
}

random_switch(FEAT_TRAINS, SELF, random_taki_5450_silver_livery) {
	1: spriteset_taki_5450_silver_a;
	1: spriteset_taki_5450_silver_b;
}

switch(FEAT_TRAINS, SELF, switch_taki_5450_livery, cargo_subtype) {
	1: random_taki_5450_yellow_livery;
	2: random_taki_5450_silver_livery;
	3: random_taki_5450_black_livery;
	random_taki_5450_all_livery;
}



switch(FEAT_TRAINS, SELF, switch_taki_5450_subtype_text, cargo_subtype) {
	0: return string(STR_REFIT_RANDOM);
	1: return string(STR_CONCAT_1F, string(STR_COLOUR_YELLOW));
	2: return string(STR_CONCAT_1F, string(STR_COLOUR_SILVER));
	3: return string(STR_CONCAT_1F, string(STR_COLOUR_BLACK));
	   return CB_RESULT_NO_TEXT;
}

//wear overlay
random_switch(FEAT_TRAINS, SELF, random_taki_5450_wear) {
	1: spriteset_taki_5450_overlay_a;
	1: spriteset_taki_5450_overlay_b;
	1: spriteset_taki_5450_overlay_blank;
}

switch(FEAT_TRAINS, SELF, switch_taki_5450_wearstack, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0:  switch_taki_5450_livery;
    1:  random_taki_5450_wear;
}

switch(FEAT_TRAINS, SELF, switch_taki_5450_purchase, current_year) {
	0..1987: spriteset_taki_5450_jnr_purchase;
	spriteset_taki_5450_jrf_purchase;
	}


item (FEAT_TRAINS, taki_5450, 1491) {
	property {
		sprite_id: SPRITE_ID_NEW_TRAIN;
		track_type: TR_1067_NE;
		name: string(STR_NAME_TAKI_5450);
		climates_available: ALL_CLIMATES;
		introduction_date: date(1964,1,1);
		speed: 75 km/h;
		air_drag_coefficient: 0;
		power: 0;
		dual_headed: 0;
		cargo_capacity: 40; 
		refit_cost: 0;
		refittable_cargo_classes: bitmask (CC_LIQUID);
		cargo_disallow_refit: [OIL_, PETR, FUEL];
		loading_speed: 30;
		weight: 17;
		cost_factor: 22;
	running_cost_factor: 4;
	running_cost_base: RUNNING_COST_STEAM;
		length: 6;
		misc_flags: bitmask(TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);
	}
	graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_CHEM),
							string(STR_CONCAT_3C, 									
								string(STR_SUFFIX_JNR),
								string(STR_SUFFIX_JRF),
								string(STR_SUFFIX_PRIVATE)
							)
						);

		speed: switch_speedboost_1;
		purchase_speed: return 75;
//		cargo_capacity: return 0;
		default: switch_taki_5450_wearstack;
		purchase: switch_taki_5450_purchase;
		cargo_subtype_text: switch_taki_5450_subtype_text;
		
	}
}



//all redundant with removal of japanset dependency

/*

//fix string bug in JP trains

item (FEAT_TRAINS, jgr_7050, 0x87) {

property {
		name: string(STR_NAME_7050);
	}
}

//override armoured wagons

item (FEAT_TRAINS, armoured_van_1, 0x503) {

property {
		climates_available: NO_CLIMATE;
	}
}

item (FEAT_TRAINS, armoured_van_2, 0x507) {

property {
		climates_available: NO_CLIMATE;
	}
}

item (FEAT_TRAINS, armoured_van_3, 0x509) {

property {
		climates_available: NO_CLIMATE;
	}
}

//override vanilla pax wagons

item (FEAT_TRAINS, combined_pax, 0x6b) {

property {
		climates_available: NO_CLIMATE;
	}
}

item (FEAT_TRAINS, combined_mail, 0x6c) {

property {
		climates_available: NO_CLIMATE;
	}
}

//override KOKI with M250 trailer

//remove pending recode of M250

spriteset(spriteset_m250_trailer_empty, "gfx/freight/m250.png") {
	template_2cc_std(1, 256)
}

spriteset(spriteset_m250_trailer_half, "gfx/freight/m250.png") {
	template_2cc_std(1, 288)
}

spriteset(spriteset_m250_trailer_full, "gfx/freight/m250.png") {
	template_2cc_std(1, 320)
}

spritegroup spritegroup_m250_trailer {
    loading: [spriteset_m250_trailer_empty, spriteset_m250_trailer_half, spriteset_m250_trailer_full];
    loaded: [spriteset_m250_trailer_empty, spriteset_m250_trailer_half, spriteset_m250_trailer_full];
}

spriteset(spriteset_m250_trailer_purchase, "gfx/freight/m250.png") {
	template_purchase(89, 352)
}

item (FEAT_TRAINS, m250_trailer, 39) {

property {
		climates_available: ALL_CLIMATES;
		name: string(STR_NAME_M250_TRAILER);
		introduction_date: date(2003,1,1);
		speed: 130 km/h;
		cost_factor: 50;
		running_cost_factor: 9;
		running_cost_base: RUNNING_COST_STEAM;
	}
graphics {
		additional_text:	string(STR_CONCAT_3S, 
							string(STR_DESC_NARROWGAUGE),
							string(STR_DESC_USAGE_FRT_T260),
							string(STR_CONCAT_1C, 									
								string(STR_SUFFIX_JRF)
							)
						);

		cargo_capacity: return 70;
		cargo_age_period: switch_container_cargo_decay;
		default: spritegroup_m250_trailer;
		purchase: spriteset_m250_trailer_purchase;
	}
}


item (FEAT_TRAINS, m250, 77) {

property {
		climates_available: ALL_CLIMATES;
		name: string(STR_NAME_JR_M250);
		introduction_date: date(2003,1,1);
		cargo_capacity: 70;
	//	speed: 130 km/h;
	}
}
*/






